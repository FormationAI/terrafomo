-- This module is auto-generated.

{-# LANGUAGE DataKinds              #-}
{-# LANGUAGE DeriveGeneric          #-}
{-# LANGUAGE DuplicateRecordFields  #-}
{-# LANGUAGE FlexibleContexts       #-}
{-# LANGUAGE FlexibleInstances      #-}
{-# LANGUAGE FunctionalDependencies #-}
{-# LANGUAGE MultiParamTypeClasses  #-}
{-# LANGUAGE OverloadedStrings      #-}
{-# LANGUAGE TemplateHaskell        #-}
{-# LANGUAGE TypeFamilies           #-}

module Terraform.AWS.Resource.M06 where

import Data.Text (Text)

import GHC.Generics (Generic)

import Terraform.AWS.Provider (AWS, newResource)
import Terraform.AWS.Types
import Terraform.Syntax.Attribute (Attr, Computed)

import qualified Terraform.Syntax.TH as TH

-- | The @aws_api_gateway_api_key@ AWS resource.
--
-- Provides an API Gateway API Key.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- mydemoapi <- resource "mydemoapi" $
--     api_gateway_rest_api_resource
--         & name .~ "MyDemoAPI"
--  
-- mydemoapikey <- resource "mydemoapikey" $
--     api_gateway_api_key_resource
--         & name .~ "demo"
--  
-- mydemodeployment <- resource "mydemodeployment" $
--     api_gateway_deployment_resource
--         & rest_api_id .~ compute MyDemoAPI @"id"
--         & stage_name .~ "test"
-- @
data Api_Gateway_Api_Key_Resource = Api_Gateway_Api_Key_Resource
    { description :: !(Attr Text)
      {- ^ (Optional) The API key description. Defaults to "Managed by Terraform". -}
    , enabled :: !(Attr Text)
      {- ^ (Optional) Specifies whether the API key can be used by callers. Defaults to @true@ . -}
    , name :: !(Attr Text)
      {- ^ (Required) The name of the API key -}
    , stage_key :: !(Attr Text)
      {- ^ (Optional) A list of stage keys associated with the API key - see below -}
    , value :: !(Attr Text)
      {- ^ (Optional) The value of the API key. If not specified, it will be automatically generated by AWS on creation. -}
    } deriving (Show, Eq, Generic)

type instance Computed Api_Gateway_Api_Key_Resource
    = '[ '("created_date", Attr Text)
         {- - The creation date of the API key -}
      , '("id", Attr Text)
         {- - The ID of the API key -}
      , '("last_updated_date", Attr Text)
         {- - The last update date of the API key -}
      , '("value", Attr Text)
         {- - The value of the API key -}
       ]

$(TH.makeResource
    "aws_api_gateway_api_key"
    ''AWS
    'newResource
    ''Api_Gateway_Api_Key_Resource)

-- | The @aws_api_gateway_method_settings@ AWS resource.
--
-- Provides an API Gateway Method Settings, e.g. logging or monitoring.
data Api_Gateway_Method_Settings_Resource = Api_Gateway_Method_Settings_Resource
    { method_path :: !(Attr Text)
      {- ^ (Required) Method path defined as @{resource_path}/{http_method}@ for an individual method override, or @*/*@ for overriding all methods in the stage. -}
    , rest_api_id :: !(Attr Text)
      {- ^ (Required) The ID of the REST API -}
    , settings :: !(Attr Text)
      {- ^ (Required) The settings block, see below. -}
    , stage_name :: !(Attr Text)
      {- ^ (Required) The name of the stage -}
    } deriving (Show, Eq, Generic)

type instance Computed Api_Gateway_Method_Settings_Resource
    = '[]

$(TH.makeResource
    "aws_api_gateway_method_settings"
    ''AWS
    'newResource
    ''Api_Gateway_Method_Settings_Resource)

-- | The @aws_autoscaling_attachment@ AWS resource.
--
-- Provides an AutoScaling Attachment resource.
data Autoscaling_Attachment_Resource = Autoscaling_Attachment_Resource
    { alb_target_group_arn :: !(Attr Text)
      {- ^ (Optional) The ARN of an ALB Target Group. -}
    , autoscaling_group_name :: !(Attr Text)
      {- ^ (Required) Name of ASG to associate with the ELB. -}
    , elb :: !(Attr Text)
      {- ^ (Optional) The name of the ELB. -}
    } deriving (Show, Eq, Generic)

type instance Computed Autoscaling_Attachment_Resource
    = '[]

$(TH.makeResource
    "aws_autoscaling_attachment"
    ''AWS
    'newResource
    ''Autoscaling_Attachment_Resource)

-- | The @aws_cloudwatch_log_metric_filter@ AWS resource.
--
-- Provides a CloudWatch Log Metric Filter resource.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- yada <- resource "yada" $
--     cloudwatch_log_metric_filter_resource
--         & name .~ "MyAppAccessCount"
--         & pattern .~
--         & log_group_name .~ compute dada @"name"
--  
-- dada <- resource "dada" $
--     cloudwatch_log_group_resource
--         & name .~ "MyApp/access.log"
-- @
data Cloudwatch_Log_Metric_Filter_Resource = Cloudwatch_Log_Metric_Filter_Resource
    { log_group_name :: !(Attr Text)
      {- ^ (Required) The name of the log group to associate the metric filter with. -}
    , metric_transformation :: !(Attr Text)
      {- ^ (Required) A block defining collection of information needed to define how metric data gets emitted. See below. -}
    , name :: !(Attr Text)
      {- ^ (Required) A name for the metric filter. -}
    , pattern :: !(Attr Text)
      {- ^ (Required) A valid <https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html> for extracting metric data out of ingested log events. -}
    } deriving (Show, Eq, Generic)

type instance Computed Cloudwatch_Log_Metric_Filter_Resource
    = '[ '("id", Attr Text)
         {- - The name of the metric filter. -}
       ]

$(TH.makeResource
    "aws_cloudwatch_log_metric_filter"
    ''AWS
    'newResource
    ''Cloudwatch_Log_Metric_Filter_Resource)

-- | The @aws_cloudwatch_metric_alarm@ AWS resource.
--
-- Provides a CloudWatch Metric Alarm resource.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- foobar <- resource "foobar" $
--     cloudwatch_metric_alarm_resource
--         & alarm_name .~ "terraform-test-foobar5"
--         & comparison_operator .~ "GreaterThanOrEqualToThreshold"
--         & evaluation_periods .~ "2"
--         & metric_name .~ "CPUUtilization"
--         & namespace .~ "AWS/EC2"
--         & period .~ "120"
--         & statistic .~ "Average"
--         & threshold .~ "80"
--         & alarm_description .~ "This metric monitors ec2 cpu utilization"
--         & insufficient_data_actions .~ []
-- @
data Cloudwatch_Metric_Alarm_Resource = Cloudwatch_Metric_Alarm_Resource

type instance Computed Cloudwatch_Metric_Alarm_Resource
    = '[]

$(TH.makeResource
    "aws_cloudwatch_metric_alarm"
    ''AWS
    'newResource
    ''Cloudwatch_Metric_Alarm_Resource)

-- | The @aws_cognito_identity_pool@ AWS resource.
--
-- Provides an AWS Cognito Identity Pool.
data Cognito_Identity_Pool_Resource = Cognito_Identity_Pool_Resource
    { allow_unauthenticated_identities :: !(Attr Text)
      {- ^ (Required) - Whether the identity pool supports unauthenticated logins or not. -}
    , cognito_identity_providers :: !(Attr Text)
      {- ^ (Optional) - An array of <#cognito-identity-providers> and their client IDs. -}
    , developer_provider_name :: !(Attr Text)
      {- ^ (Optional) - The "domain" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. -}
    , identity_pool_name :: !(Attr Text)
      {- ^ (Required) - The Cognito Identity Pool name. -}
    , openid_connect_provider_arns :: !(Attr Text)
      {- ^ (Optional) - A list of OpendID Connect provider ARNs. -}
    , saml_provider_arns :: !(Attr Text)
      {- ^ (Optional) - An array of Amazon Resource Names (ARNs) of the SAML provider for your identity. -}
    , supported_login_providers :: !(Attr Text)
      {- ^ (Optional) - Key-Value pairs mapping provider names to provider app IDs. -}
    } deriving (Show, Eq, Generic)

type instance Computed Cognito_Identity_Pool_Resource
    = '[]

$(TH.makeResource
    "aws_cognito_identity_pool"
    ''AWS
    'newResource
    ''Cognito_Identity_Pool_Resource)

-- | The @aws_customer_gateway@ AWS resource.
--
-- Provides a customer gateway inside a VPC. These objects can be connected to VPN gateways via VPN connections, and allow you to establish tunnels between your network and the VPC.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- main <- resource "main" $
--     customer_gateway_resource
--         & bgp_asn .~ 65000
--         & ip_address .~ "172.83.124.10"
--         & type .~ "ipsec.1"
-- @
data Customer_Gateway_Resource = Customer_Gateway_Resource
    { bgp_asn :: !(Attr Text)
      {- ^ (Required) The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN). -}
    , ip_address :: !(Attr Text)
      {- ^ (Required) The IP address of the gateway's Internet-routable external interface. -}
    , tags :: !(Attr Text)
      {- ^ (Optional) Tags to apply to the gateway. -}
    , type_ :: !(Attr Text)
      {- ^ (Required) The type of customer gateway. The only type AWS supports at this time is "ipsec.1". -}
    } deriving (Show, Eq, Generic)

type instance Computed Customer_Gateway_Resource
    = '[ '("bgp_asn", Attr Text)
         {- - The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN). -}
      , '("id", Attr Text)
         {- - The amazon-assigned ID of the gateway. -}
      , '("ip_address", Attr Text)
         {- - The IP address of the gateway's Internet-routable external interface. -}
      , '("tags", Attr Text)
         {- - Tags applied to the gateway. -}
      , '("type", Attr Text)
         {- - The type of customer gateway. -}
       ]

$(TH.makeResource
    "aws_customer_gateway"
    ''AWS
    'newResource
    ''Customer_Gateway_Resource)

-- | The @aws_db_snapshot@ AWS resource.
--
-- Creates a Snapshot of an DB Instance.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- bar <- resource "bar" $
--     db_instance_resource
--         & allocated_storage .~ 10
--         & engine .~ "MySQL"
--         & engine_version .~ "5.6.21"
--         & instance_class .~ "db.t1.micro"
--         & name .~ "baz"
--         & password .~ "barbarbarbar"
--         & username .~ "foo"
--         & maintenance_window .~ "Fri:09:00-Fri:09:30"
--         & backup_retention_period .~ 0
--         & parameter_group_name .~ "default.mysql5.6"
--  
-- test <- resource "test" $
--     db_snapshot_resource
--         & db_instance_identifier .~ compute bar @"id"
--         & db_snapshot_identifier .~ "testsnapshot1234"
-- @
data Db_Snapshot_Resource = Db_Snapshot_Resource
    { db_instance_identifier :: !(Attr Text)
      {- ^ (Required) The DB Instance Identifier from which to take the snapshot. -}
    , db_snapshot_identifier :: !(Attr Text)
      {- ^ (Required) The Identifier for the snapshot. -}
    } deriving (Show, Eq, Generic)

type instance Computed Db_Snapshot_Resource
    = '[ '("allocated_storage", Attr Text)
         {- - Specifies the allocated storage size in gigabytes (GB). -}
      , '("availability_zone", Attr Text)
         {- - Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot. -}
      , '("db_snapshot_arn", Attr Text)
         {- - The Amazon Resource Name (ARN) for the DB snapshot. -}
      , '("encrypted", Attr Text)
         {- - Specifies whether the DB snapshot is encrypted. -}
      , '("engine", Attr Text)
         {- - Specifies the name of the database engine. -}
      , '("engine_version", Attr Text)
         {- - Specifies the version of the database engine. -}
      , '("iops", Attr Text)
         {- - Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot. -}
      , '("kms_key_id", Attr Text)
         {- - The ARN for the KMS encryption key. -}
      , '("license_model", Attr Text)
         {- - License model information for the restored DB instance. -}
      , '("option_group_name", Attr Text)
         {- - Provides the option group name for the DB snapshot. -}
      , '("source_db_snapshot_identifier", Attr Text)
         {- - The DB snapshot Arn that the DB snapshot was copied from. It only has value in case of cross customer or cross region copy. -}
      , '("source_region", Attr Text)
         {- - The region that the DB snapshot was created in or copied from. -}
      , '("status", Attr Text)
         {- - Specifies the status of this DB snapshot. -}
      , '("storage_type", Attr Text)
         {- - Specifies the storage type associated with DB snapshot. -}
      , '("vpc_id", Attr Text)
         {- - Specifies the storage type associated with DB snapshot. -}
       ]

$(TH.makeResource
    "aws_db_snapshot"
    ''AWS
    'newResource
    ''Db_Snapshot_Resource)

-- | The @aws_db_subnet_group@ AWS resource.
--
-- Provides an RDS DB subnet group resource.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- default <- resource "default" $
--     db_subnet_group_resource
--         & name .~ "main"
--         & subnet_ids .~ [compute frontend @"id"
--                         ,compute backend @"id"]
-- @
data Db_Subnet_Group_Resource = Db_Subnet_Group_Resource
    { description :: !(Attr Text)
      {- ^ (Optional) The description of the DB subnet group. Defaults to "Managed by Terraform". -}
    , name :: !(Attr Text)
      {- ^ (Optional, Forces new resource) The name of the DB subnet group. If omitted, Terraform will assign a random, unique name. -}
    , name_prefix :: !(Attr Text)
      {- ^ (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with @name@ . -}
    , subnet_ids :: !(Attr Text)
      {- ^ (Required) A list of VPC subnet IDs. -}
    , tags :: !(Attr Text)
      {- ^ (Optional) A mapping of tags to assign to the resource. -}
    } deriving (Show, Eq, Generic)

type instance Computed Db_Subnet_Group_Resource
    = '[ '("arn", Attr Text)
         {- - The ARN of the db subnet group. -}
      , '("id", Attr Text)
         {- - The db subnet group name. -}
       ]

$(TH.makeResource
    "aws_db_subnet_group"
    ''AWS
    'newResource
    ''Db_Subnet_Group_Resource)

-- | The @aws_default_security_group@ AWS resource.
--
-- Provides a resource to manage the default AWS Security Group.
data Default_Security_Group_Resource = Default_Security_Group_Resource

type instance Computed Default_Security_Group_Resource
    = '[]

$(TH.makeResource
    "aws_default_security_group"
    ''AWS
    'newResource
    ''Default_Security_Group_Resource)

-- | The @aws_devicefarm_project@ AWS resource.
--
-- Provides a resource to manage AWS Device Farm Projects. Please keep in mind that this feature is only supported on the "us-west-2" region. This resource will error if you try to create a project in another region.
data Devicefarm_Project_Resource = Devicefarm_Project_Resource

type instance Computed Devicefarm_Project_Resource
    = '[]

$(TH.makeResource
    "aws_devicefarm_project"
    ''AWS
    'newResource
    ''Devicefarm_Project_Resource)

-- | The @aws_dms_replication_instance@ AWS resource.
--
-- Provides a DMS (Data Migration Service) replication instance resource. DMS replication instances can be created, updated, deleted, and imported.
data Dms_Replication_Instance_Resource = Dms_Replication_Instance_Resource
    { allocated_storage :: !(Attr Text)
      {- ^ (Optional, Default: 50, Min: 5, Max: 6144) The amount of storage (in gigabytes) to be initially allocated for the replication instance. -}
    , apply_immediately :: !(Attr Text)
      {- ^ (Optional, Default: false) Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource. -}
    , auto_minor_version_upgrade :: !(Attr Text)
      {- ^ (Optional, Default: false) Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window. -}
    , availability_zone :: !(Attr Text)
      {- ^ (Optional) The EC2 Availability Zone that the replication instance will be created in. -}
    , engine_version :: !(Attr Text)
      {- ^ (Optional) The engine version number of the replication instance. -}
    , kms_key_arn :: !(Attr Text)
      {- ^ (Optional) The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for @kms_key_arn@ , then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. -}
    , multi_az :: !(Attr Text)
      {- ^ (Optional) Specifies if the replication instance is a multi-az deployment. You cannot set the @availability_zone@ parameter if the @multi_az@ parameter is set to @true@ . -}
    , preferred_maintenance_window :: !(Attr Text)
      {- ^ (Optional) The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). -}
    , publicly_accessible :: !(Attr Text)
      {- ^ (Optional, Default: false) Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address. -}
    , replication_instance_class :: !(Attr Text)
      {- ^ (Required) The compute and memory capacity of the replication instance as specified by the replication instance class. Can be one of @dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge@ -}
    , replication_instance_id :: !(Attr Text)
      {- ^ (Required) The replication instance identifier. This parameter is stored as a lowercase string. -}
    , replication_subnet_group_id :: !(Attr Text)
      {- ^ (Optional) A subnet group to associate with the replication instance. -}
    , tags :: !(Attr Text)
      {- ^ (Optional) A mapping of tags to assign to the resource. -}
    , vpc_security_group_ids :: !(Attr Text)
      {- ^ (Optional) A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance. -}
    } deriving (Show, Eq, Generic)

type instance Computed Dms_Replication_Instance_Resource
    = '[ '("replication_instance_arn", Attr Text)
         {- - The Amazon Resource Name (ARN) of the replication instance. -}
      , '("replication_instance_private_ips", Attr Text)
         {- -  A list of the private IP addresses of the replication instance. -}
      , '("replication_instance_public_ips", Attr Text)
         {- - A list of the public IP addresses of the replication instance. -}
       ]

$(TH.makeResource
    "aws_dms_replication_instance"
    ''AWS
    'newResource
    ''Dms_Replication_Instance_Resource)

-- | The @aws_ecr_repository@ AWS resource.
--
-- Provides an EC2 Container Registry Repository.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- foo <- resource "foo" $
--     ecr_repository_resource
--         & name .~ "bar"
-- @
data Ecr_Repository_Resource = Ecr_Repository_Resource
    { name :: !(Attr Text)
      {- ^ (Required) Name of the repository. -}
    } deriving (Show, Eq, Generic)

type instance Computed Ecr_Repository_Resource
    = '[ '("arn", Attr Text)
         {- - Full ARN of the repository. -}
      , '("name", Attr Text)
         {- - The name of the repository. -}
      , '("registry_id", Attr Text)
         {- - The registry ID where the repository was created. -}
      , '("repository_url", Attr Text)
         {- - The URL of the repository (in the form @aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName@ -}
       ]

$(TH.makeResource
    "aws_ecr_repository"
    ''AWS
    'newResource
    ''Ecr_Repository_Resource)

-- | The @aws_elastic_beanstalk_environment@ AWS resource.
--
-- Provides an Elastic Beanstalk Environment Resource. Elastic Beanstalk allows you to deploy and manage applications in the AWS cloud without worrying about the infrastructure that runs those applications.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- tftest <- resource "tftest" $
--     elastic_beanstalk_application_resource
--         & name .~ "tf-test-name"
--         & description .~ "tf-test-desc"
--  
-- tfenvtest <- resource "tfenvtest" $
--     elastic_beanstalk_environment_resource
--         & name .~ "tf-test-name"
--         & application .~ compute tftest @"name"
--         & solution_stack_name .~ "64bit Amazon Linux 2015.03 v2.0.3 running Go 1.4"
-- @
data Elastic_Beanstalk_Environment_Resource = Elastic_Beanstalk_Environment_Resource
    { application :: !(Attr Text)
      {- ^ – (Required) Name of the application that contains the version to be deployed -}
    , cname_prefix :: !(Attr Text)
      {- ^ (Optional) Prefix to use for the fully qualified DNS name of the Environment. -}
    , description :: !(Attr Text)
      {- ^ (Optional) Short description of the Environment -}
    , name :: !(Attr Text)
      {- ^ (Required) A unique name for this Environment. This name is used in the application URL -}
    , poll_interval :: !(Attr Text)
      {- ^ – The time between polling the AWS API to check if changes have been applied. Use this to adjust the rate of API calls for any @create@ or @update@ action. Minimum @10s@ , maximum @180s@ . Omit this to use the default behavior, which is an exponential backoff -}
    , setting :: !(Attr Text)
      {- ^ – (Optional) Option settings to configure the new Environment. These override specific values that are set as defaults. The format is detailed below in <#option-settings> -}
    , solution_stack_name :: !(Attr Text)
      {- ^ – (Optional) A solution stack to base your environment off of. Example stacks can be found in the <https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html> -}
    , tags :: !(Attr Text)
      {- ^ – (Optional) A set of tags to apply to the Environment. at this time the Elastic Beanstalk API does not provide a programatic way of changing these tags after initial application -}
    , template_name :: !(Attr Text)
      {- ^ – (Optional) The name of the Elastic Beanstalk Configuration template to use in deployment -}
    , tier :: !(Attr Text)
      {- ^ (Optional) Elastic Beanstalk Environment tier. Valid values are @Worker@ or @WebServer@ . If tier is left blank @WebServer@ will be used. -}
    , version_label :: !(Attr Text)
      {- ^ (Optional) The name of the Elastic Beanstalk Application Version to use in deployment. -}
    , wait_for_ready_timeout :: !(Attr Text)
      {- ^ - (Default: @20m@ ) The maximum <https://golang.org/pkg/time/#ParseDuration> that Terraform should wait for an Elastic Beanstalk Environment to be in a ready state before timing out. -}
    } deriving (Show, Eq, Generic)

type instance Computed Elastic_Beanstalk_Environment_Resource
    = '[]

$(TH.makeResource
    "aws_elastic_beanstalk_environment"
    ''AWS
    'newResource
    ''Elastic_Beanstalk_Environment_Resource)

-- | The @aws_iam_account_password_policy@ AWS resource.
--
-- -> There is only a single policy allowed per AWS account. An existing policy will be lost when using this resource as an effect of this limitation.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- strict <- resource "strict" $
--     iam_account_password_policy_resource
--         & minimum_password_length .~ 8
--         & require_lowercase_characters .~ True
--         & require_numbers .~ True
--         & require_uppercase_characters .~ True
--         & require_symbols .~ True
--         & allow_users_to_change_password .~ True
-- @
data Iam_Account_Password_Policy_Resource = Iam_Account_Password_Policy_Resource
    { allow_users_to_change_password :: !(Attr Text)
      {- ^ (Optional) Whether to allow users to change their own password -}
    , hard_expiry :: !(Attr Text)
      {- ^ (Optional) Whether users are prevented from setting a new password after their password has expired (i.e. require administrator reset) -}
    , max_password_age :: !(Attr Text)
      {- ^ (Optional) The number of days that an user password is valid. -}
    , minimum_password_length :: !(Attr Text)
      {- ^ (Optional) Minimum length to require for user passwords. -}
    , password_reuse_prevention :: !(Attr Text)
      {- ^ (Optional) The number of previous passwords that users are prevented from reusing. -}
    , require_lowercase_characters :: !(Attr Text)
      {- ^ (Optional) Whether to require lowercase characters for user passwords. -}
    , require_numbers :: !(Attr Text)
      {- ^ (Optional) Whether to require numbers for user passwords. -}
    , require_symbols :: !(Attr Text)
      {- ^ (Optional) Whether to require symbols for user passwords. -}
    , require_uppercase_characters :: !(Attr Text)
      {- ^ (Optional) Whether to require uppercase characters for user passwords. -}
    } deriving (Show, Eq, Generic)

type instance Computed Iam_Account_Password_Policy_Resource
    = '[ '("expire_passwords", Attr Text)
         {- - Indicates whether passwords in the account expire. Returns @true@ if @max_password_age@ contains a value greater than @0@ . Returns @false@ if it is @0@ or . -}
       ]

$(TH.makeResource
    "aws_iam_account_password_policy"
    ''AWS
    'newResource
    ''Iam_Account_Password_Policy_Resource)

-- | The @aws_iam_group_policy@ AWS resource.
--
-- Provides an IAM policy attached to a group.
data Iam_Group_Policy_Resource = Iam_Group_Policy_Resource
    { group :: !(Attr Text)
      {- ^ (Required) The IAM group to attach to the policy. -}
    , name :: !(Attr Text)
      {- ^ (Optional) The name of the policy. If omitted, Terraform will assign a random, unique name. -}
    , name_prefix :: !(Attr Text)
      {- ^ (Optional) Creates a unique name beginning with the specified prefix. Conflicts with @name@ . -}
    , policy :: !(Attr Text)
      {- ^ (Required) The policy document. This is a JSON formatted string. The heredoc syntax or @file@ function is helpful here. -}
    } deriving (Show, Eq, Generic)

type instance Computed Iam_Group_Policy_Resource
    = '[ '("group", Attr Text)
         {- - The group to which this policy applies. -}
      , '("id", Attr Text)
         {- - The group policy ID. -}
      , '("name", Attr Text)
         {- - The name of the policy. -}
      , '("policy", Attr Text)
         {- - The policy document attached to the group. -}
       ]

$(TH.makeResource
    "aws_iam_group_policy"
    ''AWS
    'newResource
    ''Iam_Group_Policy_Resource)

-- | The @aws_iam_openid_connect_provider@ AWS resource.
--
-- Provides an IAM OpenID Connect provider.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- default <- resource "default" $
--     iam_openid_connect_provider_resource
--         & url .~ "https://accounts.google.com"
--         & client_id_list .~ ["266362248691-342342xasdasdasda-apps.googleusercontent.com"]
--         & thumbprint_list .~ []
-- @
data Iam_Openid_Connect_Provider_Resource = Iam_Openid_Connect_Provider_Resource
    { client_id_list :: !(Attr Text)
      {- ^ (Required) A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the client_id parameter on OAuth requests.) -}
    , thumbprint_list :: !(Attr Text)
      {- ^ (Required) A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s). -}
    , url :: !(Attr Text)
      {- ^ (Required) The URL of the identity provider. Corresponds to the claim. -}
    } deriving (Show, Eq, Generic)

type instance Computed Iam_Openid_Connect_Provider_Resource
    = '[ '("arn", Attr Text)
         {- - The ARN assigned by AWS for this provider. -}
       ]

$(TH.makeResource
    "aws_iam_openid_connect_provider"
    ''AWS
    'newResource
    ''Iam_Openid_Connect_Provider_Resource)

-- | The @aws_iam_user@ AWS resource.
--
-- Provides an IAM user.
data Iam_User_Resource = Iam_User_Resource
    { force_destroy :: !(Attr Text)
      {- ^ (Optional, default false) When destroying this user, destroy even if it has non-Terraform-managed IAM access keys, login profile or MFA devices. Without @force_destroy@ a user with non-Terraform-managed access keys and login profile will fail to be destroyed. -}
    , name :: !(Attr Text)
      {- ^ (Required) The user's name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: @=,.@-_.@ . User names are not distinguished by case. For example, you cannot create users named both "TESTUSER" and "testuser". -}
    , path :: !(Attr Text)
      {- ^ (Optional, default "/") Path in which to create the user. -}
    } deriving (Show, Eq, Generic)

type instance Computed Iam_User_Resource
    = '[ '("arn", Attr Text)
         {- - The ARN assigned by AWS for this user. -}
      , '("name", Attr Text)
         {- - The user's name. -}
      , '("unique_id", Attr Text)
         {- - The <https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#GUIDs> assigned by AWS. -}
       ]

$(TH.makeResource
    "aws_iam_user"
    ''AWS
    'newResource
    ''Iam_User_Resource)

-- | The @aws_inspector_assessment_target@ AWS resource.
--
-- Provides a Inspector assessment target
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- bar <- resource "bar" $
--     inspector_resource_group_resource
--  
-- foo <- resource "foo" $
--     inspector_assessment_target_resource
--         & name .~ "assessment target"
--         & resource_group_arn .~ compute bar @"arn"
-- @
data Inspector_Assessment_Target_Resource = Inspector_Assessment_Target_Resource
    { name :: !(Attr Text)
      {- ^ (Required) The name of the assessment target. -}
    , resource_group_arn :: !(Attr Text)
      {- ^ (Required )- The resource group ARN stating tags for instance matching. -}
    } deriving (Show, Eq, Generic)

type instance Computed Inspector_Assessment_Target_Resource
    = '[ '("arn", Attr Text)
         {- - The target assessment ARN. -}
       ]

$(TH.makeResource
    "aws_inspector_assessment_target"
    ''AWS
    'newResource
    ''Inspector_Assessment_Target_Resource)

-- | The @aws_internet_gateway@ AWS resource.
--
-- Provides a resource to create a VPC Internet Gateway.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- gw <- resource "gw" $
--     internet_gateway_resource
--         & vpc_id .~ compute main @"id"
-- @
data Internet_Gateway_Resource = Internet_Gateway_Resource
    { tags :: !(Attr Text)
      {- ^ (Optional) A mapping of tags to assign to the resource. -}
    , vpc_id :: !(Attr Text)
      {- ^ (Required) The VPC ID to create in. -}
    } deriving (Show, Eq, Generic)

type instance Computed Internet_Gateway_Resource
    = '[ '("id", Attr Text)
         {- - The ID of the Internet Gateway. -}
       ]

$(TH.makeResource
    "aws_internet_gateway"
    ''AWS
    'newResource
    ''Internet_Gateway_Resource)

-- | The @aws_lambda_function@ AWS resource.
--
-- Provides a Lambda Function resource. Lambda allows you to trigger execution of code in response to events in AWS. The Lambda Function itself includes source code and runtime configuration.
data Lambda_Function_Resource = Lambda_Function_Resource

type instance Computed Lambda_Function_Resource
    = '[]

$(TH.makeResource
    "aws_lambda_function"
    ''AWS
    'newResource
    ''Lambda_Function_Resource)

-- | The @aws_lightsail_static_ip_attachment@ AWS resource.
--
-- Provides a static IP address attachment - relationship between a Lightsail static IP & Lightsail instance.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- test <- resource "test" $
--     lightsail_static_ip_attachment_resource
--         & static_ip_name .~ compute test @"name"
--         & instance_name .~ compute test @"name"
--  
-- test <- resource "test" $
--     lightsail_static_ip_resource
--         & name .~ "example"
--  
-- test <- resource "test" $
--     lightsail_instance_resource
--         & name .~ "example"
--         & availability_zone .~ "us-east-1b"
--         & blueprint_id .~ "string"
--         & bundle_id .~ "string"
--         & key_pair_name .~ "some_key_name"
-- @
data Lightsail_Static_Ip_Attachment_Resource = Lightsail_Static_Ip_Attachment_Resource
    { instance_name :: !(Attr Text)
      {- ^ (Required) The name of the Lightsail instance to attach the IP to -}
    , static_ip_name :: !(Attr Text)
      {- ^ (Required) The name of the allocated static IP -}
    } deriving (Show, Eq, Generic)

type instance Computed Lightsail_Static_Ip_Attachment_Resource
    = '[ '("arn", Attr Text)
         {- - The ARN of the Lightsail static IP -}
      , '("ip_address", Attr Text)
         {- - The allocated static IP address -}
      , '("support_code", Attr Text)
         {- - The support code. -}
       ]

$(TH.makeResource
    "aws_lightsail_static_ip_attachment"
    ''AWS
    'newResource
    ''Lightsail_Static_Ip_Attachment_Resource)

-- | The @aws_network_interface@ AWS resource.
--
-- Provides an Elastic network interface (ENI) resource.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- test <- resource "test" $
--     network_interface_resource
--         & subnet_id .~ compute public_a @"id"
--         & private_ips .~ ["10.0.0.50"]
--         & security_groups .~ [compute web @"id"]
-- @
data Network_Interface_Resource = Network_Interface_Resource
    { attachment :: !(Attr Text)
      {- ^ (Optional) Block to define the attachment of the ENI. Documented below. -}
    , description :: !(Attr Text)
      {- ^ (Optional) A description for the network interface. -}
    , private_ips :: !(Attr Text)
      {- ^ (Optional) List of private IPs to assign to the ENI. -}
    , private_ips_count :: !(Attr Text)
      {- ^ (Optional) Number of private IPs to assign to the ENI. -}
    , security_groups :: !(Attr Text)
      {- ^ (Optional) List of security group IDs to assign to the ENI. -}
    , source_dest_check :: !(Attr Text)
      {- ^ (Optional) Whether to enable source destination checking for the ENI. Default true. -}
    , subnet_id :: !(Attr Text)
      {- ^ (Required) Subnet ID to create the ENI in. -}
    , tags :: !(Attr Text)
      {- ^ (Optional) A mapping of tags to assign to the resource. -}
    } deriving (Show, Eq, Generic)

type instance Computed Network_Interface_Resource
    = '[ '("attachment", Attr Text)
         {- - Block defining the attachment of the ENI. -}
      , '("description", Attr Text)
         {- - A description for the network interface. -}
      , '("private_ips", Attr Text)
         {- - List of private IPs assigned to the ENI. -}
      , '("security_groups", Attr Text)
         {- - List of security groups attached to the ENI. -}
      , '("source_dest_check", Attr Text)
         {- - Whether source destination checking is enabled -}
      , '("subnet_id", Attr Text)
         {- - Subnet ID the ENI is in. -}
      , '("tags", Attr Text)
         {- - Tags assigned to the ENI. -}
       ]

$(TH.makeResource
    "aws_network_interface"
    ''AWS
    'newResource
    ''Network_Interface_Resource)

-- | The @aws_opsworks_haproxy_layer@ AWS resource.
--
-- Provides an OpsWorks haproxy layer resource.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- lb <- resource "lb" $
--     opsworks_haproxy_layer_resource
--         & stack_id .~ compute main @"id"
--         & stats_password .~ "foobarbaz"
-- @
data Opsworks_Haproxy_Layer_Resource = Opsworks_Haproxy_Layer_Resource
    { auto_assign_elastic_ips :: !(Attr Text)
      {- ^ (Optional) Whether to automatically assign an elastic IP address to the layer's instances. -}
    , auto_assign_public_ips :: !(Attr Text)
      {- ^ (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances. -}
    , auto_healing :: !(Attr Text)
      {- ^ (Optional) Whether to enable auto-healing for the layer. -}
    , custom_instance_profile_arn :: !(Attr Text)
      {- ^ (Optional) The ARN of an IAM profile that will be used for the layer's instances. -}
    , custom_json :: !(Attr Text)
      {- ^ (Optional) Custom JSON attributes to apply to the layer. -}
    , custom_security_group_ids :: !(Attr Text)
      {- ^ (Optional) Ids for a set of security groups to apply to the layer's instances. -}
    , drain_elb_on_shutdown :: !(Attr Text)
      {- ^ (Optional) Whether to enable Elastic Load Balancing connection draining. -}
    , ebs_volume :: !(Attr Text)
      {- ^ (Optional) @ebs_volume@ blocks, as described below, will each create an EBS volume and connect it to the layer's instances. -}
    , elastic_load_balancer :: !(Attr Text)
      {- ^ (Optional) Name of an Elastic Load Balancer to attach to this layer -}
    , healthcheck_method :: !(Attr Text)
      {- ^ (Optional) HTTP method to use for instance healthchecks. Defaults to "OPTIONS". -}
    , healthcheck_url :: !(Attr Text)
      {- ^ (Optional) URL path to use for instance healthchecks. Defaults to "/". -}
    , install_updates_on_boot :: !(Attr Text)
      {- ^ (Optional) Whether to install OS and package updates on each instance when it boots. -}
    , instance_shutdown_timeout :: !(Attr Text)
      {- ^ (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event. -}
    , name :: !(Attr Text)
      {- ^ (Optional) A human-readable name for the layer. -}
    , stack_id :: !(Attr Text)
      {- ^ (Required) The id of the stack the layer will belong to. -}
    , stats_enabled :: !(Attr Text)
      {- ^ (Optional) Whether to enable HAProxy stats. -}
    , stats_password :: !(Attr Text)
      {- ^ (Required) The password to use for HAProxy stats. -}
    , stats_url :: !(Attr Text)
      {- ^ (Optional) The HAProxy stats URL. Defaults to "/haproxy?stats". -}
    , stats_user :: !(Attr Text)
      {- ^ (Optional) The username for HAProxy stats. Defaults to "opsworks". -}
    , system_packages :: !(Attr Text)
      {- ^ (Optional) Names of a set of system packages to install on the layer's instances. -}
    , use_ebs_optimized_instances :: !(Attr Text)
      {- ^ (Optional) Whether to use EBS-optimized instances. -}
    } deriving (Show, Eq, Generic)

type instance Computed Opsworks_Haproxy_Layer_Resource
    = '[ '("id", Attr Text)
         {- - The id of the layer. -}
       ]

$(TH.makeResource
    "aws_opsworks_haproxy_layer"
    ''AWS
    'newResource
    ''Opsworks_Haproxy_Layer_Resource)

-- | The @aws_s3_bucket_notification@ AWS resource.
--
-- Provides a S3 bucket notification resource.
data S3_Bucket_Notification_Resource = S3_Bucket_Notification_Resource
    { bucket :: !(Attr Text)
      {- ^ (Required) The name of the bucket to put notification configuration. -}
    , lambda_function :: !(Attr Text)
      {- ^ (Optional, Multiple) Used to configure notifications to a Lambda Function (documented below). -}
    , queue :: !(Attr Text)
      {- ^ (Optional) The notification configuration to SQS Queue (documented below). -}
    , topic :: !(Attr Text)
      {- ^ (Optional) The notification configuration to SNS Topic (documented below). -}
    } deriving (Show, Eq, Generic)

type instance Computed S3_Bucket_Notification_Resource
    = '[]

$(TH.makeResource
    "aws_s3_bucket_notification"
    ''AWS
    'newResource
    ''S3_Bucket_Notification_Resource)

-- | The @aws_s3_bucket@ AWS resource.
--
-- Provides a S3 bucket resource.
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- b <- resource "b" $
--     s3_bucket_resource
--         & bucket .~ "my-tf-test-bucket"
--         & acl .~ "private"
-- @
--
-- @
-- b <- resource "b" $
--     s3_bucket_resource
--         & bucket .~ "s3-website-test.hashicorp.com"
--         & acl .~ "public-read"
-- @
--
-- @
-- b <- resource "b" $
--     s3_bucket_resource
--         & bucket .~ "my-tf-test-bucket"
--         & acl .~ "private"
-- @
--
-- @
-- log_bucket <- resource "log_bucket" $
--     s3_bucket_resource
--         & bucket .~ "my-tf-log-bucket"
--         & acl .~ "log-delivery-write"
--  
-- b <- resource "b" $
--     s3_bucket_resource
--         & bucket .~ "my-tf-test-bucket"
--         & acl .~ "private"
-- @
data S3_Bucket_Resource = S3_Bucket_Resource
    { acceleration_status :: !(Attr Text)
      {- ^ (Optional) Sets the accelerate configuration of an existing bucket. Can be @Enabled@ or @Suspended@ . -}
    , acl :: !(Attr Text)
      {- ^ (Optional) The <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl> to apply. Defaults to "private". -}
    , bucket :: !(Attr Text)
      {- ^ (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name. -}
    , bucket_prefix :: !(Attr Text)
      {- ^ (Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with @bucket@ . -}
    , cors_rule :: !(Attr Text)
      {- ^ (Optional) A rule of <https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html> (documented below). -}
    , force_destroy :: !(Attr Text)
      {- ^ (Optional, Default:false ) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are recoverable. -}
    , lifecycle_rule :: !(Attr Text)
      {- ^ (Optional) A configuration of <http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html> (documented below). -}
    , logging :: !(Attr Text)
      {- ^ (Optional) A settings of <https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html> (documented below). -}
    , policy :: !(Attr Text)
      {- ^ (Optional) A valid <https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html> JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a @terraform plan@ . In this case, please make sure you use the verbose/specific version of the policy. -}
    , region :: !(Attr Text)
      {- ^ (Optional) If specified, the AWS region this bucket should reside in. Otherwise, the region used by the callee. -}
    , replication_configuration :: !(Attr Text)
      {- ^ (Optional) A configuration of <http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html> (documented below). -}
    , request_payer :: !(Attr Text)
      {- ^ (Optional) Specifies who should bear the cost of Amazon S3 data transfer. Can be either @BucketOwner@ or @Requester@ . By default, the owner of the S3 bucket would incur the costs of any data transfer. See <http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html> developer guide for more information. -}
    , tags :: !(Attr Text)
      {- ^ (Optional) A mapping of tags to assign to the bucket. -}
    , versioning :: !(Attr Text)
      {- ^ (Optional) A state of <https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html> (documented below) -}
    , website :: !(Attr Text)
      {- ^ (Optional) A website object (documented below). -}
    } deriving (Show, Eq, Generic)

type instance Computed S3_Bucket_Resource
    = '[ '("arn", Attr Text)
         {- - The ARN of the bucket. Will be of format @arn:aws:s3:::bucketname@ . -}
      , '("bucket_domain_name", Attr Text)
         {- - The bucket domain name. Will be of format @bucketname.s3.amazonaws.com@ . -}
      , '("hosted_zone_id", Attr Text)
         {- - The <https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints> for this bucket's region. -}
      , '("id", Attr Text)
         {- - The name of the bucket. -}
      , '("region", Attr Text)
         {- - The AWS region this bucket resides in. -}
      , '("website_domain", Attr Text)
         {- - The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records. -}
      , '("website_endpoint", Attr Text)
         {- - The website endpoint, if the bucket is configured with a website. If not, this will be an empty string. -}
       ]

$(TH.makeResource
    "aws_s3_bucket"
    ''AWS
    'newResource
    ''S3_Bucket_Resource)

-- | The @aws_ses_active_receipt_rule_set@ AWS resource.
--
-- Provides a resource to designate the active SES receipt rule set
--
-- Example Usage:
--
-- @
-- import Terraform.AWS
-- import Terraform.AWS.Resource
-- @
--
-- @
-- main <- resource "main" $
--     ses_active_receipt_rule_set_resource
--         & rule_set_name .~ "primary-rules"
-- @
data Ses_Active_Receipt_Rule_Set_Resource = Ses_Active_Receipt_Rule_Set_Resource
    { rule_set_name :: !(Attr Text)
      {- ^ (Required) The name of the rule set -}
    } deriving (Show, Eq, Generic)

type instance Computed Ses_Active_Receipt_Rule_Set_Resource
    = '[]

$(TH.makeResource
    "aws_ses_active_receipt_rule_set"
    ''AWS
    'newResource
    ''Ses_Active_Receipt_Rule_Set_Resource)
