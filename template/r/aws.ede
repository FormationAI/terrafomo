-- This module is auto-generated.

module Terraform.AWS.Resource where

import Data.Text (Text)

import GHC.Generics (Generic)

import Terraform.AWS.Provider     (AWS, newResource)
import Terraform.AWS.Types
import Terraform.Syntax.Attribute (Attr)

import qualified Terraform.Syntax.TH as TH
{% for config in configs %}

-- | The @{{ config.value.name }}@ Terraform AWS provider resource.
{% let datatype = config.value.name | toResourceName %}
data {{ datatype }} = {{ datatype }}
  {% for arg in config.value.arguments %}
    {% if arg.first %}{ {% else %}, {% endif %} {{ arg.value.name }} :: !(Attr {{ arg.value.type }})
      -- ^ {{ arg.value.help }}
    {% if arg.last %}
    } deriving (Show, Eq, Generic)
    {% endif %}
  {% endfor %}

  {% for attr in config.value.attributes %}
    {% if attr.first %}
type instance Computed {{ datatype }}
    = '[ '("{{ attr.value.name }}", Attr {{ attr.value.type }}) -- {{ attr.value.help }}
    {% endif %}
       , '("{{ attr.value.name }}", Attr {{ attr.value.type }}) -- {{ attr.value.help }}
    {% if attr.last %}
      ]

    {% endif %}
  {% endfor %}
$(TH.makeResource
    "{{ config.value.name }}"
    ''AWS
    'newResource
    ''{{ datatype }})
{% endlet %}
{% endfor %}
