_name: tls_self_signed_cert
arguments:
  _dns_names:
    required: false
    help: (Optional) List of DNS names for which a certificate is being requested.
    type: Text
  _key_algorithm:
    required: true
    help: (Required) The name of the algorithm for the key provided in @private_key_pem@
      .
    type: Text
  _validity_period_hours:
    required: true
    help: (Required) The number of hours after initial issuing that the certificate
      will become invalid.
    type: Text
  _subject:
    required: true
    help: (Required) The subject for which a certificate is being requested. This
      is a nested configuration block whose structure matches the corresponding block
      for <cert_request.html> .
    type: Text
  _is_ca_certificate:
    required: false
    help: (Optional) Boolean controlling whether the CA flag will be set in the generated
      certificate. Defaults to @false@ , meaning that the certificate does not represent
      a certificate authority.
    type: Text
  _private_key_pem:
    required: true
    help: (Required) PEM-encoded private key data. This can be read from a separate
      file using the @file@ interpolation function. If the certificate is being generated
      to be used for a throwaway development environment or other non-critical application,
      the @tls_private_key@ resource can be used to generate a TLS private key from
      within Terraform. Only an irreversable secure hash of the private key will be
      stored in the Terraform state.
    type: Text
  _allowed_uses:
    required: true
    help: (Required) List of keywords each describing a use that is permitted for
      the issued certificate. The valid keywords are listed below.
    type: Text
  _early_renewal_hours:
    required: false
    help: (Optional) If set, the resource will consider the certificate to have expired
      the given number of hours before its actual expiry time. This can be useful
      to deploy an updated certificate in advance of the expiration of the current
      certificate. Note however that the old certificate remains valid until its true
      expiration time, since this resource does not (and cannot) support certificate
      revocation. Note also that this advance update can only be performed should
      the Terraform configuration be applied during the early renewal period.
    type: Text
  _ip_addresses:
    required: false
    help: (Optional) List of IP addresses for which a certificate is being requested.
    type: Text
attributes:
  cert_pem:
    help: ! '- The certificate data in PEM format.'
    type: Text
  validity_start_time:
    help: ! '- The time after which the certificate is valid, as an <https://tools.ietf.org/html/rfc3339>
      timestamp.'
    type: Text
  validity_end_time:
    help: ! '- The time until which the certificate is invalid, as an <https://tools.ietf.org/html/rfc3339>
      timestamp.'
    type: Text
about: ! 'Generates a self-signed TLS certificate in PEM format, which is the typical
  format used to configure TLS server software. Self-signed certificates are generally
  not trusted by client software such as web browsers. Therefore clients are likely
  to generate trust warnings when connecting to a server that has a self-signed certificate.
  Self-signed certificates are usually used only in development environments or apps
  deployed internally to an organization. This resource is intended to be used in
  conjunction with a Terraform provider that has a resource that requires a TLS certificate,
  such as:'
examples: []
