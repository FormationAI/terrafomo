arguments:
  _propagating_vgws:
    required: false
    help: (Optional) A list of virtual gateways for propagation.
    ignored: false
    type: Text
  _vpc_id:
    required: true
    help: (Required) The VPC ID.
    ignored: false
    type: Text
  _tags:
    required: false
    help: (Optional) A mapping of tags to assign to the resource.
    ignored: false
    type: Text
  _route:
    required: false
    help: (Optional) A list of route objects. Their keys are documented below.
    ignored: false
    type: Text
name: aws_route_table
attributes:
  id:
    help: ! '- The ID of the routing table'
    type: Text
about: ! 'Provides a resource to create a VPC routing table. ~> NOTE on Route Tables
  and Routes: Terraform currently provides both a standalone <route.html> and a Route
  Table resource with routes defined in-line. At this time you cannot use a Route
  Table with in-line routes in conjunction with any Route resources. Doing so will
  cause a conflict of rule settings and will overwrite rules. ~> NOTE on @gateway_id@
  and @nat_gateway_id@ : The AWS API is very forgiving with these two attributes and
  the @aws_route_table@ resource can be created with a NAT ID specified as a Gateway
  ID attribute. This will lead to a permanent diff between your configuration and
  statefile, as the API returns the correct parameters in the returned route table.
  If you''re experiencing constant diffs in your @aws_route_table@ resources, the
  first thing to check is whether or not you''re specifying a NAT ID instead of a
  Gateway ID, or vice-versa. ~> NOTE on @propagating_vgws@ and the @aws_vpn_gateway_route_propagation@
  resource: If the @propagating_vgws@ argument is present, it''s not supported to
  also define route propagations using @aws_vpn_gateway_route_propagation@ , since
  this resource will delete any propagating gateways not explicitly listed in @propagating_vgws@
  . Omit this argument when defining route propagation using the separate resource.'
examples: []
