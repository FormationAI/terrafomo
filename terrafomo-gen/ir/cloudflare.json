{
    "settings": [
        {
            "con": {
                "smart": "newActionSetting",
                "name": "ActionSetting'"
            },
            "arguments": [
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "_mode",
                    "method": "mode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "validate": false,
                    "optional": false,
                    "original": "mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "_response",
                    "method": "response",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (ResponseSetting s)",
                    "class": "HasResponse",
                    "validate": true,
                    "optional": true,
                    "original": "response"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "_timeout",
                    "method": "timeout",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasTimeout",
                    "validate": false,
                    "optional": false,
                    "original": "timeout"
                }
            ],
            "key": "cloudflare_rate_limit.action",
            "name": "ActionSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "_mode",
                    "method": "mode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "validate": false,
                    "optional": false,
                    "original": "mode"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "_timeout",
                    "method": "timeout",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasTimeout",
                    "validate": false,
                    "optional": false,
                    "original": "timeout"
                }
            ],
            "conflicts": [],
            "type": "ActionSetting s",
            "original": "action"
        },
        {
            "con": {
                "smart": "newActionsSetting",
                "name": "ActionsSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_online\" <$> TF.attribute",
                    "name": "_alwaysOnline",
                    "method": "alwaysOnline",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAlwaysOnline",
                    "validate": false,
                    "optional": true,
                    "original": "always_online"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_use_https\" <$> TF.attribute",
                    "name": "_alwaysUseHttps",
                    "method": "alwaysUseHttps",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAlwaysUseHttps",
                    "validate": false,
                    "optional": true,
                    "original": "always_use_https"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"automatic_https_rewrites\" <$> TF.attribute",
                    "name": "_automaticHttpsRewrites",
                    "method": "automaticHttpsRewrites",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAutomaticHttpsRewrites",
                    "validate": false,
                    "optional": true,
                    "original": "automatic_https_rewrites"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_cache_ttl\" <$> TF.attribute",
                    "name": "_browserCacheTtl",
                    "method": "browserCacheTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasBrowserCacheTtl",
                    "validate": false,
                    "optional": true,
                    "original": "browser_cache_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_check\" <$> TF.attribute",
                    "name": "_browserCheck",
                    "method": "browserCheck",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBrowserCheck",
                    "validate": false,
                    "optional": true,
                    "original": "browser_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bypass_cache_on_cookie\" <$> TF.attribute",
                    "name": "_bypassCacheOnCookie",
                    "method": "bypassCacheOnCookie",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBypassCacheOnCookie",
                    "validate": false,
                    "optional": true,
                    "original": "bypass_cache_on_cookie"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_by_device_type\" <$> TF.attribute",
                    "name": "_cacheByDeviceType",
                    "method": "cacheByDeviceType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheByDeviceType",
                    "validate": false,
                    "optional": true,
                    "original": "cache_by_device_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_deception_armor\" <$> TF.attribute",
                    "name": "_cacheDeceptionArmor",
                    "method": "cacheDeceptionArmor",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheDeceptionArmor",
                    "validate": false,
                    "optional": true,
                    "original": "cache_deception_armor"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_level\" <$> TF.attribute",
                    "name": "_cacheLevel",
                    "method": "cacheLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheLevel",
                    "validate": false,
                    "optional": true,
                    "original": "cache_level"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_on_cookie\" <$> TF.attribute",
                    "name": "_cacheOnCookie",
                    "method": "cacheOnCookie",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheOnCookie",
                    "validate": false,
                    "optional": true,
                    "original": "cache_on_cookie"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_apps\" <$> TF.attribute",
                    "name": "_disableApps",
                    "method": "disableApps",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableApps",
                    "validate": false,
                    "optional": true,
                    "original": "disable_apps"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_performance\" <$> TF.attribute",
                    "name": "_disablePerformance",
                    "method": "disablePerformance",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisablePerformance",
                    "validate": false,
                    "optional": true,
                    "original": "disable_performance"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_railgun\" <$> TF.attribute",
                    "name": "_disableRailgun",
                    "method": "disableRailgun",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableRailgun",
                    "validate": false,
                    "optional": true,
                    "original": "disable_railgun"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_security\" <$> TF.attribute",
                    "name": "_disableSecurity",
                    "method": "disableSecurity",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableSecurity",
                    "validate": false,
                    "optional": true,
                    "original": "disable_security"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"edge_cache_ttl\" <$> TF.attribute",
                    "name": "_edgeCacheTtl",
                    "method": "edgeCacheTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasEdgeCacheTtl",
                    "validate": false,
                    "optional": true,
                    "original": "edge_cache_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email_obfuscation\" <$> TF.attribute",
                    "name": "_emailObfuscation",
                    "method": "emailObfuscation",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmailObfuscation",
                    "validate": false,
                    "optional": true,
                    "original": "email_obfuscation"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"explicit_cache_control\" <$> TF.attribute",
                    "name": "_explicitCacheControl",
                    "method": "explicitCacheControl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExplicitCacheControl",
                    "validate": false,
                    "optional": true,
                    "original": "explicit_cache_control"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"forwarding_url\" <$> TF.attribute",
                    "name": "_forwardingUrl",
                    "method": "forwardingUrl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (ForwardingUrlSetting s)",
                    "class": "HasForwardingUrl",
                    "validate": true,
                    "optional": true,
                    "original": "forwarding_url"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host_header_override\" <$> TF.attribute",
                    "name": "_hostHeaderOverride",
                    "method": "hostHeaderOverride",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostHeaderOverride",
                    "validate": false,
                    "optional": true,
                    "original": "host_header_override"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_geolocation\" <$> TF.attribute",
                    "name": "_ipGeolocation",
                    "method": "ipGeolocation",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpGeolocation",
                    "validate": false,
                    "optional": true,
                    "original": "ip_geolocation"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mirage\" <$> TF.attribute",
                    "name": "_mirage",
                    "method": "mirage",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMirage",
                    "validate": false,
                    "optional": true,
                    "original": "mirage"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"opportunistic_encryption\" <$> TF.attribute",
                    "name": "_opportunisticEncryption",
                    "method": "opportunisticEncryption",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOpportunisticEncryption",
                    "validate": false,
                    "optional": true,
                    "original": "opportunistic_encryption"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_error_page_pass_thru\" <$> TF.attribute",
                    "name": "_originErrorPagePassThru",
                    "method": "originErrorPagePassThru",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOriginErrorPagePassThru",
                    "validate": false,
                    "optional": true,
                    "original": "origin_error_page_pass_thru"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"polish\" <$> TF.attribute",
                    "name": "_polish",
                    "method": "polish",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolish",
                    "validate": false,
                    "optional": true,
                    "original": "polish"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resolve_override\" <$> TF.attribute",
                    "name": "_resolveOverride",
                    "method": "resolveOverride",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResolveOverride",
                    "validate": false,
                    "optional": true,
                    "original": "resolve_override"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"respect_strong_etag\" <$> TF.attribute",
                    "name": "_respectStrongEtag",
                    "method": "respectStrongEtag",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRespectStrongEtag",
                    "validate": false,
                    "optional": true,
                    "original": "respect_strong_etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_buffering\" <$> TF.attribute",
                    "name": "_responseBuffering",
                    "method": "responseBuffering",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseBuffering",
                    "validate": false,
                    "optional": true,
                    "original": "response_buffering"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rocket_loader\" <$> TF.attribute",
                    "name": "_rocketLoader",
                    "method": "rocketLoader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRocketLoader",
                    "validate": false,
                    "optional": true,
                    "original": "rocket_loader"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_level\" <$> TF.attribute",
                    "name": "_securityLevel",
                    "method": "securityLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecurityLevel",
                    "validate": false,
                    "optional": true,
                    "original": "security_level"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_side_exclude\" <$> TF.attribute",
                    "name": "_serverSideExclude",
                    "method": "serverSideExclude",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServerSideExclude",
                    "validate": false,
                    "optional": true,
                    "original": "server_side_exclude"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sort_query_string_for_cache\" <$> TF.attribute",
                    "name": "_sortQueryStringForCache",
                    "method": "sortQueryStringForCache",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSortQueryStringForCache",
                    "validate": false,
                    "optional": true,
                    "original": "sort_query_string_for_cache"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl\" <$> TF.attribute",
                    "name": "_ssl",
                    "method": "ssl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSsl",
                    "validate": false,
                    "optional": true,
                    "original": "ssl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"true_client_ip_header\" <$> TF.attribute",
                    "name": "_trueClientIpHeader",
                    "method": "trueClientIpHeader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTrueClientIpHeader",
                    "validate": false,
                    "optional": true,
                    "original": "true_client_ip_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"waf\" <$> TF.attribute",
                    "name": "_waf",
                    "method": "waf",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasWaf",
                    "validate": false,
                    "optional": true,
                    "original": "waf"
                }
            ],
            "key": "cloudflare_page_rule.actions",
            "name": "ActionsSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "ActionsSetting s",
            "original": "actions"
        },
        {
            "con": {
                "smart": "newCorrelateSetting",
                "name": "CorrelateSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"by\" <$> TF.attribute",
                    "name": "_by",
                    "method": "by",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBy",
                    "validate": false,
                    "optional": true,
                    "original": "by"
                }
            ],
            "key": "cloudflare_rate_limit.correlate",
            "name": "CorrelateSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "CorrelateSetting s",
            "original": "correlate"
        },
        {
            "con": {
                "smart": "newDataSetting",
                "name": "DataSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"algorithm\" <$> TF.attribute",
                    "name": "_algorithm",
                    "method": "algorithm",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasAlgorithm",
                    "validate": false,
                    "optional": true,
                    "original": "algorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"altitude\" <$> TF.attribute",
                    "name": "_altitude",
                    "method": "altitude",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasAltitude",
                    "validate": false,
                    "optional": true,
                    "original": "altitude"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"certificate\" <$> TF.attribute",
                    "name": "_certificate",
                    "method": "certificate",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificate",
                    "validate": false,
                    "optional": true,
                    "original": "certificate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "_content",
                    "method": "content",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "validate": false,
                    "optional": true,
                    "original": "content"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"digest\" <$> TF.attribute",
                    "name": "_digest",
                    "method": "digest",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDigest",
                    "validate": false,
                    "optional": true,
                    "original": "digest"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"digest_type\" <$> TF.attribute",
                    "name": "_digestType",
                    "method": "digestType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasDigestType",
                    "validate": false,
                    "optional": true,
                    "original": "digest_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_fingerprint",
                    "method": "fingerprint",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFingerprint",
                    "validate": false,
                    "optional": true,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"flags\" <$> TF.attribute",
                    "name": "_flags",
                    "method": "flags",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFlags",
                    "validate": false,
                    "optional": true,
                    "original": "flags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key_tag\" <$> TF.attribute",
                    "name": "_keyTag",
                    "method": "keyTag",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasKeyTag",
                    "validate": false,
                    "optional": true,
                    "original": "key_tag"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_degrees\" <$> TF.attribute",
                    "name": "_latDegrees",
                    "method": "latDegrees",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasLatDegrees",
                    "validate": false,
                    "optional": true,
                    "original": "lat_degrees"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_direction\" <$> TF.attribute",
                    "name": "_latDirection",
                    "method": "latDirection",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLatDirection",
                    "validate": false,
                    "optional": true,
                    "original": "lat_direction"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_minutes\" <$> TF.attribute",
                    "name": "_latMinutes",
                    "method": "latMinutes",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasLatMinutes",
                    "validate": false,
                    "optional": true,
                    "original": "lat_minutes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_seconds\" <$> TF.attribute",
                    "name": "_latSeconds",
                    "method": "latSeconds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasLatSeconds",
                    "validate": false,
                    "optional": true,
                    "original": "lat_seconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_degrees\" <$> TF.attribute",
                    "name": "_longDegrees",
                    "method": "longDegrees",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasLongDegrees",
                    "validate": false,
                    "optional": true,
                    "original": "long_degrees"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_direction\" <$> TF.attribute",
                    "name": "_longDirection",
                    "method": "longDirection",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLongDirection",
                    "validate": false,
                    "optional": true,
                    "original": "long_direction"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_minutes\" <$> TF.attribute",
                    "name": "_longMinutes",
                    "method": "longMinutes",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasLongMinutes",
                    "validate": false,
                    "optional": true,
                    "original": "long_minutes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_seconds\" <$> TF.attribute",
                    "name": "_longSeconds",
                    "method": "longSeconds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasLongSeconds",
                    "validate": false,
                    "optional": true,
                    "original": "long_seconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"matching_type\" <$> TF.attribute",
                    "name": "_matchingType",
                    "method": "matchingType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasMatchingType",
                    "validate": false,
                    "optional": true,
                    "original": "matching_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"order\" <$> TF.attribute",
                    "name": "_order",
                    "method": "order",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasOrder",
                    "validate": false,
                    "optional": true,
                    "original": "order"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"precision_horz\" <$> TF.attribute",
                    "name": "_precisionHorz",
                    "method": "precisionHorz",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasPrecisionHorz",
                    "validate": false,
                    "optional": true,
                    "original": "precision_horz"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"precision_vert\" <$> TF.attribute",
                    "name": "_precisionVert",
                    "method": "precisionVert",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasPrecisionVert",
                    "validate": false,
                    "optional": true,
                    "original": "precision_vert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preference\" <$> TF.attribute",
                    "name": "_preference",
                    "method": "preference",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPreference",
                    "validate": false,
                    "optional": true,
                    "original": "preference"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": true,
                    "original": "priority"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proto\" <$> TF.attribute",
                    "name": "_proto",
                    "method": "proto",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProto",
                    "validate": false,
                    "optional": true,
                    "original": "proto"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "_protocol",
                    "method": "protocol",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasProtocol",
                    "validate": false,
                    "optional": true,
                    "original": "protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "_publicKey",
                    "method": "publicKey",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPublicKey",
                    "validate": false,
                    "optional": true,
                    "original": "public_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"regex\" <$> TF.attribute",
                    "name": "_regex",
                    "method": "regex",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegex",
                    "validate": false,
                    "optional": true,
                    "original": "regex"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"replacement\" <$> TF.attribute",
                    "name": "_replacement",
                    "method": "replacement",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasReplacement",
                    "validate": false,
                    "optional": true,
                    "original": "replacement"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"selector\" <$> TF.attribute",
                    "name": "_selector",
                    "method": "selector",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasSelector",
                    "validate": false,
                    "optional": true,
                    "original": "selector"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": true,
                    "original": "service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_size",
                    "method": "size",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasSize",
                    "validate": false,
                    "optional": true,
                    "original": "size"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": true,
                    "original": "target"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"usage\" <$> TF.attribute",
                    "name": "_usage",
                    "method": "usage",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasUsage",
                    "validate": false,
                    "optional": true,
                    "original": "usage"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "_weight",
                    "method": "weight",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasWeight",
                    "validate": false,
                    "optional": true,
                    "original": "weight"
                }
            ],
            "key": "cloudflare_record.data",
            "name": "DataSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "DataSetting s",
            "original": "data"
        },
        {
            "con": {
                "smart": "newForwardingUrlSetting",
                "name": "ForwardingUrlSetting'"
            },
            "arguments": [
                {
                    "default": "_statusCode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status_code\" <$> TF.attribute",
                    "name": "_statusCode",
                    "method": "statusCode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasStatusCode",
                    "validate": false,
                    "optional": false,
                    "original": "status_code"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "_url",
                    "method": "url",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "validate": false,
                    "optional": false,
                    "original": "url"
                }
            ],
            "key": "cloudflare_page_rule.actions.forwarding_url",
            "name": "ForwardingUrlSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_statusCode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status_code\" <$> TF.attribute",
                    "name": "_statusCode",
                    "method": "statusCode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasStatusCode",
                    "validate": false,
                    "optional": false,
                    "original": "status_code"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "_url",
                    "method": "url",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "validate": false,
                    "optional": false,
                    "original": "url"
                }
            ],
            "conflicts": [],
            "type": "ForwardingUrlSetting s",
            "original": "forwarding_url"
        },
        {
            "con": {
                "smart": "newHeaderSetting",
                "name": "HeaderSetting'"
            },
            "arguments": [
                {
                    "default": "_header",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "_header",
                    "method": "header",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHeader",
                    "validate": false,
                    "optional": false,
                    "original": "header"
                },
                {
                    "default": "_values",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "_values",
                    "method": "values",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasValues",
                    "validate": false,
                    "optional": false,
                    "original": "values"
                }
            ],
            "key": "cloudflare_load_balancer_monitor.header",
            "name": "HeaderSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_header",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "_header",
                    "method": "header",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHeader",
                    "validate": false,
                    "optional": false,
                    "original": "header"
                },
                {
                    "default": "_values",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "_values",
                    "method": "values",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasValues",
                    "validate": false,
                    "optional": false,
                    "original": "values"
                }
            ],
            "conflicts": [],
            "type": "HeaderSetting s",
            "original": "header"
        },
        {
            "con": {
                "smart": "newInitialSettingsSetting",
                "name": "InitialSettingsSetting'"
            },
            "arguments": [],
            "key": "cloudflare_zone_settings_override.initial_settings",
            "name": "InitialSettingsSetting",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advanced_ddos\" <$> TF.attribute",
                    "name": "_computedAdvancedDdos",
                    "method": "computedAdvancedDdos",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdvancedDdos",
                    "validate": false,
                    "optional": true,
                    "original": "advanced_ddos"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_online\" <$> TF.attribute",
                    "name": "_computedAlwaysOnline",
                    "method": "computedAlwaysOnline",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysOnline",
                    "validate": false,
                    "optional": true,
                    "original": "always_online"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_use_https\" <$> TF.attribute",
                    "name": "_computedAlwaysUseHttps",
                    "method": "computedAlwaysUseHttps",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysUseHttps",
                    "validate": false,
                    "optional": true,
                    "original": "always_use_https"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"automatic_https_rewrites\" <$> TF.attribute",
                    "name": "_computedAutomaticHttpsRewrites",
                    "method": "computedAutomaticHttpsRewrites",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAutomaticHttpsRewrites",
                    "validate": false,
                    "optional": true,
                    "original": "automatic_https_rewrites"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"brotli\" <$> TF.attribute",
                    "name": "_computedBrotli",
                    "method": "computedBrotli",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrotli",
                    "validate": false,
                    "optional": true,
                    "original": "brotli"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_cache_ttl\" <$> TF.attribute",
                    "name": "_computedBrowserCacheTtl",
                    "method": "computedBrowserCacheTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedBrowserCacheTtl",
                    "validate": false,
                    "optional": true,
                    "original": "browser_cache_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_check\" <$> TF.attribute",
                    "name": "_computedBrowserCheck",
                    "method": "computedBrowserCheck",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrowserCheck",
                    "validate": false,
                    "optional": true,
                    "original": "browser_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_level\" <$> TF.attribute",
                    "name": "_computedCacheLevel",
                    "method": "computedCacheLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCacheLevel",
                    "validate": false,
                    "optional": true,
                    "original": "cache_level"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"challenge_ttl\" <$> TF.attribute",
                    "name": "_computedChallengeTtl",
                    "method": "computedChallengeTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedChallengeTtl",
                    "validate": false,
                    "optional": true,
                    "original": "challenge_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cname_flattening\" <$> TF.attribute",
                    "name": "_computedCnameFlattening",
                    "method": "computedCnameFlattening",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCnameFlattening",
                    "validate": false,
                    "optional": true,
                    "original": "cname_flattening"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"development_mode\" <$> TF.attribute",
                    "name": "_computedDevelopmentMode",
                    "method": "computedDevelopmentMode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDevelopmentMode",
                    "validate": false,
                    "optional": true,
                    "original": "development_mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"edge_cache_ttl\" <$> TF.attribute",
                    "name": "_computedEdgeCacheTtl",
                    "method": "computedEdgeCacheTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedEdgeCacheTtl",
                    "validate": false,
                    "optional": true,
                    "original": "edge_cache_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email_obfuscation\" <$> TF.attribute",
                    "name": "_computedEmailObfuscation",
                    "method": "computedEmailObfuscation",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmailObfuscation",
                    "validate": false,
                    "optional": true,
                    "original": "email_obfuscation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hotlink_protection\" <$> TF.attribute",
                    "name": "_computedHotlinkProtection",
                    "method": "computedHotlinkProtection",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHotlinkProtection",
                    "validate": false,
                    "optional": true,
                    "original": "hotlink_protection"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http2\" <$> TF.attribute",
                    "name": "_computedHttp2",
                    "method": "computedHttp2",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttp2",
                    "validate": false,
                    "optional": true,
                    "original": "http2"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_geolocation\" <$> TF.attribute",
                    "name": "_computedIpGeolocation",
                    "method": "computedIpGeolocation",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpGeolocation",
                    "validate": false,
                    "optional": true,
                    "original": "ip_geolocation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6\" <$> TF.attribute",
                    "name": "_computedIpv6",
                    "method": "computedIpv6",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6",
                    "validate": false,
                    "optional": true,
                    "original": "ipv6"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_upload\" <$> TF.attribute",
                    "name": "_computedMaxUpload",
                    "method": "computedMaxUpload",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedMaxUpload",
                    "validate": false,
                    "optional": true,
                    "original": "max_upload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "_computedMinTlsVersion",
                    "method": "computedMinTlsVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinTlsVersion",
                    "validate": false,
                    "optional": true,
                    "original": "min_tls_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minify\" <$> TF.attribute",
                    "name": "_computedMinify",
                    "method": "computedMinify",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (MinifySetting s)",
                    "class": "HasComputedMinify",
                    "validate": true,
                    "optional": true,
                    "original": "minify"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mirage\" <$> TF.attribute",
                    "name": "_computedMirage",
                    "method": "computedMirage",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMirage",
                    "validate": false,
                    "optional": true,
                    "original": "mirage"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_redirect\" <$> TF.attribute",
                    "name": "_computedMobileRedirect",
                    "method": "computedMobileRedirect",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (MobileRedirectSetting s)",
                    "class": "HasComputedMobileRedirect",
                    "validate": true,
                    "optional": true,
                    "original": "mobile_redirect"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"opportunistic_encryption\" <$> TF.attribute",
                    "name": "_computedOpportunisticEncryption",
                    "method": "computedOpportunisticEncryption",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOpportunisticEncryption",
                    "validate": false,
                    "optional": true,
                    "original": "opportunistic_encryption"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_error_page_pass_thru\" <$> TF.attribute",
                    "name": "_computedOriginErrorPagePassThru",
                    "method": "computedOriginErrorPagePassThru",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOriginErrorPagePassThru",
                    "validate": false,
                    "optional": true,
                    "original": "origin_error_page_pass_thru"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"polish\" <$> TF.attribute",
                    "name": "_computedPolish",
                    "method": "computedPolish",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolish",
                    "validate": false,
                    "optional": true,
                    "original": "polish"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"prefetch_preload\" <$> TF.attribute",
                    "name": "_computedPrefetchPreload",
                    "method": "computedPrefetchPreload",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrefetchPreload",
                    "validate": false,
                    "optional": true,
                    "original": "prefetch_preload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"privacy_pass\" <$> TF.attribute",
                    "name": "_computedPrivacyPass",
                    "method": "computedPrivacyPass",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivacyPass",
                    "validate": false,
                    "optional": true,
                    "original": "privacy_pass"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pseudo_ipv4\" <$> TF.attribute",
                    "name": "_computedPseudoIpv4",
                    "method": "computedPseudoIpv4",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPseudoIpv4",
                    "validate": false,
                    "optional": true,
                    "original": "pseudo_ipv4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_buffering\" <$> TF.attribute",
                    "name": "_computedResponseBuffering",
                    "method": "computedResponseBuffering",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedResponseBuffering",
                    "validate": false,
                    "optional": true,
                    "original": "response_buffering"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rocket_loader\" <$> TF.attribute",
                    "name": "_computedRocketLoader",
                    "method": "computedRocketLoader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRocketLoader",
                    "validate": false,
                    "optional": true,
                    "original": "rocket_loader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_header\" <$> TF.attribute",
                    "name": "_computedSecurityHeader",
                    "method": "computedSecurityHeader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (SecurityHeaderSetting s)",
                    "class": "HasComputedSecurityHeader",
                    "validate": true,
                    "optional": true,
                    "original": "security_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_level\" <$> TF.attribute",
                    "name": "_computedSecurityLevel",
                    "method": "computedSecurityLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSecurityLevel",
                    "validate": false,
                    "optional": true,
                    "original": "security_level"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_side_exclude\" <$> TF.attribute",
                    "name": "_computedServerSideExclude",
                    "method": "computedServerSideExclude",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServerSideExclude",
                    "validate": false,
                    "optional": true,
                    "original": "server_side_exclude"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha1_support\" <$> TF.attribute",
                    "name": "_computedSha1Support",
                    "method": "computedSha1Support",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha1Support",
                    "validate": false,
                    "optional": true,
                    "original": "sha1_support"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sort_query_string_for_cache\" <$> TF.attribute",
                    "name": "_computedSortQueryStringForCache",
                    "method": "computedSortQueryStringForCache",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSortQueryStringForCache",
                    "validate": false,
                    "optional": true,
                    "original": "sort_query_string_for_cache"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl\" <$> TF.attribute",
                    "name": "_computedSsl",
                    "method": "computedSsl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSsl",
                    "validate": false,
                    "optional": true,
                    "original": "ssl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_2_only\" <$> TF.attribute",
                    "name": "_computedTls12Only",
                    "method": "computedTls12Only",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls12Only",
                    "validate": false,
                    "optional": true,
                    "original": "tls_1_2_only"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_3\" <$> TF.attribute",
                    "name": "_computedTls13",
                    "method": "computedTls13",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls13",
                    "validate": false,
                    "optional": true,
                    "original": "tls_1_3"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_client_auth\" <$> TF.attribute",
                    "name": "_computedTlsClientAuth",
                    "method": "computedTlsClientAuth",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsClientAuth",
                    "validate": false,
                    "optional": true,
                    "original": "tls_client_auth"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"true_client_ip_header\" <$> TF.attribute",
                    "name": "_computedTrueClientIpHeader",
                    "method": "computedTrueClientIpHeader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTrueClientIpHeader",
                    "validate": false,
                    "optional": true,
                    "original": "true_client_ip_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"waf\" <$> TF.attribute",
                    "name": "_computedWaf",
                    "method": "computedWaf",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWaf",
                    "validate": false,
                    "optional": true,
                    "original": "waf"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"webp\" <$> TF.attribute",
                    "name": "_computedWebp",
                    "method": "computedWebp",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebp",
                    "validate": false,
                    "optional": true,
                    "original": "webp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"websockets\" <$> TF.attribute",
                    "name": "_computedWebsockets",
                    "method": "computedWebsockets",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebsockets",
                    "validate": false,
                    "optional": true,
                    "original": "websockets"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "InitialSettingsSetting s",
            "original": "initial_settings"
        },
        {
            "con": {
                "smart": "newMatchSetting",
                "name": "MatchSetting'"
            },
            "arguments": [],
            "key": "cloudflare_rate_limit.match",
            "name": "MatchSetting",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request\" <$> TF.attribute",
                    "name": "_computedRequest",
                    "method": "computedRequest",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (RequestSetting s)",
                    "class": "HasComputedRequest",
                    "validate": true,
                    "optional": true,
                    "original": "request"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "_computedResponse",
                    "method": "computedResponse",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (ResponseSetting s)",
                    "class": "HasComputedResponse",
                    "validate": true,
                    "optional": true,
                    "original": "response"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "MatchSetting s",
            "original": "match"
        },
        {
            "con": {
                "smart": "newMinifySetting",
                "name": "MinifySetting'"
            },
            "arguments": [
                {
                    "default": "_css",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"css\" <$> TF.attribute",
                    "name": "_css",
                    "method": "css",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCss",
                    "validate": false,
                    "optional": false,
                    "original": "css"
                },
                {
                    "default": "_html",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"html\" <$> TF.attribute",
                    "name": "_html",
                    "method": "html",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHtml",
                    "validate": false,
                    "optional": false,
                    "original": "html"
                },
                {
                    "default": "_js",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"js\" <$> TF.attribute",
                    "name": "_js",
                    "method": "js",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasJs",
                    "validate": false,
                    "optional": false,
                    "original": "js"
                }
            ],
            "key": "cloudflare_zone_settings_override.initial_settings.minify",
            "name": "MinifySetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_css",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"css\" <$> TF.attribute",
                    "name": "_css",
                    "method": "css",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCss",
                    "validate": false,
                    "optional": false,
                    "original": "css"
                },
                {
                    "default": "_html",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"html\" <$> TF.attribute",
                    "name": "_html",
                    "method": "html",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHtml",
                    "validate": false,
                    "optional": false,
                    "original": "html"
                },
                {
                    "default": "_js",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"js\" <$> TF.attribute",
                    "name": "_js",
                    "method": "js",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasJs",
                    "validate": false,
                    "optional": false,
                    "original": "js"
                }
            ],
            "conflicts": [],
            "type": "MinifySetting s",
            "original": "minify"
        },
        {
            "con": {
                "smart": "newMobileRedirectSetting",
                "name": "MobileRedirectSetting'"
            },
            "arguments": [
                {
                    "default": "_mobileSubdomain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_subdomain\" <$> TF.attribute",
                    "name": "_mobileSubdomain",
                    "method": "mobileSubdomain",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMobileSubdomain",
                    "validate": false,
                    "optional": false,
                    "original": "mobile_subdomain"
                },
                {
                    "default": "_status",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                },
                {
                    "default": "_stripUri",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"strip_uri\" <$> TF.attribute",
                    "name": "_stripUri",
                    "method": "stripUri",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasStripUri",
                    "validate": false,
                    "optional": false,
                    "original": "strip_uri"
                }
            ],
            "key": "cloudflare_zone_settings_override.initial_settings.mobile_redirect",
            "name": "MobileRedirectSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_status",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                },
                {
                    "default": "_mobileSubdomain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_subdomain\" <$> TF.attribute",
                    "name": "_mobileSubdomain",
                    "method": "mobileSubdomain",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMobileSubdomain",
                    "validate": false,
                    "optional": false,
                    "original": "mobile_subdomain"
                },
                {
                    "default": "_stripUri",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"strip_uri\" <$> TF.attribute",
                    "name": "_stripUri",
                    "method": "stripUri",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasStripUri",
                    "validate": false,
                    "optional": false,
                    "original": "strip_uri"
                }
            ],
            "conflicts": [],
            "type": "MobileRedirectSetting s",
            "original": "mobile_redirect"
        },
        {
            "con": {
                "smart": "newOriginsSetting",
                "name": "OriginsSetting'"
            },
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_enabled",
                    "method": "enabled",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "enabled"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "key": "cloudflare_load_balancer_pool.origins",
            "name": "OriginsSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "OriginsSetting s",
            "original": "origins"
        },
        {
            "con": {
                "smart": "newPopPoolsSetting",
                "name": "PopPoolsSetting'"
            },
            "arguments": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "_poolIds",
                    "method": "poolIds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "validate": false,
                    "optional": false,
                    "original": "pool_ids"
                },
                {
                    "default": "_pop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pop\" <$> TF.attribute",
                    "name": "_pop",
                    "method": "pop",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPop",
                    "validate": false,
                    "optional": false,
                    "original": "pop"
                }
            ],
            "key": "cloudflare_load_balancer.pop_pools",
            "name": "PopPoolsSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "_poolIds",
                    "method": "poolIds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "validate": false,
                    "optional": false,
                    "original": "pool_ids"
                },
                {
                    "default": "_pop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pop\" <$> TF.attribute",
                    "name": "_pop",
                    "method": "pop",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPop",
                    "validate": false,
                    "optional": false,
                    "original": "pop"
                }
            ],
            "conflicts": [],
            "type": "PopPoolsSetting s",
            "original": "pop_pools"
        },
        {
            "con": {
                "smart": "newRegionPoolsSetting",
                "name": "RegionPoolsSetting'"
            },
            "arguments": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "_poolIds",
                    "method": "poolIds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "validate": false,
                    "optional": false,
                    "original": "pool_ids"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": false,
                    "original": "region"
                }
            ],
            "key": "cloudflare_load_balancer.region_pools",
            "name": "RegionPoolsSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "_poolIds",
                    "method": "poolIds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "validate": false,
                    "optional": false,
                    "original": "pool_ids"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": false,
                    "original": "region"
                }
            ],
            "conflicts": [],
            "type": "RegionPoolsSetting s",
            "original": "region_pools"
        },
        {
            "con": {
                "smart": "newRequestSetting",
                "name": "RequestSetting'"
            },
            "arguments": [],
            "key": "cloudflare_rate_limit.match.request",
            "name": "RequestSetting",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"methods\" <$> TF.attribute",
                    "name": "_computedMethods",
                    "method": "computedMethods",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedMethods",
                    "validate": false,
                    "optional": true,
                    "original": "methods"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"schemes\" <$> TF.attribute",
                    "name": "_computedSchemes",
                    "method": "computedSchemes",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedSchemes",
                    "validate": false,
                    "optional": true,
                    "original": "schemes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_pattern\" <$> TF.attribute",
                    "name": "_computedUrlPattern",
                    "method": "computedUrlPattern",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUrlPattern",
                    "validate": false,
                    "optional": true,
                    "original": "url_pattern"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "RequestSetting s",
            "original": "request"
        },
        {
            "con": {
                "smart": "newResponseSetting",
                "name": "ResponseSetting'"
            },
            "arguments": [
                {
                    "default": "_body",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"body\" <$> TF.attribute",
                    "name": "_body",
                    "method": "body",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBody",
                    "validate": false,
                    "optional": false,
                    "original": "body"
                },
                {
                    "default": "_contentType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "_contentType",
                    "method": "contentType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentType",
                    "validate": false,
                    "optional": false,
                    "original": "content_type"
                }
            ],
            "key": "cloudflare_rate_limit.action.response",
            "name": "ResponseSetting",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_traffic\" <$> TF.attribute",
                    "name": "_computedOriginTraffic",
                    "method": "computedOriginTraffic",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedOriginTraffic",
                    "validate": false,
                    "optional": true,
                    "original": "origin_traffic"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statuses\" <$> TF.attribute",
                    "name": "_computedStatuses",
                    "method": "computedStatuses",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Int]",
                    "class": "HasComputedStatuses",
                    "validate": false,
                    "optional": true,
                    "original": "statuses"
                }
            ],
            "parameters": [
                {
                    "default": "_body",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"body\" <$> TF.attribute",
                    "name": "_body",
                    "method": "body",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBody",
                    "validate": false,
                    "optional": false,
                    "original": "body"
                },
                {
                    "default": "_contentType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "_contentType",
                    "method": "contentType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentType",
                    "validate": false,
                    "optional": false,
                    "original": "content_type"
                }
            ],
            "conflicts": [],
            "type": "ResponseSetting s",
            "original": "response"
        },
        {
            "con": {
                "smart": "newSecurityHeaderSetting",
                "name": "SecurityHeaderSetting'"
            },
            "arguments": [],
            "key": "cloudflare_zone_settings_override.initial_settings.security_header",
            "name": "SecurityHeaderSetting",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_computedEnabled",
                    "method": "computedEnabled",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "enabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"include_subdomains\" <$> TF.attribute",
                    "name": "_computedIncludeSubdomains",
                    "method": "computedIncludeSubdomains",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIncludeSubdomains",
                    "validate": false,
                    "optional": true,
                    "original": "include_subdomains"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_age\" <$> TF.attribute",
                    "name": "_computedMaxAge",
                    "method": "computedMaxAge",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedMaxAge",
                    "validate": false,
                    "optional": true,
                    "original": "max_age"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"nosniff\" <$> TF.attribute",
                    "name": "_computedNosniff",
                    "method": "computedNosniff",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedNosniff",
                    "validate": false,
                    "optional": true,
                    "original": "nosniff"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preload\" <$> TF.attribute",
                    "name": "_computedPreload",
                    "method": "computedPreload",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPreload",
                    "validate": false,
                    "optional": true,
                    "original": "preload"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "SecurityHeaderSetting s",
            "original": "security_header"
        },
        {
            "con": {
                "smart": "newSettingsSetting",
                "name": "SettingsSetting'"
            },
            "arguments": [],
            "key": "cloudflare_zone_settings_override.settings",
            "name": "SettingsSetting",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advanced_ddos\" <$> TF.attribute",
                    "name": "_computedAdvancedDdos",
                    "method": "computedAdvancedDdos",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdvancedDdos",
                    "validate": false,
                    "optional": true,
                    "original": "advanced_ddos"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_online\" <$> TF.attribute",
                    "name": "_computedAlwaysOnline",
                    "method": "computedAlwaysOnline",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysOnline",
                    "validate": false,
                    "optional": true,
                    "original": "always_online"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_use_https\" <$> TF.attribute",
                    "name": "_computedAlwaysUseHttps",
                    "method": "computedAlwaysUseHttps",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysUseHttps",
                    "validate": false,
                    "optional": true,
                    "original": "always_use_https"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"automatic_https_rewrites\" <$> TF.attribute",
                    "name": "_computedAutomaticHttpsRewrites",
                    "method": "computedAutomaticHttpsRewrites",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAutomaticHttpsRewrites",
                    "validate": false,
                    "optional": true,
                    "original": "automatic_https_rewrites"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"brotli\" <$> TF.attribute",
                    "name": "_computedBrotli",
                    "method": "computedBrotli",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrotli",
                    "validate": false,
                    "optional": true,
                    "original": "brotli"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_cache_ttl\" <$> TF.attribute",
                    "name": "_computedBrowserCacheTtl",
                    "method": "computedBrowserCacheTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedBrowserCacheTtl",
                    "validate": false,
                    "optional": true,
                    "original": "browser_cache_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_check\" <$> TF.attribute",
                    "name": "_computedBrowserCheck",
                    "method": "computedBrowserCheck",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrowserCheck",
                    "validate": false,
                    "optional": true,
                    "original": "browser_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_level\" <$> TF.attribute",
                    "name": "_computedCacheLevel",
                    "method": "computedCacheLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCacheLevel",
                    "validate": false,
                    "optional": true,
                    "original": "cache_level"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"challenge_ttl\" <$> TF.attribute",
                    "name": "_computedChallengeTtl",
                    "method": "computedChallengeTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedChallengeTtl",
                    "validate": false,
                    "optional": true,
                    "original": "challenge_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cname_flattening\" <$> TF.attribute",
                    "name": "_computedCnameFlattening",
                    "method": "computedCnameFlattening",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCnameFlattening",
                    "validate": false,
                    "optional": true,
                    "original": "cname_flattening"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"development_mode\" <$> TF.attribute",
                    "name": "_computedDevelopmentMode",
                    "method": "computedDevelopmentMode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDevelopmentMode",
                    "validate": false,
                    "optional": true,
                    "original": "development_mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"edge_cache_ttl\" <$> TF.attribute",
                    "name": "_computedEdgeCacheTtl",
                    "method": "computedEdgeCacheTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedEdgeCacheTtl",
                    "validate": false,
                    "optional": true,
                    "original": "edge_cache_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email_obfuscation\" <$> TF.attribute",
                    "name": "_computedEmailObfuscation",
                    "method": "computedEmailObfuscation",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmailObfuscation",
                    "validate": false,
                    "optional": true,
                    "original": "email_obfuscation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hotlink_protection\" <$> TF.attribute",
                    "name": "_computedHotlinkProtection",
                    "method": "computedHotlinkProtection",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHotlinkProtection",
                    "validate": false,
                    "optional": true,
                    "original": "hotlink_protection"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http2\" <$> TF.attribute",
                    "name": "_computedHttp2",
                    "method": "computedHttp2",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttp2",
                    "validate": false,
                    "optional": true,
                    "original": "http2"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_geolocation\" <$> TF.attribute",
                    "name": "_computedIpGeolocation",
                    "method": "computedIpGeolocation",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpGeolocation",
                    "validate": false,
                    "optional": true,
                    "original": "ip_geolocation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6\" <$> TF.attribute",
                    "name": "_computedIpv6",
                    "method": "computedIpv6",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6",
                    "validate": false,
                    "optional": true,
                    "original": "ipv6"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_upload\" <$> TF.attribute",
                    "name": "_computedMaxUpload",
                    "method": "computedMaxUpload",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedMaxUpload",
                    "validate": false,
                    "optional": true,
                    "original": "max_upload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "_computedMinTlsVersion",
                    "method": "computedMinTlsVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinTlsVersion",
                    "validate": false,
                    "optional": true,
                    "original": "min_tls_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minify\" <$> TF.attribute",
                    "name": "_computedMinify",
                    "method": "computedMinify",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (MinifySetting s)",
                    "class": "HasComputedMinify",
                    "validate": true,
                    "optional": true,
                    "original": "minify"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mirage\" <$> TF.attribute",
                    "name": "_computedMirage",
                    "method": "computedMirage",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMirage",
                    "validate": false,
                    "optional": true,
                    "original": "mirage"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_redirect\" <$> TF.attribute",
                    "name": "_computedMobileRedirect",
                    "method": "computedMobileRedirect",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (MobileRedirectSetting s)",
                    "class": "HasComputedMobileRedirect",
                    "validate": true,
                    "optional": true,
                    "original": "mobile_redirect"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"opportunistic_encryption\" <$> TF.attribute",
                    "name": "_computedOpportunisticEncryption",
                    "method": "computedOpportunisticEncryption",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOpportunisticEncryption",
                    "validate": false,
                    "optional": true,
                    "original": "opportunistic_encryption"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_error_page_pass_thru\" <$> TF.attribute",
                    "name": "_computedOriginErrorPagePassThru",
                    "method": "computedOriginErrorPagePassThru",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOriginErrorPagePassThru",
                    "validate": false,
                    "optional": true,
                    "original": "origin_error_page_pass_thru"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"polish\" <$> TF.attribute",
                    "name": "_computedPolish",
                    "method": "computedPolish",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolish",
                    "validate": false,
                    "optional": true,
                    "original": "polish"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"prefetch_preload\" <$> TF.attribute",
                    "name": "_computedPrefetchPreload",
                    "method": "computedPrefetchPreload",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrefetchPreload",
                    "validate": false,
                    "optional": true,
                    "original": "prefetch_preload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"privacy_pass\" <$> TF.attribute",
                    "name": "_computedPrivacyPass",
                    "method": "computedPrivacyPass",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivacyPass",
                    "validate": false,
                    "optional": true,
                    "original": "privacy_pass"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pseudo_ipv4\" <$> TF.attribute",
                    "name": "_computedPseudoIpv4",
                    "method": "computedPseudoIpv4",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPseudoIpv4",
                    "validate": false,
                    "optional": true,
                    "original": "pseudo_ipv4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_buffering\" <$> TF.attribute",
                    "name": "_computedResponseBuffering",
                    "method": "computedResponseBuffering",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedResponseBuffering",
                    "validate": false,
                    "optional": true,
                    "original": "response_buffering"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rocket_loader\" <$> TF.attribute",
                    "name": "_computedRocketLoader",
                    "method": "computedRocketLoader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRocketLoader",
                    "validate": false,
                    "optional": true,
                    "original": "rocket_loader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_header\" <$> TF.attribute",
                    "name": "_computedSecurityHeader",
                    "method": "computedSecurityHeader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (SecurityHeaderSetting s)",
                    "class": "HasComputedSecurityHeader",
                    "validate": true,
                    "optional": true,
                    "original": "security_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_level\" <$> TF.attribute",
                    "name": "_computedSecurityLevel",
                    "method": "computedSecurityLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSecurityLevel",
                    "validate": false,
                    "optional": true,
                    "original": "security_level"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_side_exclude\" <$> TF.attribute",
                    "name": "_computedServerSideExclude",
                    "method": "computedServerSideExclude",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServerSideExclude",
                    "validate": false,
                    "optional": true,
                    "original": "server_side_exclude"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha1_support\" <$> TF.attribute",
                    "name": "_computedSha1Support",
                    "method": "computedSha1Support",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha1Support",
                    "validate": false,
                    "optional": true,
                    "original": "sha1_support"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sort_query_string_for_cache\" <$> TF.attribute",
                    "name": "_computedSortQueryStringForCache",
                    "method": "computedSortQueryStringForCache",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSortQueryStringForCache",
                    "validate": false,
                    "optional": true,
                    "original": "sort_query_string_for_cache"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl\" <$> TF.attribute",
                    "name": "_computedSsl",
                    "method": "computedSsl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSsl",
                    "validate": false,
                    "optional": true,
                    "original": "ssl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_2_only\" <$> TF.attribute",
                    "name": "_computedTls12Only",
                    "method": "computedTls12Only",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls12Only",
                    "validate": false,
                    "optional": true,
                    "original": "tls_1_2_only"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_3\" <$> TF.attribute",
                    "name": "_computedTls13",
                    "method": "computedTls13",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls13",
                    "validate": false,
                    "optional": true,
                    "original": "tls_1_3"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_client_auth\" <$> TF.attribute",
                    "name": "_computedTlsClientAuth",
                    "method": "computedTlsClientAuth",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsClientAuth",
                    "validate": false,
                    "optional": true,
                    "original": "tls_client_auth"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"true_client_ip_header\" <$> TF.attribute",
                    "name": "_computedTrueClientIpHeader",
                    "method": "computedTrueClientIpHeader",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTrueClientIpHeader",
                    "validate": false,
                    "optional": true,
                    "original": "true_client_ip_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"waf\" <$> TF.attribute",
                    "name": "_computedWaf",
                    "method": "computedWaf",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWaf",
                    "validate": false,
                    "optional": true,
                    "original": "waf"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"webp\" <$> TF.attribute",
                    "name": "_computedWebp",
                    "method": "computedWebp",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebp",
                    "validate": false,
                    "optional": true,
                    "original": "webp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"websockets\" <$> TF.attribute",
                    "name": "_computedWebsockets",
                    "method": "computedWebsockets",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebsockets",
                    "validate": false,
                    "optional": true,
                    "original": "websockets"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "SettingsSetting s",
            "original": "settings"
        }
    ],
    "url": "https://www.terraform.io/docs/providers/cloudflare/index.html",
    "dataSources": [
        {
            "con": {
                "smart": "ipRangesData",
                "name": "IpRangesData'"
            },
            "arguments": [],
            "url": "https://www.terraform.io/docs/providers/cloudflare/d/ip_ranges.html",
            "key": "cloudflare_ip_ranges",
            "name": "IpRangesData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks\" <$> TF.attribute",
                    "name": "_computedCidrBlocks",
                    "method": "computedCidrBlocks",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCidrBlocks",
                    "validate": false,
                    "optional": false,
                    "original": "cidr_blocks"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv4_cidr_blocks\" <$> TF.attribute",
                    "name": "_computedIpv4CidrBlocks",
                    "method": "computedIpv4CidrBlocks",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedIpv4CidrBlocks",
                    "validate": false,
                    "optional": false,
                    "original": "ipv4_cidr_blocks"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6_cidr_blocks\" <$> TF.attribute",
                    "name": "_computedIpv6CidrBlocks",
                    "method": "computedIpv6CidrBlocks",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedIpv6CidrBlocks",
                    "validate": false,
                    "optional": false,
                    "original": "ipv6_cidr_blocks"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "IpRangesData s",
            "original": "cloudflare_ip_ranges"
        }
    ],
    "resources": [
        {
            "con": {
                "smart": "loadBalancerResource",
                "name": "LoadBalancerResource'"
            },
            "arguments": [
                {
                    "default": "_defaultPoolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_pool_ids\" <$> TF.attribute",
                    "name": "_defaultPoolIds",
                    "method": "defaultPoolIds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasDefaultPoolIds",
                    "validate": false,
                    "optional": false,
                    "original": "default_pool_ids"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_fallbackPoolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fallback_pool_id\" <$> TF.attribute",
                    "name": "_fallbackPoolId",
                    "method": "fallbackPoolId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFallbackPoolId",
                    "validate": false,
                    "optional": false,
                    "original": "fallback_pool_id"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxied\" <$> TF.attribute",
                    "name": "_proxied",
                    "method": "proxied",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasProxied",
                    "validate": false,
                    "optional": true,
                    "original": "proxied"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/load_balancer.html",
            "key": "cloudflare_load_balancer",
            "name": "LoadBalancerResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "_computedCreatedOn",
                    "method": "computedCreatedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "validate": false,
                    "optional": false,
                    "original": "created_on"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "_computedModifiedOn",
                    "method": "computedModifiedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "validate": false,
                    "optional": false,
                    "original": "modified_on"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pop_pools\" <$> TF.attribute",
                    "name": "_computedPopPools",
                    "method": "computedPopPools",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PopPoolsSetting s)]",
                    "class": "HasComputedPopPools",
                    "validate": false,
                    "optional": true,
                    "original": "pop_pools"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region_pools\" <$> TF.attribute",
                    "name": "_computedRegionPools",
                    "method": "computedRegionPools",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (RegionPoolsSetting s)]",
                    "class": "HasComputedRegionPools",
                    "validate": false,
                    "optional": true,
                    "original": "region_pools"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "_computedTtl",
                    "method": "computedTtl",
                    "threaded": true,
                    "conflicts": [
                        "_proxied"
                    ],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedTtl",
                    "validate": false,
                    "optional": true,
                    "original": "ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "_computedZoneId",
                    "method": "computedZoneId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "validate": false,
                    "optional": false,
                    "original": "zone_id"
                }
            ],
            "parameters": [
                {
                    "default": "_fallbackPoolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fallback_pool_id\" <$> TF.attribute",
                    "name": "_fallbackPoolId",
                    "method": "fallbackPoolId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFallbackPoolId",
                    "validate": false,
                    "optional": false,
                    "original": "fallback_pool_id"
                },
                {
                    "default": "_defaultPoolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_pool_ids\" <$> TF.attribute",
                    "name": "_defaultPoolIds",
                    "method": "defaultPoolIds",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasDefaultPoolIds",
                    "validate": false,
                    "optional": false,
                    "original": "default_pool_ids"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "conflicts": [],
            "type": "LoadBalancerResource s",
            "original": "cloudflare_load_balancer"
        },
        {
            "con": {
                "smart": "loadBalancerMonitorResource",
                "name": "LoadBalancerMonitorResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_expectedBody",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_body\" <$> TF.attribute",
                    "name": "_expectedBody",
                    "method": "expectedBody",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedBody",
                    "validate": false,
                    "optional": false,
                    "original": "expected_body"
                },
                {
                    "default": "_expectedCodes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_codes\" <$> TF.attribute",
                    "name": "_expectedCodes",
                    "method": "expectedCodes",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedCodes",
                    "validate": false,
                    "optional": false,
                    "original": "expected_codes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "_header",
                    "method": "header",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (HeaderSetting s)]",
                    "class": "HasHeader",
                    "validate": false,
                    "optional": true,
                    "original": "header"
                },
                {
                    "default": "TF.value 60",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"interval\" <$> TF.attribute",
                    "name": "_interval",
                    "method": "interval",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasInterval",
                    "validate": false,
                    "optional": true,
                    "original": "interval"
                },
                {
                    "default": "TF.value \"GET\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"method\" <$> TF.attribute",
                    "name": "_method",
                    "method": "method",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMethod",
                    "validate": false,
                    "optional": true,
                    "original": "method"
                },
                {
                    "default": "TF.value \"/\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": true,
                    "original": "path"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retries\" <$> TF.attribute",
                    "name": "_retries",
                    "method": "retries",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasRetries",
                    "validate": false,
                    "optional": true,
                    "original": "retries"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "_timeout",
                    "method": "timeout",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "timeout"
                },
                {
                    "default": "TF.value \"http\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/load_balancer_monitor.html",
            "key": "cloudflare_load_balancer_monitor",
            "name": "LoadBalancerMonitorResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "_computedCreatedOn",
                    "method": "computedCreatedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "validate": false,
                    "optional": false,
                    "original": "created_on"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "_computedModifiedOn",
                    "method": "computedModifiedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "validate": false,
                    "optional": false,
                    "original": "modified_on"
                }
            ],
            "parameters": [
                {
                    "default": "_expectedBody",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_body\" <$> TF.attribute",
                    "name": "_expectedBody",
                    "method": "expectedBody",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedBody",
                    "validate": false,
                    "optional": false,
                    "original": "expected_body"
                },
                {
                    "default": "_expectedCodes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_codes\" <$> TF.attribute",
                    "name": "_expectedCodes",
                    "method": "expectedCodes",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedCodes",
                    "validate": false,
                    "optional": false,
                    "original": "expected_codes"
                }
            ],
            "conflicts": [],
            "type": "LoadBalancerMonitorResource s",
            "original": "cloudflare_load_balancer_monitor"
        },
        {
            "con": {
                "smart": "loadBalancerPoolResource",
                "name": "LoadBalancerPoolResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_enabled",
                    "method": "enabled",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "enabled"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"minimum_origins\" <$> TF.attribute",
                    "name": "_minimumOrigins",
                    "method": "minimumOrigins",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasMinimumOrigins",
                    "validate": false,
                    "optional": true,
                    "original": "minimum_origins"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"monitor\" <$> TF.attribute",
                    "name": "_monitor",
                    "method": "monitor",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMonitor",
                    "validate": false,
                    "optional": true,
                    "original": "monitor"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"notification_email\" <$> TF.attribute",
                    "name": "_notificationEmail",
                    "method": "notificationEmail",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNotificationEmail",
                    "validate": false,
                    "optional": true,
                    "original": "notification_email"
                },
                {
                    "default": "_origins",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"origins\" <$> TF.attribute",
                    "name": "_origins",
                    "method": "origins",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (OriginsSetting s)]",
                    "class": "HasOrigins",
                    "validate": false,
                    "optional": false,
                    "original": "origins"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/load_balancer_pool.html",
            "key": "cloudflare_load_balancer_pool",
            "name": "LoadBalancerPoolResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"check_regions\" <$> TF.attribute",
                    "name": "_computedCheckRegions",
                    "method": "computedCheckRegions",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCheckRegions",
                    "validate": false,
                    "optional": true,
                    "original": "check_regions"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "_computedCreatedOn",
                    "method": "computedCreatedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "validate": false,
                    "optional": false,
                    "original": "created_on"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "_computedModifiedOn",
                    "method": "computedModifiedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "validate": false,
                    "optional": false,
                    "original": "modified_on"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_origins",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"origins\" <$> TF.attribute",
                    "name": "_origins",
                    "method": "origins",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (OriginsSetting s)]",
                    "class": "HasOrigins",
                    "validate": false,
                    "optional": false,
                    "original": "origins"
                }
            ],
            "conflicts": [],
            "type": "LoadBalancerPoolResource s",
            "original": "cloudflare_load_balancer_pool"
        },
        {
            "con": {
                "smart": "pageRuleResource",
                "name": "PageRuleResource'"
            },
            "arguments": [
                {
                    "default": "_actions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"actions\" <$> TF.attribute",
                    "name": "_actions",
                    "method": "actions",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (ActionsSetting s)",
                    "class": "HasActions",
                    "validate": true,
                    "optional": false,
                    "original": "actions"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": true,
                    "original": "priority"
                },
                {
                    "default": "TF.value \"active\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": true,
                    "original": "status"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/page_rule.html",
            "key": "cloudflare_page_rule",
            "name": "PageRuleResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "_computedZoneId",
                    "method": "computedZoneId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "validate": false,
                    "optional": false,
                    "original": "zone_id"
                }
            ],
            "parameters": [
                {
                    "default": "_actions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"actions\" <$> TF.attribute",
                    "name": "_actions",
                    "method": "actions",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (ActionsSetting s)",
                    "class": "HasActions",
                    "validate": true,
                    "optional": false,
                    "original": "actions"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "conflicts": [],
            "type": "PageRuleResource s",
            "original": "cloudflare_page_rule"
        },
        {
            "con": {
                "smart": "rateLimitResource",
                "name": "RateLimitResource'"
            },
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (ActionSetting s)",
                    "class": "HasAction",
                    "validate": true,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bypass_url_patterns\" <$> TF.attribute",
                    "name": "_bypassUrlPatterns",
                    "method": "bypassUrlPatterns",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasBypassUrlPatterns",
                    "validate": false,
                    "optional": true,
                    "original": "bypass_url_patterns"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"correlate\" <$> TF.attribute",
                    "name": "_correlate",
                    "method": "correlate",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (CorrelateSetting s)",
                    "class": "HasCorrelate",
                    "validate": true,
                    "optional": true,
                    "original": "correlate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_disabled",
                    "method": "disabled",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisabled",
                    "validate": false,
                    "optional": true,
                    "original": "disabled"
                },
                {
                    "default": "_period",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "_period",
                    "method": "period",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPeriod",
                    "validate": false,
                    "optional": false,
                    "original": "period"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "_threshold",
                    "method": "threshold",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasThreshold",
                    "validate": false,
                    "optional": false,
                    "original": "threshold"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/rate_limit.html",
            "key": "cloudflare_rate_limit",
            "name": "RateLimitResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"match\" <$> TF.attribute",
                    "name": "_computedMatch",
                    "method": "computedMatch",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (MatchSetting s)",
                    "class": "HasComputedMatch",
                    "validate": true,
                    "optional": true,
                    "original": "match"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "_computedZoneId",
                    "method": "computedZoneId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "validate": false,
                    "optional": false,
                    "original": "zone_id"
                }
            ],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (ActionSetting s)",
                    "class": "HasAction",
                    "validate": true,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "_period",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "_period",
                    "method": "period",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPeriod",
                    "validate": false,
                    "optional": false,
                    "original": "period"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "_threshold",
                    "method": "threshold",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasThreshold",
                    "validate": false,
                    "optional": false,
                    "original": "threshold"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "conflicts": [],
            "type": "RateLimitResource s",
            "original": "cloudflare_rate_limit"
        },
        {
            "con": {
                "smart": "recordResource",
                "name": "RecordResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"data\" <$> TF.attribute",
                    "name": "_data'",
                    "method": "data'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (P.Map P.Text (TF.Attr s (DataSetting s)))",
                    "class": "HasData'",
                    "validate": false,
                    "optional": true,
                    "original": "data"
                },
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "_domain",
                    "method": "domain",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "validate": false,
                    "optional": false,
                    "original": "domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": true,
                    "original": "priority"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxied\" <$> TF.attribute",
                    "name": "_proxied",
                    "method": "proxied",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasProxied",
                    "validate": false,
                    "optional": true,
                    "original": "proxied"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/record.html",
            "key": "cloudflare_record",
            "name": "RecordResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "_computedCreatedOn",
                    "method": "computedCreatedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "validate": false,
                    "optional": false,
                    "original": "created_on"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hostname\" <$> TF.attribute",
                    "name": "_computedHostname",
                    "method": "computedHostname",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHostname",
                    "validate": false,
                    "optional": false,
                    "original": "hostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_computedMetadata",
                    "method": "computedMetadata",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (P.Map P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "validate": false,
                    "optional": false,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "_computedModifiedOn",
                    "method": "computedModifiedOn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "validate": false,
                    "optional": false,
                    "original": "modified_on"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxiable\" <$> TF.attribute",
                    "name": "_computedProxiable",
                    "method": "computedProxiable",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedProxiable",
                    "validate": false,
                    "optional": false,
                    "original": "proxiable"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "_computedTtl",
                    "method": "computedTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedTtl",
                    "validate": false,
                    "optional": true,
                    "original": "ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_computedValue",
                    "method": "computedValue",
                    "threaded": true,
                    "conflicts": [
                        "_data'"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedValue",
                    "validate": false,
                    "optional": true,
                    "original": "value"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "_computedZoneId",
                    "method": "computedZoneId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "validate": false,
                    "optional": false,
                    "original": "zone_id"
                }
            ],
            "parameters": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "_domain",
                    "method": "domain",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "validate": false,
                    "optional": false,
                    "original": "domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "RecordResource s",
            "original": "cloudflare_record"
        },
        {
            "con": {
                "smart": "wafRuleResource",
                "name": "WafRuleResource'"
            },
            "arguments": [
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "_mode",
                    "method": "mode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "validate": false,
                    "optional": false,
                    "original": "mode"
                },
                {
                    "default": "_ruleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule_id\" <$> TF.attribute",
                    "name": "_ruleId",
                    "method": "ruleId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRuleId",
                    "validate": false,
                    "optional": false,
                    "original": "rule_id"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/waf_rule.html",
            "key": "cloudflare_waf_rule",
            "name": "WafRuleResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"package_id\" <$> TF.attribute",
                    "name": "_computedPackageId",
                    "method": "computedPackageId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPackageId",
                    "validate": false,
                    "optional": false,
                    "original": "package_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "_computedZoneId",
                    "method": "computedZoneId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "validate": false,
                    "optional": false,
                    "original": "zone_id"
                }
            ],
            "parameters": [
                {
                    "default": "_ruleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule_id\" <$> TF.attribute",
                    "name": "_ruleId",
                    "method": "ruleId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRuleId",
                    "validate": false,
                    "optional": false,
                    "original": "rule_id"
                },
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "_mode",
                    "method": "mode",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "validate": false,
                    "optional": false,
                    "original": "mode"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": false,
                    "original": "zone"
                }
            ],
            "conflicts": [],
            "type": "WafRuleResource s",
            "original": "cloudflare_waf_rule"
        },
        {
            "con": {
                "smart": "zoneSettingsOverrideResource",
                "name": "ZoneSettingsOverrideResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/cloudflare/r/zone_settings_override.html",
            "key": "cloudflare_zone_settings_override",
            "name": "ZoneSettingsOverrideResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_settings\" <$> TF.attribute",
                    "name": "_computedInitialSettings",
                    "method": "computedInitialSettings",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (InitialSettingsSetting s)",
                    "class": "HasComputedInitialSettings",
                    "validate": true,
                    "optional": false,
                    "original": "initial_settings"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_settings_read_at\" <$> TF.attribute",
                    "name": "_computedInitialSettingsReadAt",
                    "method": "computedInitialSettingsReadAt",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInitialSettingsReadAt",
                    "validate": false,
                    "optional": false,
                    "original": "initial_settings_read_at"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"readonly_settings\" <$> TF.attribute",
                    "name": "_computedReadonlySettings",
                    "method": "computedReadonlySettings",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedReadonlySettings",
                    "validate": false,
                    "optional": false,
                    "original": "readonly_settings"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"settings\" <$> TF.attribute",
                    "name": "_computedSettings",
                    "method": "computedSettings",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s (SettingsSetting s)",
                    "class": "HasComputedSettings",
                    "validate": true,
                    "optional": true,
                    "original": "settings"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_status\" <$> TF.attribute",
                    "name": "_computedZoneStatus",
                    "method": "computedZoneStatus",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneStatus",
                    "validate": false,
                    "optional": false,
                    "original": "zone_status"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_type\" <$> TF.attribute",
                    "name": "_computedZoneType",
                    "method": "computedZoneType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneType",
                    "validate": false,
                    "optional": false,
                    "original": "zone_type"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ZoneSettingsOverrideResource s",
            "original": "cloudflare_zone_settings_override"
        }
    ],
    "schema": {
        "con": {
            "smart": "newProvider",
            "name": "Provider'"
        },
        "arguments": [
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "Whether to print logs from the API client (using the default log library",
                    "logger)"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"api_client_logging\" <$>",
                "name": "_apiClientLogging",
                "method": "apiClientLogging",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Bool",
                "class": "HasApiClientLogging",
                "validate": false,
                "optional": true,
                "original": "api_client_logging"
            },
            {
                "default": "_email",
                "computed": false,
                "required": true,
                "help": [
                    "A registered Cloudflare email address."
                ],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"email\"",
                "name": "_email",
                "method": "email",
                "threaded": false,
                "conflicts": [],
                "type": "P.Text",
                "class": "HasEmail",
                "validate": false,
                "optional": false,
                "original": "email"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "Maximum backoff period in seconds after failed API calls"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"max_backoff\" <$>",
                "name": "_maxBackoff",
                "method": "maxBackoff",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Int",
                "class": "HasMaxBackoff",
                "validate": false,
                "optional": true,
                "original": "max_backoff"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "Minimum backoff period in seconds after failed API calls"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"min_backoff\" <$>",
                "name": "_minBackoff",
                "method": "minBackoff",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Int",
                "class": "HasMinBackoff",
                "validate": false,
                "optional": true,
                "original": "min_backoff"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "Configure API client to always use that organization. If set this will",
                    "override 'user_owner_from_zone'"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"org_id\" <$>",
                "name": "_orgId",
                "method": "orgId",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasOrgId",
                "validate": false,
                "optional": true,
                "original": "org_id"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "Maximum number of retries to perform when an API request fails"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"retries\" <$>",
                "name": "_retries",
                "method": "retries",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Int",
                "class": "HasRetries",
                "validate": false,
                "optional": true,
                "original": "retries"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "RPS limit to apply when making calls to the API"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"rps\" <$>",
                "name": "_rps",
                "method": "rps",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Int",
                "class": "HasRps",
                "validate": false,
                "optional": true,
                "original": "rps"
            },
            {
                "default": "_token",
                "computed": false,
                "required": true,
                "help": [
                    "The token key for API operations."
                ],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"token\"",
                "name": "_token",
                "method": "token",
                "threaded": false,
                "conflicts": [],
                "type": "P.Text",
                "class": "HasToken",
                "validate": false,
                "optional": false,
                "original": "token"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "If specified zone is owned by an organization, configure API client to",
                    "always use that organization"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"use_org_from_zone\" <$>",
                "name": "_useOrgFromZone",
                "method": "useOrgFromZone",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasUseOrgFromZone",
                "validate": false,
                "optional": true,
                "original": "use_org_from_zone"
            }
        ],
        "key": "provider",
        "name": "Provider",
        "threaded": false,
        "attributes": [],
        "parameters": [
            {
                "default": "_email",
                "computed": false,
                "required": true,
                "help": [
                    "A registered Cloudflare email address."
                ],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"email\"",
                "name": "_email",
                "method": "email",
                "threaded": false,
                "conflicts": [],
                "type": "P.Text",
                "class": "HasEmail",
                "validate": false,
                "optional": false,
                "original": "email"
            },
            {
                "default": "_token",
                "computed": false,
                "required": true,
                "help": [
                    "The token key for API operations."
                ],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"token\"",
                "name": "_token",
                "method": "token",
                "threaded": false,
                "conflicts": [],
                "type": "P.Text",
                "class": "HasToken",
                "validate": false,
                "optional": false,
                "original": "token"
            }
        ],
        "conflicts": [],
        "type": "Provider",
        "original": "provider"
    },
    "dependencies": [
        "aeson",
        "base",
        "containers",
        "microlens",
        "terrafomo",
        "text"
    ],
    "name": "Cloudflare",
    "package": "terrafomo-cloudflare",
    "primitives": [],
    "original": "cloudflare"
}