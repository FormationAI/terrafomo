{
    "settings": [
        {
            "arguments": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "pool_ids",
                    "method": "poolIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "optional": false,
                    "label": "_poolIds"
                },
                {
                    "default": "_pop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pop\" <$> TF.attribute",
                    "name": "pop",
                    "method": "pop",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPop",
                    "optional": false,
                    "label": "_pop"
                }
            ],
            "name": "PopPools",
            "attributes": [],
            "parameters": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "pool_ids",
                    "method": "poolIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "optional": false,
                    "label": "_poolIds"
                },
                {
                    "default": "_pop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pop\" <$> TF.attribute",
                    "name": "pop",
                    "method": "pop",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPop",
                    "optional": false,
                    "label": "_pop"
                }
            ],
            "hashable": false,
            "type": "PopPools s",
            "original": "pop_pools"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_online\" <$> TF.attribute",
                    "name": "always_online",
                    "method": "alwaysOnline",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAlwaysOnline",
                    "optional": true,
                    "label": "_alwaysOnline"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_use_https\" <$> TF.attribute",
                    "name": "always_use_https",
                    "method": "alwaysUseHttps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAlwaysUseHttps",
                    "optional": true,
                    "label": "_alwaysUseHttps"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"automatic_https_rewrites\" <$> TF.attribute",
                    "name": "automatic_https_rewrites",
                    "method": "automaticHttpsRewrites",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAutomaticHttpsRewrites",
                    "optional": true,
                    "label": "_automaticHttpsRewrites"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_cache_ttl\" <$> TF.attribute",
                    "name": "browser_cache_ttl",
                    "method": "browserCacheTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasBrowserCacheTtl",
                    "optional": true,
                    "label": "_browserCacheTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_check\" <$> TF.attribute",
                    "name": "browser_check",
                    "method": "browserCheck",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBrowserCheck",
                    "optional": true,
                    "label": "_browserCheck"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bypass_cache_on_cookie\" <$> TF.attribute",
                    "name": "bypass_cache_on_cookie",
                    "method": "bypassCacheOnCookie",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBypassCacheOnCookie",
                    "optional": true,
                    "label": "_bypassCacheOnCookie"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_by_device_type\" <$> TF.attribute",
                    "name": "cache_by_device_type",
                    "method": "cacheByDeviceType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheByDeviceType",
                    "optional": true,
                    "label": "_cacheByDeviceType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_deception_armor\" <$> TF.attribute",
                    "name": "cache_deception_armor",
                    "method": "cacheDeceptionArmor",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheDeceptionArmor",
                    "optional": true,
                    "label": "_cacheDeceptionArmor"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_level\" <$> TF.attribute",
                    "name": "cache_level",
                    "method": "cacheLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheLevel",
                    "optional": true,
                    "label": "_cacheLevel"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_on_cookie\" <$> TF.attribute",
                    "name": "cache_on_cookie",
                    "method": "cacheOnCookie",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheOnCookie",
                    "optional": true,
                    "label": "_cacheOnCookie"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_apps\" <$> TF.attribute",
                    "name": "disable_apps",
                    "method": "disableApps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableApps",
                    "optional": true,
                    "label": "_disableApps"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_performance\" <$> TF.attribute",
                    "name": "disable_performance",
                    "method": "disablePerformance",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisablePerformance",
                    "optional": true,
                    "label": "_disablePerformance"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_railgun\" <$> TF.attribute",
                    "name": "disable_railgun",
                    "method": "disableRailgun",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableRailgun",
                    "optional": true,
                    "label": "_disableRailgun"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_security\" <$> TF.attribute",
                    "name": "disable_security",
                    "method": "disableSecurity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableSecurity",
                    "optional": true,
                    "label": "_disableSecurity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"edge_cache_ttl\" <$> TF.attribute",
                    "name": "edge_cache_ttl",
                    "method": "edgeCacheTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasEdgeCacheTtl",
                    "optional": true,
                    "label": "_edgeCacheTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email_obfuscation\" <$> TF.attribute",
                    "name": "email_obfuscation",
                    "method": "emailObfuscation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmailObfuscation",
                    "optional": true,
                    "label": "_emailObfuscation"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"explicit_cache_control\" <$> TF.attribute",
                    "name": "explicit_cache_control",
                    "method": "explicitCacheControl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExplicitCacheControl",
                    "optional": true,
                    "label": "_explicitCacheControl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"forwarding_url\" <$> TF.attribute",
                    "name": "forwarding_url",
                    "method": "forwardingUrl",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (ForwardingUrl s))",
                    "class": "HasForwardingUrl",
                    "optional": true,
                    "label": "_forwardingUrl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host_header_override\" <$> TF.attribute",
                    "name": "host_header_override",
                    "method": "hostHeaderOverride",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostHeaderOverride",
                    "optional": true,
                    "label": "_hostHeaderOverride"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_geolocation\" <$> TF.attribute",
                    "name": "ip_geolocation",
                    "method": "ipGeolocation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpGeolocation",
                    "optional": true,
                    "label": "_ipGeolocation"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mirage\" <$> TF.attribute",
                    "name": "mirage",
                    "method": "mirage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMirage",
                    "optional": true,
                    "label": "_mirage"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"opportunistic_encryption\" <$> TF.attribute",
                    "name": "opportunistic_encryption",
                    "method": "opportunisticEncryption",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOpportunisticEncryption",
                    "optional": true,
                    "label": "_opportunisticEncryption"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_error_page_pass_thru\" <$> TF.attribute",
                    "name": "origin_error_page_pass_thru",
                    "method": "originErrorPagePassThru",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOriginErrorPagePassThru",
                    "optional": true,
                    "label": "_originErrorPagePassThru"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"polish\" <$> TF.attribute",
                    "name": "polish",
                    "method": "polish",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolish",
                    "optional": true,
                    "label": "_polish"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resolve_override\" <$> TF.attribute",
                    "name": "resolve_override",
                    "method": "resolveOverride",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResolveOverride",
                    "optional": true,
                    "label": "_resolveOverride"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"respect_strong_etag\" <$> TF.attribute",
                    "name": "respect_strong_etag",
                    "method": "respectStrongEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRespectStrongEtag",
                    "optional": true,
                    "label": "_respectStrongEtag"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_buffering\" <$> TF.attribute",
                    "name": "response_buffering",
                    "method": "responseBuffering",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseBuffering",
                    "optional": true,
                    "label": "_responseBuffering"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rocket_loader\" <$> TF.attribute",
                    "name": "rocket_loader",
                    "method": "rocketLoader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRocketLoader",
                    "optional": true,
                    "label": "_rocketLoader"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_level\" <$> TF.attribute",
                    "name": "security_level",
                    "method": "securityLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecurityLevel",
                    "optional": true,
                    "label": "_securityLevel"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_side_exclude\" <$> TF.attribute",
                    "name": "server_side_exclude",
                    "method": "serverSideExclude",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServerSideExclude",
                    "optional": true,
                    "label": "_serverSideExclude"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sort_query_string_for_cache\" <$> TF.attribute",
                    "name": "sort_query_string_for_cache",
                    "method": "sortQueryStringForCache",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSortQueryStringForCache",
                    "optional": true,
                    "label": "_sortQueryStringForCache"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl\" <$> TF.attribute",
                    "name": "ssl",
                    "method": "ssl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSsl",
                    "optional": true,
                    "label": "_ssl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"true_client_ip_header\" <$> TF.attribute",
                    "name": "true_client_ip_header",
                    "method": "trueClientIpHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTrueClientIpHeader",
                    "optional": true,
                    "label": "_trueClientIpHeader"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"waf\" <$> TF.attribute",
                    "name": "waf",
                    "method": "waf",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasWaf",
                    "optional": true,
                    "label": "_waf"
                }
            ],
            "name": "Actions",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Actions s",
            "original": "actions"
        },
        {
            "arguments": [],
            "name": "Settings",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advanced_ddos\" <$> TF.attribute",
                    "name": "advanced_ddos",
                    "method": "computedAdvancedDdos",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdvancedDdos",
                    "optional": true,
                    "label": "_computedAdvancedDdos"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_online\" <$> TF.attribute",
                    "name": "always_online",
                    "method": "computedAlwaysOnline",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysOnline",
                    "optional": true,
                    "label": "_computedAlwaysOnline"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_use_https\" <$> TF.attribute",
                    "name": "always_use_https",
                    "method": "computedAlwaysUseHttps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysUseHttps",
                    "optional": true,
                    "label": "_computedAlwaysUseHttps"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"automatic_https_rewrites\" <$> TF.attribute",
                    "name": "automatic_https_rewrites",
                    "method": "computedAutomaticHttpsRewrites",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAutomaticHttpsRewrites",
                    "optional": true,
                    "label": "_computedAutomaticHttpsRewrites"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"brotli\" <$> TF.attribute",
                    "name": "brotli",
                    "method": "computedBrotli",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrotli",
                    "optional": true,
                    "label": "_computedBrotli"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_cache_ttl\" <$> TF.attribute",
                    "name": "browser_cache_ttl",
                    "method": "computedBrowserCacheTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedBrowserCacheTtl",
                    "optional": true,
                    "label": "_computedBrowserCacheTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_check\" <$> TF.attribute",
                    "name": "browser_check",
                    "method": "computedBrowserCheck",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrowserCheck",
                    "optional": true,
                    "label": "_computedBrowserCheck"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_level\" <$> TF.attribute",
                    "name": "cache_level",
                    "method": "computedCacheLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCacheLevel",
                    "optional": true,
                    "label": "_computedCacheLevel"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"challenge_ttl\" <$> TF.attribute",
                    "name": "challenge_ttl",
                    "method": "computedChallengeTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedChallengeTtl",
                    "optional": true,
                    "label": "_computedChallengeTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cname_flattening\" <$> TF.attribute",
                    "name": "cname_flattening",
                    "method": "computedCnameFlattening",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCnameFlattening",
                    "optional": true,
                    "label": "_computedCnameFlattening"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"development_mode\" <$> TF.attribute",
                    "name": "development_mode",
                    "method": "computedDevelopmentMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDevelopmentMode",
                    "optional": true,
                    "label": "_computedDevelopmentMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"edge_cache_ttl\" <$> TF.attribute",
                    "name": "edge_cache_ttl",
                    "method": "computedEdgeCacheTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedEdgeCacheTtl",
                    "optional": true,
                    "label": "_computedEdgeCacheTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email_obfuscation\" <$> TF.attribute",
                    "name": "email_obfuscation",
                    "method": "computedEmailObfuscation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmailObfuscation",
                    "optional": true,
                    "label": "_computedEmailObfuscation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hotlink_protection\" <$> TF.attribute",
                    "name": "hotlink_protection",
                    "method": "computedHotlinkProtection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHotlinkProtection",
                    "optional": true,
                    "label": "_computedHotlinkProtection"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http2\" <$> TF.attribute",
                    "name": "http2",
                    "method": "computedHttp2",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttp2",
                    "optional": true,
                    "label": "_computedHttp2"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_geolocation\" <$> TF.attribute",
                    "name": "ip_geolocation",
                    "method": "computedIpGeolocation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpGeolocation",
                    "optional": true,
                    "label": "_computedIpGeolocation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6\" <$> TF.attribute",
                    "name": "ipv6",
                    "method": "computedIpv6",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6",
                    "optional": true,
                    "label": "_computedIpv6"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_upload\" <$> TF.attribute",
                    "name": "max_upload",
                    "method": "computedMaxUpload",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxUpload",
                    "optional": true,
                    "label": "_computedMaxUpload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "min_tls_version",
                    "method": "computedMinTlsVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinTlsVersion",
                    "optional": true,
                    "label": "_computedMinTlsVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minify\" <$> TF.attribute",
                    "name": "minify",
                    "method": "computedMinify",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Minify s))",
                    "class": "HasComputedMinify",
                    "optional": true,
                    "label": "_computedMinify"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mirage\" <$> TF.attribute",
                    "name": "mirage",
                    "method": "computedMirage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMirage",
                    "optional": true,
                    "label": "_computedMirage"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_redirect\" <$> TF.attribute",
                    "name": "mobile_redirect",
                    "method": "computedMobileRedirect",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (MobileRedirect s))",
                    "class": "HasComputedMobileRedirect",
                    "optional": true,
                    "label": "_computedMobileRedirect"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"opportunistic_encryption\" <$> TF.attribute",
                    "name": "opportunistic_encryption",
                    "method": "computedOpportunisticEncryption",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOpportunisticEncryption",
                    "optional": true,
                    "label": "_computedOpportunisticEncryption"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_error_page_pass_thru\" <$> TF.attribute",
                    "name": "origin_error_page_pass_thru",
                    "method": "computedOriginErrorPagePassThru",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOriginErrorPagePassThru",
                    "optional": true,
                    "label": "_computedOriginErrorPagePassThru"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"polish\" <$> TF.attribute",
                    "name": "polish",
                    "method": "computedPolish",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolish",
                    "optional": true,
                    "label": "_computedPolish"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"prefetch_preload\" <$> TF.attribute",
                    "name": "prefetch_preload",
                    "method": "computedPrefetchPreload",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrefetchPreload",
                    "optional": true,
                    "label": "_computedPrefetchPreload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"privacy_pass\" <$> TF.attribute",
                    "name": "privacy_pass",
                    "method": "computedPrivacyPass",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivacyPass",
                    "optional": true,
                    "label": "_computedPrivacyPass"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pseudo_ipv4\" <$> TF.attribute",
                    "name": "pseudo_ipv4",
                    "method": "computedPseudoIpv4",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPseudoIpv4",
                    "optional": true,
                    "label": "_computedPseudoIpv4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_buffering\" <$> TF.attribute",
                    "name": "response_buffering",
                    "method": "computedResponseBuffering",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedResponseBuffering",
                    "optional": true,
                    "label": "_computedResponseBuffering"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rocket_loader\" <$> TF.attribute",
                    "name": "rocket_loader",
                    "method": "computedRocketLoader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRocketLoader",
                    "optional": true,
                    "label": "_computedRocketLoader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_header\" <$> TF.attribute",
                    "name": "security_header",
                    "method": "computedSecurityHeader",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (SecurityHeader s))",
                    "class": "HasComputedSecurityHeader",
                    "optional": true,
                    "label": "_computedSecurityHeader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_level\" <$> TF.attribute",
                    "name": "security_level",
                    "method": "computedSecurityLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSecurityLevel",
                    "optional": true,
                    "label": "_computedSecurityLevel"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_side_exclude\" <$> TF.attribute",
                    "name": "server_side_exclude",
                    "method": "computedServerSideExclude",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServerSideExclude",
                    "optional": true,
                    "label": "_computedServerSideExclude"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha1_support\" <$> TF.attribute",
                    "name": "sha1_support",
                    "method": "computedSha1Support",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha1Support",
                    "optional": true,
                    "label": "_computedSha1Support"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sort_query_string_for_cache\" <$> TF.attribute",
                    "name": "sort_query_string_for_cache",
                    "method": "computedSortQueryStringForCache",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSortQueryStringForCache",
                    "optional": true,
                    "label": "_computedSortQueryStringForCache"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl\" <$> TF.attribute",
                    "name": "ssl",
                    "method": "computedSsl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSsl",
                    "optional": true,
                    "label": "_computedSsl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_2_only\" <$> TF.attribute",
                    "name": "tls_1_2_only",
                    "method": "computedTls12Only",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls12Only",
                    "optional": true,
                    "label": "_computedTls12Only"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_3\" <$> TF.attribute",
                    "name": "tls_1_3",
                    "method": "computedTls13",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls13",
                    "optional": true,
                    "label": "_computedTls13"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_client_auth\" <$> TF.attribute",
                    "name": "tls_client_auth",
                    "method": "computedTlsClientAuth",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsClientAuth",
                    "optional": true,
                    "label": "_computedTlsClientAuth"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"true_client_ip_header\" <$> TF.attribute",
                    "name": "true_client_ip_header",
                    "method": "computedTrueClientIpHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTrueClientIpHeader",
                    "optional": true,
                    "label": "_computedTrueClientIpHeader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"waf\" <$> TF.attribute",
                    "name": "waf",
                    "method": "computedWaf",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWaf",
                    "optional": true,
                    "label": "_computedWaf"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"webp\" <$> TF.attribute",
                    "name": "webp",
                    "method": "computedWebp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebp",
                    "optional": true,
                    "label": "_computedWebp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"websockets\" <$> TF.attribute",
                    "name": "websockets",
                    "method": "computedWebsockets",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebsockets",
                    "optional": true,
                    "label": "_computedWebsockets"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Settings s",
            "original": "settings"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"by\" <$> TF.attribute",
                    "name": "by",
                    "method": "by",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBy",
                    "optional": true,
                    "label": "_by"
                }
            ],
            "name": "Correlate",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Correlate s",
            "original": "correlate"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"algorithm\" <$> TF.attribute",
                    "name": "algorithm",
                    "method": "algorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAlgorithm",
                    "optional": true,
                    "label": "_algorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"altitude\" <$> TF.attribute",
                    "name": "altitude",
                    "method": "altitude",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasAltitude",
                    "optional": true,
                    "label": "_altitude"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"certificate\" <$> TF.attribute",
                    "name": "certificate",
                    "method": "certificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificate",
                    "optional": true,
                    "label": "_certificate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "content",
                    "method": "content",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "optional": true,
                    "label": "_content"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"digest\" <$> TF.attribute",
                    "name": "digest",
                    "method": "digest",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDigest",
                    "optional": true,
                    "label": "_digest"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"digest_type\" <$> TF.attribute",
                    "name": "digest_type",
                    "method": "digestType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDigestType",
                    "optional": true,
                    "label": "_digestType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "fingerprint",
                    "method": "fingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFingerprint",
                    "optional": true,
                    "label": "_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"flags\" <$> TF.attribute",
                    "name": "flags",
                    "method": "flags",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFlags",
                    "optional": true,
                    "label": "_flags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key_tag\" <$> TF.attribute",
                    "name": "key_tag",
                    "method": "keyTag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasKeyTag",
                    "optional": true,
                    "label": "_keyTag"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_degrees\" <$> TF.attribute",
                    "name": "lat_degrees",
                    "method": "latDegrees",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasLatDegrees",
                    "optional": true,
                    "label": "_latDegrees"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_direction\" <$> TF.attribute",
                    "name": "lat_direction",
                    "method": "latDirection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLatDirection",
                    "optional": true,
                    "label": "_latDirection"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_minutes\" <$> TF.attribute",
                    "name": "lat_minutes",
                    "method": "latMinutes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasLatMinutes",
                    "optional": true,
                    "label": "_latMinutes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lat_seconds\" <$> TF.attribute",
                    "name": "lat_seconds",
                    "method": "latSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasLatSeconds",
                    "optional": true,
                    "label": "_latSeconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_degrees\" <$> TF.attribute",
                    "name": "long_degrees",
                    "method": "longDegrees",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasLongDegrees",
                    "optional": true,
                    "label": "_longDegrees"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_direction\" <$> TF.attribute",
                    "name": "long_direction",
                    "method": "longDirection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLongDirection",
                    "optional": true,
                    "label": "_longDirection"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_minutes\" <$> TF.attribute",
                    "name": "long_minutes",
                    "method": "longMinutes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasLongMinutes",
                    "optional": true,
                    "label": "_longMinutes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"long_seconds\" <$> TF.attribute",
                    "name": "long_seconds",
                    "method": "longSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasLongSeconds",
                    "optional": true,
                    "label": "_longSeconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"matching_type\" <$> TF.attribute",
                    "name": "matching_type",
                    "method": "matchingType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMatchingType",
                    "optional": true,
                    "label": "_matchingType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"order\" <$> TF.attribute",
                    "name": "order",
                    "method": "order",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasOrder",
                    "optional": true,
                    "label": "_order"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": true,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"precision_horz\" <$> TF.attribute",
                    "name": "precision_horz",
                    "method": "precisionHorz",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasPrecisionHorz",
                    "optional": true,
                    "label": "_precisionHorz"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"precision_vert\" <$> TF.attribute",
                    "name": "precision_vert",
                    "method": "precisionVert",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasPrecisionVert",
                    "optional": true,
                    "label": "_precisionVert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preference\" <$> TF.attribute",
                    "name": "preference",
                    "method": "preference",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPreference",
                    "optional": true,
                    "label": "_preference"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "optional": true,
                    "label": "_priority"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proto\" <$> TF.attribute",
                    "name": "proto",
                    "method": "proto",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProto",
                    "optional": true,
                    "label": "_proto"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasProtocol",
                    "optional": true,
                    "label": "_protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "public_key",
                    "method": "publicKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPublicKey",
                    "optional": true,
                    "label": "_publicKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"regex\" <$> TF.attribute",
                    "name": "regex",
                    "method": "regex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegex",
                    "optional": true,
                    "label": "_regex"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"replacement\" <$> TF.attribute",
                    "name": "replacement",
                    "method": "replacement",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasReplacement",
                    "optional": true,
                    "label": "_replacement"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"selector\" <$> TF.attribute",
                    "name": "selector",
                    "method": "selector",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSelector",
                    "optional": true,
                    "label": "_selector"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "optional": true,
                    "label": "_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasSize",
                    "optional": true,
                    "label": "_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "optional": true,
                    "label": "_target"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasType'",
                    "optional": true,
                    "label": "_type'"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"usage\" <$> TF.attribute",
                    "name": "usage",
                    "method": "usage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasUsage",
                    "optional": true,
                    "label": "_usage"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "weight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasWeight",
                    "optional": true,
                    "label": "_weight"
                }
            ],
            "name": "Data",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Data s",
            "original": "data"
        },
        {
            "arguments": [],
            "name": "Response",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_traffic\" <$> TF.attribute",
                    "name": "origin_traffic",
                    "method": "computedOriginTraffic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedOriginTraffic",
                    "optional": true,
                    "label": "_computedOriginTraffic"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statuses\" <$> TF.attribute",
                    "name": "statuses",
                    "method": "computedStatuses",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Integer)]",
                    "class": "HasComputedStatuses",
                    "optional": true,
                    "label": "_computedStatuses"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Response s",
            "original": "response"
        },
        {
            "arguments": [
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "mode",
                    "method": "mode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "optional": false,
                    "label": "_mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "response",
                    "method": "response",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Response s))",
                    "class": "HasResponse",
                    "optional": true,
                    "label": "_response"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": false,
                    "label": "_timeout"
                }
            ],
            "name": "Action",
            "attributes": [],
            "parameters": [
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "mode",
                    "method": "mode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "optional": false,
                    "label": "_mode"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": false,
                    "label": "_timeout"
                }
            ],
            "hashable": false,
            "type": "Action s",
            "original": "action"
        },
        {
            "arguments": [
                {
                    "default": "_css",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"css\" <$> TF.attribute",
                    "name": "css",
                    "method": "css",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCss",
                    "optional": false,
                    "label": "_css"
                },
                {
                    "default": "_html",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"html\" <$> TF.attribute",
                    "name": "html",
                    "method": "html",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHtml",
                    "optional": false,
                    "label": "_html"
                },
                {
                    "default": "_js",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"js\" <$> TF.attribute",
                    "name": "js",
                    "method": "js",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasJs",
                    "optional": false,
                    "label": "_js"
                }
            ],
            "name": "Minify",
            "attributes": [],
            "parameters": [
                {
                    "default": "_css",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"css\" <$> TF.attribute",
                    "name": "css",
                    "method": "css",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCss",
                    "optional": false,
                    "label": "_css"
                },
                {
                    "default": "_html",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"html\" <$> TF.attribute",
                    "name": "html",
                    "method": "html",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHtml",
                    "optional": false,
                    "label": "_html"
                },
                {
                    "default": "_js",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"js\" <$> TF.attribute",
                    "name": "js",
                    "method": "js",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasJs",
                    "optional": false,
                    "label": "_js"
                }
            ],
            "hashable": false,
            "type": "Minify s",
            "original": "minify"
        },
        {
            "arguments": [],
            "name": "InitialSettings",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advanced_ddos\" <$> TF.attribute",
                    "name": "advanced_ddos",
                    "method": "computedAdvancedDdos",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdvancedDdos",
                    "optional": true,
                    "label": "_computedAdvancedDdos"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_online\" <$> TF.attribute",
                    "name": "always_online",
                    "method": "computedAlwaysOnline",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysOnline",
                    "optional": true,
                    "label": "_computedAlwaysOnline"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"always_use_https\" <$> TF.attribute",
                    "name": "always_use_https",
                    "method": "computedAlwaysUseHttps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlwaysUseHttps",
                    "optional": true,
                    "label": "_computedAlwaysUseHttps"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"automatic_https_rewrites\" <$> TF.attribute",
                    "name": "automatic_https_rewrites",
                    "method": "computedAutomaticHttpsRewrites",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAutomaticHttpsRewrites",
                    "optional": true,
                    "label": "_computedAutomaticHttpsRewrites"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"brotli\" <$> TF.attribute",
                    "name": "brotli",
                    "method": "computedBrotli",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrotli",
                    "optional": true,
                    "label": "_computedBrotli"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_cache_ttl\" <$> TF.attribute",
                    "name": "browser_cache_ttl",
                    "method": "computedBrowserCacheTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedBrowserCacheTtl",
                    "optional": true,
                    "label": "_computedBrowserCacheTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"browser_check\" <$> TF.attribute",
                    "name": "browser_check",
                    "method": "computedBrowserCheck",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBrowserCheck",
                    "optional": true,
                    "label": "_computedBrowserCheck"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_level\" <$> TF.attribute",
                    "name": "cache_level",
                    "method": "computedCacheLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCacheLevel",
                    "optional": true,
                    "label": "_computedCacheLevel"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"challenge_ttl\" <$> TF.attribute",
                    "name": "challenge_ttl",
                    "method": "computedChallengeTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedChallengeTtl",
                    "optional": true,
                    "label": "_computedChallengeTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cname_flattening\" <$> TF.attribute",
                    "name": "cname_flattening",
                    "method": "computedCnameFlattening",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCnameFlattening",
                    "optional": true,
                    "label": "_computedCnameFlattening"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"development_mode\" <$> TF.attribute",
                    "name": "development_mode",
                    "method": "computedDevelopmentMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDevelopmentMode",
                    "optional": true,
                    "label": "_computedDevelopmentMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"edge_cache_ttl\" <$> TF.attribute",
                    "name": "edge_cache_ttl",
                    "method": "computedEdgeCacheTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedEdgeCacheTtl",
                    "optional": true,
                    "label": "_computedEdgeCacheTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email_obfuscation\" <$> TF.attribute",
                    "name": "email_obfuscation",
                    "method": "computedEmailObfuscation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmailObfuscation",
                    "optional": true,
                    "label": "_computedEmailObfuscation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hotlink_protection\" <$> TF.attribute",
                    "name": "hotlink_protection",
                    "method": "computedHotlinkProtection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHotlinkProtection",
                    "optional": true,
                    "label": "_computedHotlinkProtection"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http2\" <$> TF.attribute",
                    "name": "http2",
                    "method": "computedHttp2",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttp2",
                    "optional": true,
                    "label": "_computedHttp2"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_geolocation\" <$> TF.attribute",
                    "name": "ip_geolocation",
                    "method": "computedIpGeolocation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpGeolocation",
                    "optional": true,
                    "label": "_computedIpGeolocation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6\" <$> TF.attribute",
                    "name": "ipv6",
                    "method": "computedIpv6",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6",
                    "optional": true,
                    "label": "_computedIpv6"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_upload\" <$> TF.attribute",
                    "name": "max_upload",
                    "method": "computedMaxUpload",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxUpload",
                    "optional": true,
                    "label": "_computedMaxUpload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "min_tls_version",
                    "method": "computedMinTlsVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinTlsVersion",
                    "optional": true,
                    "label": "_computedMinTlsVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minify\" <$> TF.attribute",
                    "name": "minify",
                    "method": "computedMinify",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Minify s))",
                    "class": "HasComputedMinify",
                    "optional": true,
                    "label": "_computedMinify"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mirage\" <$> TF.attribute",
                    "name": "mirage",
                    "method": "computedMirage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMirage",
                    "optional": true,
                    "label": "_computedMirage"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_redirect\" <$> TF.attribute",
                    "name": "mobile_redirect",
                    "method": "computedMobileRedirect",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (MobileRedirect s))",
                    "class": "HasComputedMobileRedirect",
                    "optional": true,
                    "label": "_computedMobileRedirect"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"opportunistic_encryption\" <$> TF.attribute",
                    "name": "opportunistic_encryption",
                    "method": "computedOpportunisticEncryption",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOpportunisticEncryption",
                    "optional": true,
                    "label": "_computedOpportunisticEncryption"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin_error_page_pass_thru\" <$> TF.attribute",
                    "name": "origin_error_page_pass_thru",
                    "method": "computedOriginErrorPagePassThru",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOriginErrorPagePassThru",
                    "optional": true,
                    "label": "_computedOriginErrorPagePassThru"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"polish\" <$> TF.attribute",
                    "name": "polish",
                    "method": "computedPolish",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolish",
                    "optional": true,
                    "label": "_computedPolish"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"prefetch_preload\" <$> TF.attribute",
                    "name": "prefetch_preload",
                    "method": "computedPrefetchPreload",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrefetchPreload",
                    "optional": true,
                    "label": "_computedPrefetchPreload"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"privacy_pass\" <$> TF.attribute",
                    "name": "privacy_pass",
                    "method": "computedPrivacyPass",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivacyPass",
                    "optional": true,
                    "label": "_computedPrivacyPass"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pseudo_ipv4\" <$> TF.attribute",
                    "name": "pseudo_ipv4",
                    "method": "computedPseudoIpv4",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPseudoIpv4",
                    "optional": true,
                    "label": "_computedPseudoIpv4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_buffering\" <$> TF.attribute",
                    "name": "response_buffering",
                    "method": "computedResponseBuffering",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedResponseBuffering",
                    "optional": true,
                    "label": "_computedResponseBuffering"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rocket_loader\" <$> TF.attribute",
                    "name": "rocket_loader",
                    "method": "computedRocketLoader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRocketLoader",
                    "optional": true,
                    "label": "_computedRocketLoader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_header\" <$> TF.attribute",
                    "name": "security_header",
                    "method": "computedSecurityHeader",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (SecurityHeader s))",
                    "class": "HasComputedSecurityHeader",
                    "optional": true,
                    "label": "_computedSecurityHeader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_level\" <$> TF.attribute",
                    "name": "security_level",
                    "method": "computedSecurityLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSecurityLevel",
                    "optional": true,
                    "label": "_computedSecurityLevel"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_side_exclude\" <$> TF.attribute",
                    "name": "server_side_exclude",
                    "method": "computedServerSideExclude",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServerSideExclude",
                    "optional": true,
                    "label": "_computedServerSideExclude"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha1_support\" <$> TF.attribute",
                    "name": "sha1_support",
                    "method": "computedSha1Support",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha1Support",
                    "optional": true,
                    "label": "_computedSha1Support"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sort_query_string_for_cache\" <$> TF.attribute",
                    "name": "sort_query_string_for_cache",
                    "method": "computedSortQueryStringForCache",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSortQueryStringForCache",
                    "optional": true,
                    "label": "_computedSortQueryStringForCache"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl\" <$> TF.attribute",
                    "name": "ssl",
                    "method": "computedSsl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSsl",
                    "optional": true,
                    "label": "_computedSsl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_2_only\" <$> TF.attribute",
                    "name": "tls_1_2_only",
                    "method": "computedTls12Only",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls12Only",
                    "optional": true,
                    "label": "_computedTls12Only"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_1_3\" <$> TF.attribute",
                    "name": "tls_1_3",
                    "method": "computedTls13",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTls13",
                    "optional": true,
                    "label": "_computedTls13"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_client_auth\" <$> TF.attribute",
                    "name": "tls_client_auth",
                    "method": "computedTlsClientAuth",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsClientAuth",
                    "optional": true,
                    "label": "_computedTlsClientAuth"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"true_client_ip_header\" <$> TF.attribute",
                    "name": "true_client_ip_header",
                    "method": "computedTrueClientIpHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTrueClientIpHeader",
                    "optional": true,
                    "label": "_computedTrueClientIpHeader"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"waf\" <$> TF.attribute",
                    "name": "waf",
                    "method": "computedWaf",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWaf",
                    "optional": true,
                    "label": "_computedWaf"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"webp\" <$> TF.attribute",
                    "name": "webp",
                    "method": "computedWebp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebp",
                    "optional": true,
                    "label": "_computedWebp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"websockets\" <$> TF.attribute",
                    "name": "websockets",
                    "method": "computedWebsockets",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWebsockets",
                    "optional": true,
                    "label": "_computedWebsockets"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "InitialSettings s",
            "original": "initial_settings"
        },
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "optional": true,
                    "label": "_enabled"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "name": "Origins",
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Origins s",
            "original": "origins"
        },
        {
            "arguments": [
                {
                    "default": "_header",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "header",
                    "method": "header",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHeader",
                    "optional": false,
                    "label": "_header"
                },
                {
                    "default": "_values",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "values",
                    "method": "values",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasValues",
                    "optional": false,
                    "label": "_values"
                }
            ],
            "name": "Header",
            "attributes": [],
            "parameters": [
                {
                    "default": "_header",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "header",
                    "method": "header",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHeader",
                    "optional": false,
                    "label": "_header"
                },
                {
                    "default": "_values",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "values",
                    "method": "values",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasValues",
                    "optional": false,
                    "label": "_values"
                }
            ],
            "hashable": false,
            "type": "Header s",
            "original": "header"
        },
        {
            "arguments": [
                {
                    "default": "_statusCode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status_code\" <$> TF.attribute",
                    "name": "status_code",
                    "method": "statusCode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasStatusCode",
                    "optional": false,
                    "label": "_statusCode"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "url",
                    "method": "url",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "optional": false,
                    "label": "_url"
                }
            ],
            "name": "ForwardingUrl",
            "attributes": [],
            "parameters": [
                {
                    "default": "_statusCode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status_code\" <$> TF.attribute",
                    "name": "status_code",
                    "method": "statusCode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasStatusCode",
                    "optional": false,
                    "label": "_statusCode"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "url",
                    "method": "url",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "optional": false,
                    "label": "_url"
                }
            ],
            "hashable": false,
            "type": "ForwardingUrl s",
            "original": "forwarding_url"
        },
        {
            "arguments": [
                {
                    "default": "_mobileSubdomain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_subdomain\" <$> TF.attribute",
                    "name": "mobile_subdomain",
                    "method": "mobileSubdomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMobileSubdomain",
                    "optional": false,
                    "label": "_mobileSubdomain"
                },
                {
                    "default": "_status",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "optional": false,
                    "label": "_status"
                },
                {
                    "default": "_stripUri",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"strip_uri\" <$> TF.attribute",
                    "name": "strip_uri",
                    "method": "stripUri",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasStripUri",
                    "optional": false,
                    "label": "_stripUri"
                }
            ],
            "name": "MobileRedirect",
            "attributes": [],
            "parameters": [
                {
                    "default": "_mobileSubdomain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mobile_subdomain\" <$> TF.attribute",
                    "name": "mobile_subdomain",
                    "method": "mobileSubdomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMobileSubdomain",
                    "optional": false,
                    "label": "_mobileSubdomain"
                },
                {
                    "default": "_status",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "optional": false,
                    "label": "_status"
                },
                {
                    "default": "_stripUri",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"strip_uri\" <$> TF.attribute",
                    "name": "strip_uri",
                    "method": "stripUri",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasStripUri",
                    "optional": false,
                    "label": "_stripUri"
                }
            ],
            "hashable": false,
            "type": "MobileRedirect s",
            "original": "mobile_redirect"
        },
        {
            "arguments": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "pool_ids",
                    "method": "poolIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "optional": false,
                    "label": "_poolIds"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "name": "RegionPools",
            "attributes": [],
            "parameters": [
                {
                    "default": "_poolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_ids\" <$> TF.attribute",
                    "name": "pool_ids",
                    "method": "poolIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPoolIds",
                    "optional": false,
                    "label": "_poolIds"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "hashable": false,
            "type": "RegionPools s",
            "original": "region_pools"
        },
        {
            "arguments": [],
            "name": "Match",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request\" <$> TF.attribute",
                    "name": "request",
                    "method": "computedRequest",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Request s))",
                    "class": "HasComputedRequest",
                    "optional": true,
                    "label": "_computedRequest"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "response",
                    "method": "computedResponse",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Response s))",
                    "class": "HasComputedResponse",
                    "optional": true,
                    "label": "_computedResponse"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Match s",
            "original": "match"
        },
        {
            "arguments": [],
            "name": "SecurityHeader",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "computedEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnabled",
                    "optional": true,
                    "label": "_computedEnabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"include_subdomains\" <$> TF.attribute",
                    "name": "include_subdomains",
                    "method": "computedIncludeSubdomains",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIncludeSubdomains",
                    "optional": true,
                    "label": "_computedIncludeSubdomains"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_age\" <$> TF.attribute",
                    "name": "max_age",
                    "method": "computedMaxAge",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxAge",
                    "optional": true,
                    "label": "_computedMaxAge"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"nosniff\" <$> TF.attribute",
                    "name": "nosniff",
                    "method": "computedNosniff",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedNosniff",
                    "optional": true,
                    "label": "_computedNosniff"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preload\" <$> TF.attribute",
                    "name": "preload",
                    "method": "computedPreload",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPreload",
                    "optional": true,
                    "label": "_computedPreload"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "SecurityHeader s",
            "original": "security_header"
        },
        {
            "arguments": [],
            "name": "Request",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"methods\" <$> TF.attribute",
                    "name": "methods",
                    "method": "computedMethods",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedMethods",
                    "optional": true,
                    "label": "_computedMethods"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"schemes\" <$> TF.attribute",
                    "name": "schemes",
                    "method": "computedSchemes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedSchemes",
                    "optional": true,
                    "label": "_computedSchemes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_pattern\" <$> TF.attribute",
                    "name": "url_pattern",
                    "method": "computedUrlPattern",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUrlPattern",
                    "optional": true,
                    "label": "_computedUrlPattern"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Request s",
            "original": "request"
        }
    ],
    "arguments": [
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Whether to print logs from the API client (using the default log library",
                "logger)"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"api_client_logging\" <$>",
            "name": "api_client_logging",
            "method": "apiClientLogging",
            "conflicts": [],
            "type": "P.Maybe P.Bool",
            "class": "HasApiClientLogging",
            "optional": true,
            "label": "_apiClientLogging"
        },
        {
            "default": "_email",
            "computed": false,
            "required": true,
            "help": [
                "A registered Cloudflare email address."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"email\"",
            "name": "email",
            "method": "email",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasEmail",
            "optional": false,
            "label": "_email"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Maximum backoff period in seconds after failed API calls"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"max_backoff\" <$>",
            "name": "max_backoff",
            "method": "maxBackoff",
            "conflicts": [],
            "type": "P.Maybe P.Integer",
            "class": "HasMaxBackoff",
            "optional": true,
            "label": "_maxBackoff"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Minimum backoff period in seconds after failed API calls"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"min_backoff\" <$>",
            "name": "min_backoff",
            "method": "minBackoff",
            "conflicts": [],
            "type": "P.Maybe P.Integer",
            "class": "HasMinBackoff",
            "optional": true,
            "label": "_minBackoff"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Configure API client to always use that organization. If set this will",
                "override 'user_owner_from_zone'"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"org_id\" <$>",
            "name": "org_id",
            "method": "orgId",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasOrgId",
            "optional": true,
            "label": "_orgId"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Maximum number of retries to perform when an API request fails"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"retries\" <$>",
            "name": "retries",
            "method": "retries",
            "conflicts": [],
            "type": "P.Maybe P.Integer",
            "class": "HasRetries",
            "optional": true,
            "label": "_retries"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "RPS limit to apply when making calls to the API"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"rps\" <$>",
            "name": "rps",
            "method": "rps",
            "conflicts": [],
            "type": "P.Maybe P.Integer",
            "class": "HasRps",
            "optional": true,
            "label": "_rps"
        },
        {
            "default": "_token",
            "computed": false,
            "required": true,
            "help": [
                "The token key for API operations."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"token\"",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasToken",
            "optional": false,
            "label": "_token"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "If specified zone is owned by an organization, configure API client to",
                "always use that organization"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"use_org_from_zone\" <$>",
            "name": "use_org_from_zone",
            "method": "useOrgFromZone",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasUseOrgFromZone",
            "optional": true,
            "label": "_useOrgFromZone"
        }
    ],
    "dataSources": [
        {
            "arguments": [],
            "schema": "DataSource",
            "name": "IpRangesData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks\" <$> TF.attribute",
                    "name": "cidr_blocks",
                    "method": "computedCidrBlocks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCidrBlocks",
                    "optional": false,
                    "label": "_computedCidrBlocks"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv4_cidr_blocks\" <$> TF.attribute",
                    "name": "ipv4_cidr_blocks",
                    "method": "computedIpv4CidrBlocks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedIpv4CidrBlocks",
                    "optional": false,
                    "label": "_computedIpv4CidrBlocks"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6_cidr_blocks\" <$> TF.attribute",
                    "name": "ipv6_cidr_blocks",
                    "method": "computedIpv6CidrBlocks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedIpv6CidrBlocks",
                    "optional": false,
                    "label": "_computedIpv6CidrBlocks"
                }
            ],
            "parameters": [],
            "type": "IpRangesData s",
            "original": "cloudflare_ip_ranges"
        }
    ],
    "resources": [
        {
            "arguments": [
                {
                    "default": "_defaultPoolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_pool_ids\" <$> TF.attribute",
                    "name": "default_pool_ids",
                    "method": "defaultPoolIds",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasDefaultPoolIds",
                    "optional": false,
                    "label": "_defaultPoolIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_fallbackPoolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fallback_pool_id\" <$> TF.attribute",
                    "name": "fallback_pool_id",
                    "method": "fallbackPoolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFallbackPoolId",
                    "optional": false,
                    "label": "_fallbackPoolId"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxied\" <$> TF.attribute",
                    "name": "proxied",
                    "method": "proxied",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasProxied",
                    "optional": true,
                    "label": "_proxied"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "schema": "Resource",
            "name": "LoadBalancerResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "created_on",
                    "method": "computedCreatedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "optional": false,
                    "label": "_computedCreatedOn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "modified_on",
                    "method": "computedModifiedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "optional": false,
                    "label": "_computedModifiedOn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pop_pools\" <$> TF.attribute",
                    "name": "pop_pools",
                    "method": "computedPopPools",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PopPools s)]",
                    "class": "HasComputedPopPools",
                    "optional": true,
                    "label": "_computedPopPools"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region_pools\" <$> TF.attribute",
                    "name": "region_pools",
                    "method": "computedRegionPools",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (RegionPools s)]",
                    "class": "HasComputedRegionPools",
                    "optional": true,
                    "label": "_computedRegionPools"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "computedTtl",
                    "conflicts": [
                        "_proxied"
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTtl",
                    "optional": true,
                    "label": "_computedTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "zone_id",
                    "method": "computedZoneId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "optional": false,
                    "label": "_computedZoneId"
                }
            ],
            "parameters": [
                {
                    "default": "_defaultPoolIds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_pool_ids\" <$> TF.attribute",
                    "name": "default_pool_ids",
                    "method": "defaultPoolIds",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasDefaultPoolIds",
                    "optional": false,
                    "label": "_defaultPoolIds"
                },
                {
                    "default": "_fallbackPoolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fallback_pool_id\" <$> TF.attribute",
                    "name": "fallback_pool_id",
                    "method": "fallbackPoolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFallbackPoolId",
                    "optional": false,
                    "label": "_fallbackPoolId"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "type": "LoadBalancerResource s",
            "original": "cloudflare_load_balancer"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_expectedBody",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_body\" <$> TF.attribute",
                    "name": "expected_body",
                    "method": "expectedBody",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedBody",
                    "optional": false,
                    "label": "_expectedBody"
                },
                {
                    "default": "_expectedCodes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_codes\" <$> TF.attribute",
                    "name": "expected_codes",
                    "method": "expectedCodes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedCodes",
                    "optional": false,
                    "label": "_expectedCodes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "header",
                    "method": "header",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Header s)]",
                    "class": "HasHeader",
                    "optional": true,
                    "label": "_header"
                },
                {
                    "default": "TF.value 60",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"interval\" <$> TF.attribute",
                    "name": "interval",
                    "method": "interval",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasInterval",
                    "optional": true,
                    "label": "_interval"
                },
                {
                    "default": "TF.value \"GET\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"method\" <$> TF.attribute",
                    "name": "method",
                    "method": "method",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMethod",
                    "optional": true,
                    "label": "_method"
                },
                {
                    "default": "TF.value \"/\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": true,
                    "label": "_path"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retries\" <$> TF.attribute",
                    "name": "retries",
                    "method": "retries",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRetries",
                    "optional": true,
                    "label": "_retries"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": true,
                    "label": "_timeout"
                },
                {
                    "default": "TF.value \"http\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": true,
                    "label": "_type'"
                }
            ],
            "schema": "Resource",
            "name": "LoadBalancerMonitorResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "created_on",
                    "method": "computedCreatedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "optional": false,
                    "label": "_computedCreatedOn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "modified_on",
                    "method": "computedModifiedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "optional": false,
                    "label": "_computedModifiedOn"
                }
            ],
            "parameters": [
                {
                    "default": "_expectedBody",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_body\" <$> TF.attribute",
                    "name": "expected_body",
                    "method": "expectedBody",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedBody",
                    "optional": false,
                    "label": "_expectedBody"
                },
                {
                    "default": "_expectedCodes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_codes\" <$> TF.attribute",
                    "name": "expected_codes",
                    "method": "expectedCodes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedCodes",
                    "optional": false,
                    "label": "_expectedCodes"
                }
            ],
            "type": "LoadBalancerMonitorResource s",
            "original": "cloudflare_load_balancer_monitor"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "optional": true,
                    "label": "_enabled"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"minimum_origins\" <$> TF.attribute",
                    "name": "minimum_origins",
                    "method": "minimumOrigins",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinimumOrigins",
                    "optional": true,
                    "label": "_minimumOrigins"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"monitor\" <$> TF.attribute",
                    "name": "monitor",
                    "method": "monitor",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMonitor",
                    "optional": true,
                    "label": "_monitor"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"notification_email\" <$> TF.attribute",
                    "name": "notification_email",
                    "method": "notificationEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNotificationEmail",
                    "optional": true,
                    "label": "_notificationEmail"
                },
                {
                    "default": "_origins",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"origins\" <$> TF.attribute",
                    "name": "origins",
                    "method": "origins",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Origins s)]",
                    "class": "HasOrigins",
                    "optional": false,
                    "label": "_origins"
                }
            ],
            "schema": "Resource",
            "name": "LoadBalancerPoolResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"check_regions\" <$> TF.attribute",
                    "name": "check_regions",
                    "method": "computedCheckRegions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedCheckRegions",
                    "optional": true,
                    "label": "_computedCheckRegions"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "created_on",
                    "method": "computedCreatedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "optional": false,
                    "label": "_computedCreatedOn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "modified_on",
                    "method": "computedModifiedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "optional": false,
                    "label": "_computedModifiedOn"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_origins",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"origins\" <$> TF.attribute",
                    "name": "origins",
                    "method": "origins",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Origins s)]",
                    "class": "HasOrigins",
                    "optional": false,
                    "label": "_origins"
                }
            ],
            "type": "LoadBalancerPoolResource s",
            "original": "cloudflare_load_balancer_pool"
        },
        {
            "arguments": [
                {
                    "default": "_actions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"actions\" <$> TF.attribute",
                    "name": "actions",
                    "method": "actions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Actions s))",
                    "class": "HasActions",
                    "optional": false,
                    "label": "_actions"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "optional": true,
                    "label": "_priority"
                },
                {
                    "default": "TF.value \"active\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "optional": true,
                    "label": "_status"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "optional": false,
                    "label": "_target"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "schema": "Resource",
            "name": "PageRuleResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "zone_id",
                    "method": "computedZoneId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "optional": false,
                    "label": "_computedZoneId"
                }
            ],
            "parameters": [
                {
                    "default": "_actions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"actions\" <$> TF.attribute",
                    "name": "actions",
                    "method": "actions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Actions s))",
                    "class": "HasActions",
                    "optional": false,
                    "label": "_actions"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "optional": false,
                    "label": "_target"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "type": "PageRuleResource s",
            "original": "cloudflare_page_rule"
        },
        {
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Action s))",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bypass_url_patterns\" <$> TF.attribute",
                    "name": "bypass_url_patterns",
                    "method": "bypassUrlPatterns",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasBypassUrlPatterns",
                    "optional": true,
                    "label": "_bypassUrlPatterns"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"correlate\" <$> TF.attribute",
                    "name": "correlate",
                    "method": "correlate",
                    "conflicts": [],
                    "type": "TF.Attr s [Correlate s]",
                    "class": "HasCorrelate",
                    "optional": true,
                    "label": "_correlate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "disabled",
                    "method": "disabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisabled",
                    "optional": true,
                    "label": "_disabled"
                },
                {
                    "default": "_period",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "period",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeriod",
                    "optional": false,
                    "label": "_period"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasThreshold",
                    "optional": false,
                    "label": "_threshold"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "schema": "Resource",
            "name": "RateLimitResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"match\" <$> TF.attribute",
                    "name": "match",
                    "method": "computedMatch",
                    "conflicts": [],
                    "type": "TF.Attr s [Match s]",
                    "class": "HasComputedMatch",
                    "optional": true,
                    "label": "_computedMatch"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "zone_id",
                    "method": "computedZoneId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "optional": false,
                    "label": "_computedZoneId"
                }
            ],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (Action s))",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "_period",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "period",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeriod",
                    "optional": false,
                    "label": "_period"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasThreshold",
                    "optional": false,
                    "label": "_threshold"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "type": "RateLimitResource s",
            "original": "cloudflare_rate_limit"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"data\" <$> TF.attribute",
                    "name": "data",
                    "method": "data'",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Data s))",
                    "class": "HasData'",
                    "optional": true,
                    "label": "_data'"
                },
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "optional": true,
                    "label": "_priority"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxied\" <$> TF.attribute",
                    "name": "proxied",
                    "method": "proxied",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasProxied",
                    "optional": true,
                    "label": "_proxied"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "schema": "Resource",
            "name": "RecordResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_on\" <$> TF.attribute",
                    "name": "created_on",
                    "method": "computedCreatedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedOn",
                    "optional": false,
                    "label": "_computedCreatedOn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hostname\" <$> TF.attribute",
                    "name": "hostname",
                    "method": "computedHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHostname",
                    "optional": false,
                    "label": "_computedHostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "optional": false,
                    "label": "_computedMetadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modified_on\" <$> TF.attribute",
                    "name": "modified_on",
                    "method": "computedModifiedOn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifiedOn",
                    "optional": false,
                    "label": "_computedModifiedOn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxiable\" <$> TF.attribute",
                    "name": "proxiable",
                    "method": "computedProxiable",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedProxiable",
                    "optional": false,
                    "label": "_computedProxiable"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "computedTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTtl",
                    "optional": true,
                    "label": "_computedTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "computedValue",
                    "conflicts": [
                        "_data'"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedValue",
                    "optional": true,
                    "label": "_computedValue"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "zone_id",
                    "method": "computedZoneId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "optional": false,
                    "label": "_computedZoneId"
                }
            ],
            "parameters": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "type": "RecordResource s",
            "original": "cloudflare_record"
        },
        {
            "arguments": [
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "mode",
                    "method": "mode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "optional": false,
                    "label": "_mode"
                },
                {
                    "default": "_ruleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule_id\" <$> TF.attribute",
                    "name": "rule_id",
                    "method": "ruleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRuleId",
                    "optional": false,
                    "label": "_ruleId"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "schema": "Resource",
            "name": "WafRuleResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"package_id\" <$> TF.attribute",
                    "name": "package_id",
                    "method": "computedPackageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPackageId",
                    "optional": false,
                    "label": "_computedPackageId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "zone_id",
                    "method": "computedZoneId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneId",
                    "optional": false,
                    "label": "_computedZoneId"
                }
            ],
            "parameters": [
                {
                    "default": "_mode",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "mode",
                    "method": "mode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMode",
                    "optional": false,
                    "label": "_mode"
                },
                {
                    "default": "_ruleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule_id\" <$> TF.attribute",
                    "name": "rule_id",
                    "method": "ruleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRuleId",
                    "optional": false,
                    "label": "_ruleId"
                },
                {
                    "default": "_zone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "optional": false,
                    "label": "_zone"
                }
            ],
            "type": "WafRuleResource s",
            "original": "cloudflare_waf_rule"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "ZoneSettingsOverrideResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_settings\" <$> TF.attribute",
                    "name": "initial_settings",
                    "method": "computedInitialSettings",
                    "conflicts": [],
                    "type": "TF.Attr s [InitialSettings s]",
                    "class": "HasComputedInitialSettings",
                    "optional": false,
                    "label": "_computedInitialSettings"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_settings_read_at\" <$> TF.attribute",
                    "name": "initial_settings_read_at",
                    "method": "computedInitialSettingsReadAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInitialSettingsReadAt",
                    "optional": false,
                    "label": "_computedInitialSettingsReadAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"readonly_settings\" <$> TF.attribute",
                    "name": "readonly_settings",
                    "method": "computedReadonlySettings",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedReadonlySettings",
                    "optional": false,
                    "label": "_computedReadonlySettings"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"settings\" <$> TF.attribute",
                    "name": "settings",
                    "method": "computedSettings",
                    "conflicts": [],
                    "type": "TF.Attr s [Settings s]",
                    "class": "HasComputedSettings",
                    "optional": true,
                    "label": "_computedSettings"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_status\" <$> TF.attribute",
                    "name": "zone_status",
                    "method": "computedZoneStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneStatus",
                    "optional": false,
                    "label": "_computedZoneStatus"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_type\" <$> TF.attribute",
                    "name": "zone_type",
                    "method": "computedZoneType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneType",
                    "optional": false,
                    "label": "_computedZoneType"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ZoneSettingsOverrideResource s",
            "original": "cloudflare_zone_settings_override"
        }
    ],
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "Cloudflare",
    "parameters": [
        {
            "default": "_email",
            "computed": false,
            "required": true,
            "help": [
                "A registered Cloudflare email address."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"email\"",
            "name": "email",
            "method": "email",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasEmail",
            "optional": false,
            "label": "_email"
        },
        {
            "default": "_token",
            "computed": false,
            "required": true,
            "help": [
                "The token key for API operations."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"token\"",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasToken",
            "optional": false,
            "label": "_token"
        }
    ],
    "package": "terrafomo-cloudflare",
    "type": "Provider",
    "original": "cloudflare"
}