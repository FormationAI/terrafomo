{
    "settings": [
        {
            "con": {
                "smart": "newMachineCns",
                "name": "MachineCns'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Disable CNS for this instance (after create)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable\" <$> TF.attribute",
                    "name": "_disable",
                    "method": "disable",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisable",
                    "validate": false,
                    "optional": true,
                    "original": "disable"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Assign CNS service names to this instance"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "_services",
                    "method": "services",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasServices",
                    "validate": false,
                    "optional": true,
                    "original": "services"
                }
            ],
            "name": "MachineCns",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "MachineCns s",
            "original": "machine_cns"
        },
        {
            "con": {
                "smart": "newPackageFilter",
                "name": "PackageFilter'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "_disk",
                    "method": "disk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDisk",
                    "validate": false,
                    "optional": true,
                    "original": "disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"group\" <$> TF.attribute",
                    "name": "_group",
                    "method": "group",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGroup",
                    "validate": false,
                    "optional": true,
                    "original": "group"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lwps\" <$> TF.attribute",
                    "name": "_lwps",
                    "method": "lwps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasLwps",
                    "validate": false,
                    "optional": true,
                    "original": "lwps"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"memory\" <$> TF.attribute",
                    "name": "_memory",
                    "method": "memory",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMemory",
                    "validate": false,
                    "optional": true,
                    "original": "memory"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"swap\" <$> TF.attribute",
                    "name": "_swap",
                    "method": "swap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSwap",
                    "validate": false,
                    "optional": true,
                    "original": "swap"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"vcpus\" <$> TF.attribute",
                    "name": "_vcpus",
                    "method": "vcpus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVcpus",
                    "validate": false,
                    "optional": true,
                    "original": "vcpus"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_version",
                    "method": "version",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVersion",
                    "validate": false,
                    "optional": true,
                    "original": "version"
                }
            ],
            "name": "PackageFilter",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "PackageFilter s",
            "original": "package_filter"
        },
        {
            "con": {
                "smart": "newMachineNic",
                "name": "MachineNic'"
            },
            "arguments": [
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [
                        "ID of the network to which the NIC is attached"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "name": "MachineNic",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "IPv4 gateway"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway\" <$> TF.attribute",
                    "name": "_computedGateway",
                    "method": "computedGateway",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGateway",
                    "validate": false,
                    "optional": false,
                    "original": "gateway"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "NIC's IPv4 address"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip\" <$> TF.attribute",
                    "name": "_computedIp",
                    "method": "computedIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIp",
                    "validate": false,
                    "optional": false,
                    "original": "ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "NIC's MAC address"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"mac\" <$> TF.attribute",
                    "name": "_computedMac",
                    "method": "computedMac",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMac",
                    "validate": false,
                    "optional": false,
                    "original": "mac"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "IPv4 netmask"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"netmask\" <$> TF.attribute",
                    "name": "_computedNetmask",
                    "method": "computedNetmask",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetmask",
                    "validate": false,
                    "optional": false,
                    "original": "netmask"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Whether this is the machine's primary NIC"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"primary\" <$> TF.attribute",
                    "name": "_computedPrimary",
                    "method": "computedPrimary",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPrimary",
                    "validate": false,
                    "optional": false,
                    "original": "primary"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Provisioning state of the NIC"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_computedState",
                    "method": "computedState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedState",
                    "validate": false,
                    "optional": false,
                    "original": "state"
                }
            ],
            "parameters": [
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [
                        "ID of the network to which the NIC is attached"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "conflicts": [],
            "type": "MachineNic s",
            "original": "machine_nic"
        }
    ],
    "url": "https://www.terraform.io/docs/providers/triton/index.html",
    "dataSources": [
        {
            "con": {
                "smart": "accountData",
                "name": "AccountData'"
            },
            "arguments": [],
            "url": "https://www.terraform.io/docs/providers/triton/d/account.html",
            "name": "AccountData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cns_enabled\" <$> TF.attribute",
                    "name": "_computedCnsEnabled",
                    "method": "computedCnsEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedCnsEnabled",
                    "validate": false,
                    "optional": false,
                    "original": "cns_enabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_computedEmail",
                    "method": "computedEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"login\" <$> TF.attribute",
                    "name": "_computedLogin",
                    "method": "computedLogin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLogin",
                    "validate": false,
                    "optional": false,
                    "original": "login"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "AccountData s",
            "original": "triton_account"
        },
        {
            "con": {
                "smart": "datacenterData",
                "name": "DatacenterData'"
            },
            "arguments": [],
            "url": "https://www.terraform.io/docs/providers/triton/d/datacenter.html",
            "name": "DatacenterData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"endpoint\" <$> TF.attribute",
                    "name": "_computedEndpoint",
                    "method": "computedEndpoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEndpoint",
                    "validate": false,
                    "optional": false,
                    "original": "endpoint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "DatacenterData s",
            "original": "triton_datacenter"
        },
        {
            "con": {
                "smart": "fabricNetworkData",
                "name": "FabricNetworkData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_vlanId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vlan_id\" <$> TF.attribute",
                    "name": "_vlanId",
                    "method": "vlanId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVlanId",
                    "validate": false,
                    "optional": false,
                    "original": "vlan_id"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/d/fabric_network.html",
            "name": "FabricNetworkData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fabric\" <$> TF.attribute",
                    "name": "_computedFabric",
                    "method": "computedFabric",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedFabric",
                    "validate": false,
                    "optional": false,
                    "original": "fabric"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway\" <$> TF.attribute",
                    "name": "_computedGateway",
                    "method": "computedGateway",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGateway",
                    "validate": false,
                    "optional": false,
                    "original": "gateway"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"internet_nat\" <$> TF.attribute",
                    "name": "_computedInternetNat",
                    "method": "computedInternetNat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedInternetNat",
                    "validate": false,
                    "optional": false,
                    "original": "internet_nat"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"provision_end_ip\" <$> TF.attribute",
                    "name": "_computedProvisionEndIp",
                    "method": "computedProvisionEndIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProvisionEndIp",
                    "validate": false,
                    "optional": false,
                    "original": "provision_end_ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"provision_start_ip\" <$> TF.attribute",
                    "name": "_computedProvisionStartIp",
                    "method": "computedProvisionStartIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProvisionStartIp",
                    "validate": false,
                    "optional": false,
                    "original": "provision_start_ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public\" <$> TF.attribute",
                    "name": "_computedPublic",
                    "method": "computedPublic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPublic",
                    "validate": false,
                    "optional": false,
                    "original": "public"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resolvers\" <$> TF.attribute",
                    "name": "_computedResolvers",
                    "method": "computedResolvers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedResolvers",
                    "validate": false,
                    "optional": false,
                    "original": "resolvers"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"routes\" <$> TF.attribute",
                    "name": "_computedRoutes",
                    "method": "computedRoutes",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedRoutes",
                    "validate": false,
                    "optional": false,
                    "original": "routes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnet\" <$> TF.attribute",
                    "name": "_computedSubnet",
                    "method": "computedSubnet",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnet",
                    "validate": false,
                    "optional": false,
                    "original": "subnet"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_vlanId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vlan_id\" <$> TF.attribute",
                    "name": "_vlanId",
                    "method": "vlanId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVlanId",
                    "validate": false,
                    "optional": false,
                    "original": "vlan_id"
                }
            ],
            "conflicts": [],
            "type": "FabricNetworkData s",
            "original": "triton_fabric_network"
        },
        {
            "con": {
                "smart": "fabricVlanData",
                "name": "FabricVlanData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vlan_id\" <$> TF.attribute",
                    "name": "_vlanId",
                    "method": "vlanId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVlanId",
                    "validate": false,
                    "optional": true,
                    "original": "vlan_id"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/d/fabric_vlan.html",
            "name": "FabricVlanData",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "FabricVlanData s",
            "original": "triton_fabric_vlan"
        },
        {
            "con": {
                "smart": "imageData",
                "name": "ImageData'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"most_recent\" <$> TF.attribute",
                    "name": "_mostRecent",
                    "method": "mostRecent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMostRecent",
                    "validate": false,
                    "optional": true,
                    "original": "most_recent"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"os\" <$> TF.attribute",
                    "name": "_os",
                    "method": "os",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOs",
                    "validate": false,
                    "optional": true,
                    "original": "os"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"owner\" <$> TF.attribute",
                    "name": "_owner",
                    "method": "owner",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOwner",
                    "validate": false,
                    "optional": true,
                    "original": "owner"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"public\" <$> TF.attribute",
                    "name": "_public",
                    "method": "public",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPublic",
                    "validate": false,
                    "optional": true,
                    "original": "public"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_state",
                    "method": "state",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasState",
                    "validate": false,
                    "optional": true,
                    "original": "state"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_version",
                    "method": "version",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVersion",
                    "validate": false,
                    "optional": true,
                    "original": "version"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/d/image.html",
            "name": "ImageData",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "ImageData s",
            "original": "triton_image"
        },
        {
            "con": {
                "smart": "networkData",
                "name": "NetworkData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/d/network.html",
            "name": "NetworkData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fabric\" <$> TF.attribute",
                    "name": "_computedFabric",
                    "method": "computedFabric",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedFabric",
                    "validate": false,
                    "optional": false,
                    "original": "fabric"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public\" <$> TF.attribute",
                    "name": "_computedPublic",
                    "method": "computedPublic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPublic",
                    "validate": false,
                    "optional": false,
                    "original": "public"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "NetworkData s",
            "original": "triton_network"
        },
        {
            "con": {
                "smart": "packageData",
                "name": "PackageData'"
            },
            "arguments": [
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PackageFilter s)]",
                    "class": "HasFilter",
                    "validate": true,
                    "optional": false,
                    "original": "filter"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/d/package.html",
            "name": "PackageData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "_computedDisk",
                    "method": "computedDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDisk",
                    "validate": false,
                    "optional": false,
                    "original": "disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"group\" <$> TF.attribute",
                    "name": "_computedGroup",
                    "method": "computedGroup",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGroup",
                    "validate": false,
                    "optional": false,
                    "original": "group"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lwps\" <$> TF.attribute",
                    "name": "_computedLwps",
                    "method": "computedLwps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedLwps",
                    "validate": false,
                    "optional": false,
                    "original": "lwps"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"memory\" <$> TF.attribute",
                    "name": "_computedMemory",
                    "method": "computedMemory",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMemory",
                    "validate": false,
                    "optional": false,
                    "original": "memory"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"swap\" <$> TF.attribute",
                    "name": "_computedSwap",
                    "method": "computedSwap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSwap",
                    "validate": false,
                    "optional": false,
                    "original": "swap"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"vcpus\" <$> TF.attribute",
                    "name": "_computedVcpus",
                    "method": "computedVcpus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedVcpus",
                    "validate": false,
                    "optional": false,
                    "original": "vcpus"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": false,
                    "original": "version"
                }
            ],
            "parameters": [
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PackageFilter s)]",
                    "class": "HasFilter",
                    "validate": true,
                    "optional": false,
                    "original": "filter"
                }
            ],
            "conflicts": [],
            "type": "PackageData s",
            "original": "triton_package"
        }
    ],
    "resources": [
        {
            "con": {
                "smart": "fabricResource",
                "name": "FabricResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Description of network"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Gateway IP"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"gateway\" <$> TF.attribute",
                    "name": "_gateway",
                    "method": "gateway",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGateway",
                    "validate": false,
                    "optional": true,
                    "original": "gateway"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether or not a NAT zone is provisioned at the Gateway IP address"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"internet_nat\" <$> TF.attribute",
                    "name": "_internetNat",
                    "method": "internetNat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasInternetNat",
                    "validate": false,
                    "optional": true,
                    "original": "internet_nat"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Network name"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_provisionEndIp",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Last assignable IP on the network"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"provision_end_ip\" <$> TF.attribute",
                    "name": "_provisionEndIp",
                    "method": "provisionEndIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProvisionEndIp",
                    "validate": false,
                    "optional": false,
                    "original": "provision_end_ip"
                },
                {
                    "default": "_provisionStartIp",
                    "computed": false,
                    "required": true,
                    "help": [
                        "First IP on the network that can be assigned"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"provision_start_ip\" <$> TF.attribute",
                    "name": "_provisionStartIp",
                    "method": "provisionStartIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProvisionStartIp",
                    "validate": false,
                    "optional": false,
                    "original": "provision_start_ip"
                },
                {
                    "default": "_subnet",
                    "computed": false,
                    "required": true,
                    "help": [
                        "CIDR formatted string describing network address space"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet\" <$> TF.attribute",
                    "name": "_subnet",
                    "method": "subnet",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnet",
                    "validate": false,
                    "optional": false,
                    "original": "subnet"
                },
                {
                    "default": "_vlanId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "VLAN on which the network exists"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"vlan_id\" <$> TF.attribute",
                    "name": "_vlanId",
                    "method": "vlanId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVlanId",
                    "validate": false,
                    "optional": false,
                    "original": "vlan_id"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/fabric.html",
            "name": "FabricResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Whether or not this network is on a fabric"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"fabric\" <$> TF.attribute",
                    "name": "_computedFabric",
                    "method": "computedFabric",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedFabric",
                    "validate": false,
                    "optional": false,
                    "original": "fabric"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Whether or not this is an RFC1918 network"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"public\" <$> TF.attribute",
                    "name": "_computedPublic",
                    "method": "computedPublic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPublic",
                    "validate": false,
                    "optional": false,
                    "original": "public"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "List of IP addresses for DNS resolvers"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"resolvers\" <$> TF.attribute",
                    "name": "_computedResolvers",
                    "method": "computedResolvers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedResolvers",
                    "validate": false,
                    "optional": true,
                    "original": "resolvers"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Map of CIDR block to Gateway IP address"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"routes\" <$> TF.attribute",
                    "name": "_computedRoutes",
                    "method": "computedRoutes",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedRoutes",
                    "validate": false,
                    "optional": true,
                    "original": "routes"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Network name"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_provisionEndIp",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Last assignable IP on the network"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"provision_end_ip\" <$> TF.attribute",
                    "name": "_provisionEndIp",
                    "method": "provisionEndIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProvisionEndIp",
                    "validate": false,
                    "optional": false,
                    "original": "provision_end_ip"
                },
                {
                    "default": "_provisionStartIp",
                    "computed": false,
                    "required": true,
                    "help": [
                        "First IP on the network that can be assigned"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"provision_start_ip\" <$> TF.attribute",
                    "name": "_provisionStartIp",
                    "method": "provisionStartIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProvisionStartIp",
                    "validate": false,
                    "optional": false,
                    "original": "provision_start_ip"
                },
                {
                    "default": "_subnet",
                    "computed": false,
                    "required": true,
                    "help": [
                        "CIDR formatted string describing network address space"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet\" <$> TF.attribute",
                    "name": "_subnet",
                    "method": "subnet",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnet",
                    "validate": false,
                    "optional": false,
                    "original": "subnet"
                },
                {
                    "default": "_vlanId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "VLAN on which the network exists"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"vlan_id\" <$> TF.attribute",
                    "name": "_vlanId",
                    "method": "vlanId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVlanId",
                    "validate": false,
                    "optional": false,
                    "original": "vlan_id"
                }
            ],
            "conflicts": [],
            "type": "FabricResource s",
            "original": "triton_fabric"
        },
        {
            "con": {
                "smart": "firewallRuleResource",
                "name": "FirewallRuleResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Human-readable description of the rule"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Indicates if the rule is enabled"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "enabled"
                },
                {
                    "default": "_rule",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Firewall rule text"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "_rule",
                    "method": "rule",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRule",
                    "validate": false,
                    "optional": false,
                    "original": "rule"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/firewall_rule.html",
            "name": "FirewallRuleResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Indicates whether or not the rule is global"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"global\" <$> TF.attribute",
                    "name": "_computedGlobal",
                    "method": "computedGlobal",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedGlobal",
                    "validate": false,
                    "optional": false,
                    "original": "global"
                }
            ],
            "parameters": [
                {
                    "default": "_rule",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Firewall rule text"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "_rule",
                    "method": "rule",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRule",
                    "validate": false,
                    "optional": false,
                    "original": "rule"
                }
            ],
            "conflicts": [],
            "type": "FirewallRuleResource s",
            "original": "triton_firewall_rule"
        },
        {
            "con": {
                "smart": "instanceTemplateResource",
                "name": "InstanceTemplateResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether to enable the firewall for group instances"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"firewall_enabled\" <$> TF.attribute",
                    "name": "_firewallEnabled",
                    "method": "firewallEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasFirewallEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "firewall_enabled"
                },
                {
                    "default": "_image",
                    "computed": false,
                    "required": true,
                    "help": [
                        "UUID of the image"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "_image",
                    "method": "image",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImage",
                    "validate": false,
                    "optional": false,
                    "original": "image"
                },
                {
                    "default": "_package",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Package name used for provisioning"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"package\" <$> TF.attribute",
                    "name": "_package",
                    "method": "package",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPackage",
                    "validate": false,
                    "optional": false,
                    "original": "package"
                },
                {
                    "default": "_templateName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Friendly name for the instance template"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"template_name\" <$> TF.attribute",
                    "name": "_templateName",
                    "method": "templateName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTemplateName",
                    "validate": false,
                    "optional": false,
                    "original": "template_name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/instance_template.html",
            "name": "InstanceTemplateResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Metadata for group instances"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_computedMetadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "validate": false,
                    "optional": true,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Network IDs for group instances"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"networks\" <$> TF.attribute",
                    "name": "_computedNetworks",
                    "method": "computedNetworks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNetworks",
                    "validate": false,
                    "optional": true,
                    "original": "networks"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Tags for group instances"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_computedTags",
                    "method": "computedTags",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Data copied to instance on boot"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"userdata\" <$> TF.attribute",
                    "name": "_computedUserdata",
                    "method": "computedUserdata",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUserdata",
                    "validate": false,
                    "optional": true,
                    "original": "userdata"
                }
            ],
            "parameters": [
                {
                    "default": "_image",
                    "computed": false,
                    "required": true,
                    "help": [
                        "UUID of the image"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "_image",
                    "method": "image",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImage",
                    "validate": false,
                    "optional": false,
                    "original": "image"
                },
                {
                    "default": "_package",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Package name used for provisioning"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"package\" <$> TF.attribute",
                    "name": "_package",
                    "method": "package",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPackage",
                    "validate": false,
                    "optional": false,
                    "original": "package"
                },
                {
                    "default": "_templateName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Friendly name for the instance template"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"template_name\" <$> TF.attribute",
                    "name": "_templateName",
                    "method": "templateName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTemplateName",
                    "validate": false,
                    "optional": false,
                    "original": "template_name"
                }
            ],
            "conflicts": [],
            "type": "InstanceTemplateResource s",
            "original": "triton_instance_template"
        },
        {
            "con": {
                "smart": "keyResource",
                "name": "KeyResource'"
            },
            "arguments": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Content of public key from disk in OpenSSH format"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "_key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "validate": false,
                    "optional": false,
                    "original": "key"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/key.html",
            "name": "KeyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Name of the key (generated from the key comment if not set)"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                }
            ],
            "parameters": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Content of public key from disk in OpenSSH format"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "_key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "validate": false,
                    "optional": false,
                    "original": "key"
                }
            ],
            "conflicts": [],
            "type": "KeyResource s",
            "original": "triton_key"
        },
        {
            "con": {
                "smart": "machineResource",
                "name": "MachineResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Administrator's initial password (Windows only)"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"administrator_pw\" <$> TF.attribute",
                    "name": "_administratorPw",
                    "method": "administratorPw",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAdministratorPw",
                    "validate": false,
                    "optional": true,
                    "original": "administrator_pw"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Label based affinity rules for assisting instance placement"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"affinity\" <$> TF.attribute",
                    "name": "_affinity",
                    "method": "affinity",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasAffinity",
                    "validate": false,
                    "optional": true,
                    "original": "affinity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Copied to machine on boot"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"cloud_config\" <$> TF.attribute",
                    "name": "_cloudConfig",
                    "method": "cloudConfig",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCloudConfig",
                    "validate": false,
                    "optional": true,
                    "original": "cloud_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Container Name Service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cns\" <$> TF.attribute",
                    "name": "_cns",
                    "method": "cns",
                    "conflicts": [],
                    "type": "TF.Attr s (MachineCns s)",
                    "class": "HasCns",
                    "validate": true,
                    "optional": true,
                    "original": "cns"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether to enable deletion protection for this machine"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"deletion_protection_enabled\" <$> TF.attribute",
                    "name": "_deletionProtectionEnabled",
                    "method": "deletionProtectionEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDeletionProtectionEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "deletion_protection_enabled"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether to enable the firewall for this machine"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"firewall_enabled\" <$> TF.attribute",
                    "name": "_firewallEnabled",
                    "method": "firewallEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasFirewallEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "firewall_enabled"
                },
                {
                    "default": "_image",
                    "computed": false,
                    "required": true,
                    "help": [
                        "UUID of the image"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "_image",
                    "method": "image",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImage",
                    "validate": false,
                    "optional": false,
                    "original": "image"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Machine metadata"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "validate": false,
                    "optional": true,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Desired network IDs"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"networks\" <$> TF.attribute",
                    "name": "_networks",
                    "method": "networks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasNetworks",
                    "validate": false,
                    "optional": true,
                    "original": "networks"
                },
                {
                    "default": "_package",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The package for use for provisioning"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"package\" <$> TF.attribute",
                    "name": "_package",
                    "method": "package",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPackage",
                    "validate": false,
                    "optional": false,
                    "original": "package"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Machine tags"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Data copied to machine on boot"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"user_data\" <$> TF.attribute",
                    "name": "_userData",
                    "method": "userData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserData",
                    "validate": false,
                    "optional": true,
                    "original": "user_data"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "User script to run on boot (every boot on SmartMachines)"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"user_script\" <$> TF.attribute",
                    "name": "_userScript",
                    "method": "userScript",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserScript",
                    "validate": false,
                    "optional": true,
                    "original": "user_script"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/machine.html",
            "name": "MachineResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "UUID of the server on which the instance is located"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"compute_node\" <$> TF.attribute",
                    "name": "_computedComputeNode",
                    "method": "computedComputeNode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedComputeNode",
                    "validate": false,
                    "optional": false,
                    "original": "compute_node"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "When the machine was created"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"created\" <$> TF.attribute",
                    "name": "_computedCreated",
                    "method": "computedCreated",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreated",
                    "validate": false,
                    "optional": false,
                    "original": "created"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Dataset URN with which the machine was provisioned"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"dataset\" <$> TF.attribute",
                    "name": "_computedDataset",
                    "method": "computedDataset",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDataset",
                    "validate": false,
                    "optional": false,
                    "original": "dataset"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Amount of disk allocated to the machine (in Gb)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "_computedDisk",
                    "method": "computedDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDisk",
                    "validate": false,
                    "optional": false,
                    "original": "disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "List of domain names from Triton CNS"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_names\" <$> TF.attribute",
                    "name": "_computedDomainNames",
                    "method": "computedDomainNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedDomainNames",
                    "validate": false,
                    "optional": false,
                    "original": "domain_names"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "IP addresses assigned to the machine"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ips\" <$> TF.attribute",
                    "name": "_computedIps",
                    "method": "computedIps",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedIps",
                    "validate": false,
                    "optional": false,
                    "original": "ips"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Amount of memory allocated to the machine (in Mb)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"memory\" <$> TF.attribute",
                    "name": "_computedMemory",
                    "method": "computedMemory",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMemory",
                    "validate": false,
                    "optional": false,
                    "original": "memory"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Friendly name for machine"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Network interface"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"nic\" <$> TF.attribute",
                    "name": "_computedNic",
                    "method": "computedNic",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (MachineNic s)]",
                    "class": "HasComputedNic",
                    "validate": true,
                    "optional": true,
                    "original": "nic"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Primary (public) IP address for the machine"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"primaryip\" <$> TF.attribute",
                    "name": "_computedPrimaryip",
                    "method": "computedPrimaryip",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrimaryip",
                    "validate": false,
                    "optional": false,
                    "original": "primaryip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Authorized keys for the root user on this machine"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"root_authorized_keys\" <$> TF.attribute",
                    "name": "_computedRootAuthorizedKeys",
                    "method": "computedRootAuthorizedKeys",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRootAuthorizedKeys",
                    "validate": false,
                    "optional": true,
                    "original": "root_authorized_keys"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Machine type (smartmachine or virtualmachine)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "When the machine was updated"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"updated\" <$> TF.attribute",
                    "name": "_computedUpdated",
                    "method": "computedUpdated",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdated",
                    "validate": false,
                    "optional": false,
                    "original": "updated"
                }
            ],
            "parameters": [
                {
                    "default": "_image",
                    "computed": false,
                    "required": true,
                    "help": [
                        "UUID of the image"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "_image",
                    "method": "image",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImage",
                    "validate": false,
                    "optional": false,
                    "original": "image"
                },
                {
                    "default": "_package",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The package for use for provisioning"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"package\" <$> TF.attribute",
                    "name": "_package",
                    "method": "package",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPackage",
                    "validate": false,
                    "optional": false,
                    "original": "package"
                }
            ],
            "conflicts": [],
            "type": "MachineResource s",
            "original": "triton_machine"
        },
        {
            "con": {
                "smart": "serviceGroupResource",
                "name": "ServiceGroupResource'"
            },
            "arguments": [
                {
                    "default": "_groupName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Friendly name for the service group"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"group_name\" <$> TF.attribute",
                    "name": "_groupName",
                    "method": "groupName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGroupName",
                    "validate": false,
                    "optional": false,
                    "original": "group_name"
                },
                {
                    "default": "_template",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Identifier of an instance template"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"template\" <$> TF.attribute",
                    "name": "_template",
                    "method": "template",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTemplate",
                    "validate": false,
                    "optional": false,
                    "original": "template"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/service_group.html",
            "name": "ServiceGroupResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Number of instances to launch and monitor"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"capacity\" <$> TF.attribute",
                    "name": "_computedCapacity",
                    "method": "computedCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedCapacity",
                    "validate": false,
                    "optional": true,
                    "original": "capacity"
                }
            ],
            "parameters": [
                {
                    "default": "_groupName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Friendly name for the service group"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"group_name\" <$> TF.attribute",
                    "name": "_groupName",
                    "method": "groupName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGroupName",
                    "validate": false,
                    "optional": false,
                    "original": "group_name"
                },
                {
                    "default": "_template",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Identifier of an instance template"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"template\" <$> TF.attribute",
                    "name": "_template",
                    "method": "template",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTemplate",
                    "validate": false,
                    "optional": false,
                    "original": "template"
                }
            ],
            "conflicts": [],
            "type": "ServiceGroupResource s",
            "original": "triton_service_group"
        },
        {
            "con": {
                "smart": "snapshotResource",
                "name": "SnapshotResource'"
            },
            "arguments": [
                {
                    "default": "_machineId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"machine_id\" <$> TF.attribute",
                    "name": "_machineId",
                    "method": "machineId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMachineId",
                    "validate": false,
                    "optional": false,
                    "original": "machine_id"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/snapshot.html",
            "name": "SnapshotResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_computedState",
                    "method": "computedState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedState",
                    "validate": false,
                    "optional": false,
                    "original": "state"
                }
            ],
            "parameters": [
                {
                    "default": "_machineId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"machine_id\" <$> TF.attribute",
                    "name": "_machineId",
                    "method": "machineId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMachineId",
                    "validate": false,
                    "optional": false,
                    "original": "machine_id"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "SnapshotResource s",
            "original": "triton_snapshot"
        },
        {
            "con": {
                "smart": "vlanResource",
                "name": "VlanResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Description of the VLAN"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to identify VLAN"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_vlanId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Number between 0-4095 indicating VLAN ID"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"vlan_id\" <$> TF.attribute",
                    "name": "_vlanId",
                    "method": "vlanId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVlanId",
                    "validate": false,
                    "optional": false,
                    "original": "vlan_id"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/triton/r/vlan.html",
            "name": "VlanResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to identify VLAN"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_vlanId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Number between 0-4095 indicating VLAN ID"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"vlan_id\" <$> TF.attribute",
                    "name": "_vlanId",
                    "method": "vlanId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVlanId",
                    "validate": false,
                    "optional": false,
                    "original": "vlan_id"
                }
            ],
            "conflicts": [],
            "type": "VlanResource s",
            "original": "triton_vlan"
        }
    ],
    "schema": {
        "con": {
            "smart": "newProvider",
            "name": "Provider'"
        },
        "arguments": [
            {
                "default": "_account",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"account\"",
                "name": "_account",
                "method": "account",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasAccount",
                "validate": false,
                "optional": false,
                "original": "account"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [],
                "forceNew": false,
                "encoder": "TF.assign \"insecure_skip_tls_verify\" <$>",
                "name": "_insecureSkipTlsVerify",
                "method": "insecureSkipTlsVerify",
                "conflicts": [],
                "type": "P.Maybe P.Bool",
                "class": "HasInsecureSkipTlsVerify",
                "validate": false,
                "optional": true,
                "original": "insecure_skip_tls_verify"
            },
            {
                "default": "_keyId",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"key_id\"",
                "name": "_keyId",
                "method": "keyId",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasKeyId",
                "validate": false,
                "optional": false,
                "original": "key_id"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [],
                "forceNew": false,
                "encoder": "TF.assign \"key_material\" <$>",
                "name": "_keyMaterial",
                "method": "keyMaterial",
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasKeyMaterial",
                "validate": false,
                "optional": true,
                "original": "key_material"
            },
            {
                "default": "_url",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"url\"",
                "name": "_url",
                "method": "url",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasUrl",
                "validate": false,
                "optional": false,
                "original": "url"
            },
            {
                "default": "_user",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"user\"",
                "name": "_user",
                "method": "user",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasUser",
                "validate": false,
                "optional": false,
                "original": "user"
            }
        ],
        "name": "Provider",
        "threaded": false,
        "attributes": [],
        "parameters": [
            {
                "default": "_account",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"account\"",
                "name": "_account",
                "method": "account",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasAccount",
                "validate": false,
                "optional": false,
                "original": "account"
            },
            {
                "default": "_keyId",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"key_id\"",
                "name": "_keyId",
                "method": "keyId",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasKeyId",
                "validate": false,
                "optional": false,
                "original": "key_id"
            },
            {
                "default": "_url",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"url\"",
                "name": "_url",
                "method": "url",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasUrl",
                "validate": false,
                "optional": false,
                "original": "url"
            },
            {
                "default": "_user",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"user\"",
                "name": "_user",
                "method": "user",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasUser",
                "validate": false,
                "optional": false,
                "original": "user"
            }
        ],
        "conflicts": [],
        "type": "Provider",
        "original": "provider"
    },
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "Triton",
    "package": "terrafomo-triton",
    "original": "triton"
}