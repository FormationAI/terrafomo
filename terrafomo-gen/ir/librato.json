{
    "settings": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"color\" <$> TF.attribute",
                    "name": "color",
                    "method": "color",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasColor",
                    "optional": true,
                    "label": "_color"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"composite\" <$> TF.attribute",
                    "name": "composite",
                    "method": "composite",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "source",
                            "label": "_source"
                        },
                        {
                            "default": "TF.Nil",
                            "method": "metric",
                            "label": "_metric"
                        },
                        {
                            "default": "TF.Nil",
                            "method": "groupFunction",
                            "label": "_groupFunction"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComposite",
                    "optional": true,
                    "label": "_composite"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"group_function\" <$> TF.attribute",
                    "name": "group_function",
                    "method": "groupFunction",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "composite",
                            "label": "_composite"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGroupFunction",
                    "optional": true,
                    "label": "_groupFunction"
                },
                {
                    "default": "TF.value (0 P./ 0)",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max\" <$> TF.attribute",
                    "name": "max",
                    "method": "max",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasMax",
                    "optional": true,
                    "label": "_max"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric\" <$> TF.attribute",
                    "name": "metric",
                    "method": "metric",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "composite",
                            "label": "_composite"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetric",
                    "optional": true,
                    "label": "_metric"
                },
                {
                    "default": "TF.value (0 P./ 0)",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min\" <$> TF.attribute",
                    "name": "min",
                    "method": "min",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasMin",
                    "optional": true,
                    "label": "_min"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "period",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeriod",
                    "optional": true,
                    "label": "_period"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "source",
                    "method": "source",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "composite",
                            "label": "_composite"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "optional": true,
                    "label": "_source"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"summary_function\" <$> TF.attribute",
                    "name": "summary_function",
                    "method": "summaryFunction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSummaryFunction",
                    "optional": true,
                    "label": "_summaryFunction"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"transform_function\" <$> TF.attribute",
                    "name": "transform_function",
                    "method": "transformFunction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTransformFunction",
                    "optional": true,
                    "label": "_transformFunction"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"units_long\" <$> TF.attribute",
                    "name": "units_long",
                    "method": "unitsLong",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnitsLong",
                    "optional": true,
                    "label": "_unitsLong"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"units_short\" <$> TF.attribute",
                    "name": "units_short",
                    "method": "unitsShort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnitsShort",
                    "optional": true,
                    "label": "_unitsShort"
                }
            ],
            "name": "Stream",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Stream s",
            "original": "stream"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"aggregate\" <$> TF.attribute",
                    "name": "aggregate",
                    "method": "aggregate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAggregate",
                    "optional": true,
                    "label": "_aggregate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"color\" <$> TF.attribute",
                    "name": "color",
                    "method": "color",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasColor",
                    "optional": true,
                    "label": "_color"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_max\" <$> TF.attribute",
                    "name": "display_max",
                    "method": "displayMax",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayMax",
                    "optional": true,
                    "label": "_displayMax"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_min\" <$> TF.attribute",
                    "name": "display_min",
                    "method": "displayMin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayMin",
                    "optional": true,
                    "label": "_displayMin"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_stacked\" <$> TF.attribute",
                    "name": "display_stacked",
                    "method": "displayStacked",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisplayStacked",
                    "optional": true,
                    "label": "_displayStacked"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_units_long\" <$> TF.attribute",
                    "name": "display_units_long",
                    "method": "displayUnitsLong",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayUnitsLong",
                    "optional": true,
                    "label": "_displayUnitsLong"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_units_short\" <$> TF.attribute",
                    "name": "display_units_short",
                    "method": "displayUnitsShort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayUnitsShort",
                    "optional": true,
                    "label": "_displayUnitsShort"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gap_detection\" <$> TF.attribute",
                    "name": "gap_detection",
                    "method": "gapDetection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasGapDetection",
                    "optional": true,
                    "label": "_gapDetection"
                }
            ],
            "name": "Attributes",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_by_ua\" <$> TF.attribute",
                    "name": "created_by_ua",
                    "method": "computedCreatedByUa",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedByUa",
                    "optional": false,
                    "label": "_computedCreatedByUa"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Attributes s",
            "original": "attributes"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"detect_reset\" <$> TF.attribute",
                    "name": "detect_reset",
                    "method": "detectReset",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDetectReset",
                    "optional": true,
                    "label": "_detectReset"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"duration\" <$> TF.attribute",
                    "name": "duration",
                    "method": "duration",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDuration",
                    "optional": true,
                    "label": "_duration"
                },
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "optional": true,
                    "label": "_source"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"summary_function\" <$> TF.attribute",
                    "name": "summary_function",
                    "method": "summaryFunction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSummaryFunction",
                    "optional": true,
                    "label": "_summaryFunction"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasThreshold",
                    "optional": true,
                    "label": "_threshold"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "name": "Condition",
            "attributes": [],
            "parameters": [
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "hashable": false,
            "type": "Condition s",
            "original": "condition"
        }
    ],
    "arguments": [
        {
            "default": "_email",
            "computed": false,
            "required": true,
            "help": [
                "The email address for the Librato account."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"email\"",
            "name": "email",
            "method": "email",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasEmail",
            "optional": false,
            "label": "_email"
        },
        {
            "default": "_token",
            "computed": false,
            "required": true,
            "help": [
                "The auth token for the Librato account."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"token\"",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasToken",
            "optional": false,
            "label": "_token"
        }
    ],
    "dataSources": [],
    "resources": [
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"active\" <$> TF.attribute",
                    "name": "active",
                    "method": "active",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasActive",
                    "optional": true,
                    "label": "_active"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attributes\" <$> TF.attribute",
                    "name": "attributes",
                    "method": "attributes",
                    "conflicts": [],
                    "type": "TF.Attr s [Attributes s]",
                    "class": "HasAttributes",
                    "optional": true,
                    "label": "_attributes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"condition\" <$> TF.attribute",
                    "name": "condition",
                    "method": "condition",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Condition s)]",
                    "class": "HasCondition",
                    "optional": true,
                    "label": "_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value 600",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rearm_seconds\" <$> TF.attribute",
                    "name": "rearm_seconds",
                    "method": "rearmSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRearmSeconds",
                    "optional": true,
                    "label": "_rearmSeconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "services",
                    "method": "services",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasServices",
                    "optional": true,
                    "label": "_services"
                }
            ],
            "schema": "Resource",
            "name": "AlertResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "AlertResource s",
            "original": "librato_alert"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attributes\" <$> TF.attribute",
                    "name": "attributes",
                    "method": "attributes",
                    "conflicts": [],
                    "type": "TF.Attr s [Attributes s]",
                    "class": "HasAttributes",
                    "optional": true,
                    "label": "_attributes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"composite\" <$> TF.attribute",
                    "name": "composite",
                    "method": "composite",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComposite",
                    "optional": true,
                    "label": "_composite"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "display_name",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "optional": true,
                    "label": "_displayName"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "period",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeriod",
                    "optional": true,
                    "label": "_period"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "schema": "Resource",
            "name": "MetricResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "type": "MetricResource s",
            "original": "librato_metric"
        },
        {
            "arguments": [
                {
                    "default": "_settings",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"settings\" <$> TF.attribute",
                    "name": "settings",
                    "method": "settings",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSettings",
                    "optional": false,
                    "label": "_settings"
                },
                {
                    "default": "_title",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"title\" <$> TF.attribute",
                    "name": "title",
                    "method": "title",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTitle",
                    "optional": false,
                    "label": "_title"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "schema": "Resource",
            "name": "ServiceResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                }
            ],
            "parameters": [
                {
                    "default": "_settings",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"settings\" <$> TF.attribute",
                    "name": "settings",
                    "method": "settings",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSettings",
                    "optional": false,
                    "label": "_settings"
                },
                {
                    "default": "_title",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"title\" <$> TF.attribute",
                    "name": "title",
                    "method": "title",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTitle",
                    "optional": false,
                    "label": "_title"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "type": "ServiceResource s",
            "original": "librato_service"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "SpaceResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "SpaceResource s",
            "original": "librato_space"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label\" <$> TF.attribute",
                    "name": "label",
                    "method": "label",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLabel",
                    "optional": true,
                    "label": "_label"
                },
                {
                    "default": "TF.value (0 P./ 0)",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max\" <$> TF.attribute",
                    "name": "max",
                    "method": "max",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasMax",
                    "optional": true,
                    "label": "_max"
                },
                {
                    "default": "TF.value (0 P./ 0)",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min\" <$> TF.attribute",
                    "name": "min",
                    "method": "min",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasMin",
                    "optional": true,
                    "label": "_min"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"related_space\" <$> TF.attribute",
                    "name": "related_space",
                    "method": "relatedSpace",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRelatedSpace",
                    "optional": true,
                    "label": "_relatedSpace"
                },
                {
                    "default": "_spaceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"space_id\" <$> TF.attribute",
                    "name": "space_id",
                    "method": "spaceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSpaceId",
                    "optional": false,
                    "label": "_spaceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"stream\" <$> TF.attribute",
                    "name": "stream",
                    "method": "stream",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Stream s)]",
                    "class": "HasStream",
                    "optional": true,
                    "label": "_stream"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "schema": "Resource",
            "name": "SpaceChartResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_spaceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"space_id\" <$> TF.attribute",
                    "name": "space_id",
                    "method": "spaceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSpaceId",
                    "optional": false,
                    "label": "_spaceId"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "type": "SpaceChartResource s",
            "original": "librato_space_chart"
        }
    ],
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "Librato",
    "parameters": [
        {
            "default": "_email",
            "computed": false,
            "required": true,
            "help": [
                "The email address for the Librato account."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"email\"",
            "name": "email",
            "method": "email",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasEmail",
            "optional": false,
            "label": "_email"
        },
        {
            "default": "_token",
            "computed": false,
            "required": true,
            "help": [
                "The auth token for the Librato account."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"token\"",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasToken",
            "optional": false,
            "label": "_token"
        }
    ],
    "package": "terrafomo-librato",
    "type": "Provider",
    "original": "librato"
}