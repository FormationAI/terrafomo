{
    "settings": [
        {
            "arguments": [],
            "name": "Telemetry",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_api_app\" <$> TF.attribute",
                    "name": "circonus_api_app",
                    "method": "computedCirconusApiApp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusApiApp",
                    "optional": false,
                    "label": "_computedCirconusApiApp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_api_token\" <$> TF.attribute",
                    "name": "circonus_api_token",
                    "method": "computedCirconusApiToken",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusApiToken",
                    "optional": false,
                    "label": "_computedCirconusApiToken"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_api_url\" <$> TF.attribute",
                    "name": "circonus_api_url",
                    "method": "computedCirconusApiUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusApiUrl",
                    "optional": false,
                    "label": "_computedCirconusApiUrl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_broker_id\" <$> TF.attribute",
                    "name": "circonus_broker_id",
                    "method": "computedCirconusBrokerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusBrokerId",
                    "optional": false,
                    "label": "_computedCirconusBrokerId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_check_id\" <$> TF.attribute",
                    "name": "circonus_check_id",
                    "method": "computedCirconusCheckId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusCheckId",
                    "optional": false,
                    "label": "_computedCirconusCheckId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_check_tags\" <$> TF.attribute",
                    "name": "circonus_check_tags",
                    "method": "computedCirconusCheckTags",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusCheckTags",
                    "optional": false,
                    "label": "_computedCirconusCheckTags"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_display_name\" <$> TF.attribute",
                    "name": "circonus_display_name",
                    "method": "computedCirconusDisplayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusDisplayName",
                    "optional": false,
                    "label": "_computedCirconusDisplayName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_force_metric_activation\" <$> TF.attribute",
                    "name": "circonus_force_metric_activation",
                    "method": "computedCirconusForceMetricActivation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedCirconusForceMetricActivation",
                    "optional": false,
                    "label": "_computedCirconusForceMetricActivation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_instance_id\" <$> TF.attribute",
                    "name": "circonus_instance_id",
                    "method": "computedCirconusInstanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusInstanceId",
                    "optional": false,
                    "label": "_computedCirconusInstanceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_search_tag\" <$> TF.attribute",
                    "name": "circonus_search_tag",
                    "method": "computedCirconusSearchTag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusSearchTag",
                    "optional": false,
                    "label": "_computedCirconusSearchTag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_select_tag\" <$> TF.attribute",
                    "name": "circonus_select_tag",
                    "method": "computedCirconusSelectTag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusSelectTag",
                    "optional": false,
                    "label": "_computedCirconusSelectTag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_submission_interval\" <$> TF.attribute",
                    "name": "circonus_submission_interval",
                    "method": "computedCirconusSubmissionInterval",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusSubmissionInterval",
                    "optional": false,
                    "label": "_computedCirconusSubmissionInterval"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"circonus_submission_url\" <$> TF.attribute",
                    "name": "circonus_submission_url",
                    "method": "computedCirconusSubmissionUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCirconusSubmissionUrl",
                    "optional": false,
                    "label": "_computedCirconusSubmissionUrl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dogstatsd_addr\" <$> TF.attribute",
                    "name": "dogstatsd_addr",
                    "method": "computedDogstatsdAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDogstatsdAddr",
                    "optional": false,
                    "label": "_computedDogstatsdAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dogstatsd_tags\" <$> TF.attribute",
                    "name": "dogstatsd_tags",
                    "method": "computedDogstatsdTags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedDogstatsdTags",
                    "optional": false,
                    "label": "_computedDogstatsdTags"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_hostname\" <$> TF.attribute",
                    "name": "enable_hostname",
                    "method": "computedEnableHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEnableHostname",
                    "optional": false,
                    "label": "_computedEnableHostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statsd_addr\" <$> TF.attribute",
                    "name": "statsd_addr",
                    "method": "computedStatsdAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatsdAddr",
                    "optional": false,
                    "label": "_computedStatsdAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statsite_addr\" <$> TF.attribute",
                    "name": "statsite_addr",
                    "method": "computedStatsiteAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatsiteAddr",
                    "optional": false,
                    "label": "_computedStatsiteAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statsite_prefix\" <$> TF.attribute",
                    "name": "statsite_prefix",
                    "method": "computedStatsitePrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatsitePrefix",
                    "optional": false,
                    "label": "_computedStatsitePrefix"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Telemetry s",
            "original": "telemetry"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow_stale\" <$> TF.attribute",
                    "name": "allow_stale",
                    "method": "allowStale",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAllowStale",
                    "optional": true,
                    "label": "_allowStale"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "datacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatacenter",
                    "optional": true,
                    "label": "_datacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"near\" <$> TF.attribute",
                    "name": "near",
                    "method": "near",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNear",
                    "optional": true,
                    "label": "_near"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_meta\" <$> TF.attribute",
                    "name": "node_meta",
                    "method": "nodeMeta",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasNodeMeta",
                    "optional": true,
                    "label": "_nodeMeta"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"require_consistent\" <$> TF.attribute",
                    "name": "require_consistent",
                    "method": "requireConsistent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasRequireConsistent",
                    "optional": true,
                    "label": "_requireConsistent"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"wait_index\" <$> TF.attribute",
                    "name": "wait_index",
                    "method": "waitIndex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasWaitIndex",
                    "optional": true,
                    "label": "_waitIndex"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"wait_time\" <$> TF.attribute",
                    "name": "wait_time",
                    "method": "waitTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasWaitTime",
                    "optional": true,
                    "label": "_waitTime"
                }
            ],
            "name": "QueryOptions",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "QueryOptions s",
            "original": "query_options"
        },
        {
            "arguments": [],
            "name": "Service",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "optional": false,
                    "label": "_computedAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"create_index\" <$> TF.attribute",
                    "name": "create_index",
                    "method": "computedCreateIndex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreateIndex",
                    "optional": false,
                    "label": "_computedCreateIndex"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_tag_override\" <$> TF.attribute",
                    "name": "enable_tag_override",
                    "method": "computedEnableTagOverride",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEnableTagOverride",
                    "optional": false,
                    "label": "_computedEnableTagOverride"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"modify_index\" <$> TF.attribute",
                    "name": "modify_index",
                    "method": "computedModifyIndex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedModifyIndex",
                    "optional": false,
                    "label": "_computedModifyIndex"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "optional": false,
                    "label": "_computedName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_address\" <$> TF.attribute",
                    "name": "node_address",
                    "method": "computedNodeAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeAddress",
                    "optional": false,
                    "label": "_computedNodeAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_id\" <$> TF.attribute",
                    "name": "node_id",
                    "method": "computedNodeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeId",
                    "optional": false,
                    "label": "_computedNodeId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_meta\" <$> TF.attribute",
                    "name": "node_meta",
                    "method": "computedNodeMeta",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedNodeMeta",
                    "optional": false,
                    "label": "_computedNodeMeta"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_name\" <$> TF.attribute",
                    "name": "node_name",
                    "method": "computedNodeName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeName",
                    "optional": false,
                    "label": "_computedNodeName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "computedPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPort",
                    "optional": false,
                    "label": "_computedPort"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tagged_addresses\" <$> TF.attribute",
                    "name": "tagged_addresses",
                    "method": "computedTaggedAddresses",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TaggedAddresses s))",
                    "class": "HasComputedTaggedAddresses",
                    "optional": false,
                    "label": "_computedTaggedAddresses"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "computedTags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedTags",
                    "optional": false,
                    "label": "_computedTags"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Service s",
            "original": "service"
        },
        {
            "arguments": [],
            "name": "Performance",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"raft_multiplier\" <$> TF.attribute",
                    "name": "raft_multiplier",
                    "method": "computedRaftMultiplier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRaftMultiplier",
                    "optional": false,
                    "label": "_computedRaftMultiplier"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Performance s",
            "original": "performance"
        },
        {
            "arguments": [],
            "name": "Addresses",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns\" <$> TF.attribute",
                    "name": "dns",
                    "method": "computedDns",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDns",
                    "optional": false,
                    "label": "_computedDns"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http\" <$> TF.attribute",
                    "name": "http",
                    "method": "computedHttp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttp",
                    "optional": false,
                    "label": "_computedHttp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"https\" <$> TF.attribute",
                    "name": "https",
                    "method": "computedHttps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttps",
                    "optional": false,
                    "label": "_computedHttps"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rpc\" <$> TF.attribute",
                    "name": "rpc",
                    "method": "computedRpc",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRpc",
                    "optional": false,
                    "label": "_computedRpc"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Addresses s",
            "original": "addresses"
        },
        {
            "arguments": [],
            "name": "UnixSockets",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"group\" <$> TF.attribute",
                    "name": "group",
                    "method": "computedGroup",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGroup",
                    "optional": false,
                    "label": "_computedGroup"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "mode",
                    "method": "computedMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMode",
                    "optional": false,
                    "label": "_computedMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user\" <$> TF.attribute",
                    "name": "user",
                    "method": "computedUser",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUser",
                    "optional": false,
                    "label": "_computedUser"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "UnixSockets s",
            "original": "unix_sockets"
        },
        {
            "arguments": [],
            "name": "RetryJoinGce",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"credentials_file\" <$> TF.attribute",
                    "name": "credentials_file",
                    "method": "computedCredentialsFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCredentialsFile",
                    "optional": false,
                    "label": "_computedCredentialsFile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_name\" <$> TF.attribute",
                    "name": "project_name",
                    "method": "computedProjectName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectName",
                    "optional": false,
                    "label": "_computedProjectName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tag_value\" <$> TF.attribute",
                    "name": "tag_value",
                    "method": "computedTagValue",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTagValue",
                    "optional": false,
                    "label": "_computedTagValue"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_pattern\" <$> TF.attribute",
                    "name": "zone_pattern",
                    "method": "computedZonePattern",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZonePattern",
                    "optional": false,
                    "label": "_computedZonePattern"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "RetryJoinGce s",
            "original": "retry_join_gce"
        },
        {
            "arguments": [],
            "name": "RetryJoinEc2",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": false,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tag_key\" <$> TF.attribute",
                    "name": "tag_key",
                    "method": "computedTagKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTagKey",
                    "optional": false,
                    "label": "_computedTagKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tag_value\" <$> TF.attribute",
                    "name": "tag_value",
                    "method": "computedTagValue",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTagValue",
                    "optional": false,
                    "label": "_computedTagValue"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "RetryJoinEc2 s",
            "original": "retry_join_ec2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"datacenters\" <$> TF.attribute",
                    "name": "datacenters",
                    "method": "datacenters",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDatacenters",
                    "optional": true,
                    "label": "_datacenters"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"nearest_n\" <$> TF.attribute",
                    "name": "nearest_n",
                    "method": "nearestN",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasNearestN",
                    "optional": true,
                    "label": "_nearestN"
                }
            ],
            "name": "Failover",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Failover s",
            "original": "failover"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default\" <$> TF.attribute",
                    "name": "default",
                    "method": "default'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefault'",
                    "optional": true,
                    "label": "_default'"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": false,
                    "label": "_path"
                }
            ],
            "name": "Key",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": false,
                    "label": "_path"
                }
            ],
            "hashable": false,
            "type": "Key s",
            "original": "key"
        },
        {
            "arguments": [],
            "name": "Ports",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns\" <$> TF.attribute",
                    "name": "dns",
                    "method": "computedDns",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDns",
                    "optional": false,
                    "label": "_computedDns"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http\" <$> TF.attribute",
                    "name": "http",
                    "method": "computedHttp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedHttp",
                    "optional": false,
                    "label": "_computedHttp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"https\" <$> TF.attribute",
                    "name": "https",
                    "method": "computedHttps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedHttps",
                    "optional": false,
                    "label": "_computedHttps"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rpc\" <$> TF.attribute",
                    "name": "rpc",
                    "method": "computedRpc",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedRpc",
                    "optional": false,
                    "label": "_computedRpc"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serf_lan\" <$> TF.attribute",
                    "name": "serf_lan",
                    "method": "computedSerfLan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSerfLan",
                    "optional": false,
                    "label": "_computedSerfLan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serf_wan\" <$> TF.attribute",
                    "name": "serf_wan",
                    "method": "computedSerfWan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSerfWan",
                    "optional": false,
                    "label": "_computedSerfWan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server\" <$> TF.attribute",
                    "name": "server",
                    "method": "computedServer",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedServer",
                    "optional": false,
                    "label": "_computedServer"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Ports s",
            "original": "ports"
        },
        {
            "arguments": [],
            "name": "AdvertiseAddrs",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rpc\" <$> TF.attribute",
                    "name": "rpc",
                    "method": "computedRpc",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRpc",
                    "optional": false,
                    "label": "_computedRpc"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serf_lan\" <$> TF.attribute",
                    "name": "serf_lan",
                    "method": "computedSerfLan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSerfLan",
                    "optional": false,
                    "label": "_computedSerfLan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serf_wan\" <$> TF.attribute",
                    "name": "serf_wan",
                    "method": "computedSerfWan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSerfWan",
                    "optional": false,
                    "label": "_computedSerfWan"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "AdvertiseAddrs s",
            "original": "advertise_addrs"
        },
        {
            "arguments": [
                {
                    "default": "_regexp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"regexp\" <$> TF.attribute",
                    "name": "regexp",
                    "method": "regexp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegexp",
                    "optional": false,
                    "label": "_regexp"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "name": "Template",
            "attributes": [],
            "parameters": [
                {
                    "default": "_regexp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"regexp\" <$> TF.attribute",
                    "name": "regexp",
                    "method": "regexp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegexp",
                    "optional": false,
                    "label": "_regexp"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "hashable": false,
            "type": "Template s",
            "original": "template"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default\" <$> TF.attribute",
                    "name": "default",
                    "method": "default'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefault'",
                    "optional": true,
                    "label": "_default'"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": false,
                    "label": "_path"
                }
            ],
            "name": "Subkey",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": false,
                    "label": "_path"
                }
            ],
            "hashable": false,
            "type": "Subkey s",
            "original": "subkey"
        },
        {
            "arguments": [],
            "name": "Nodes",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "optional": false,
                    "label": "_computedAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"meta\" <$> TF.attribute",
                    "name": "meta",
                    "method": "computedMeta",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMeta",
                    "optional": false,
                    "label": "_computedMeta"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "optional": false,
                    "label": "_computedName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tagged_addresses\" <$> TF.attribute",
                    "name": "tagged_addresses",
                    "method": "computedTaggedAddresses",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TaggedAddresses s))",
                    "class": "HasComputedTaggedAddresses",
                    "optional": false,
                    "label": "_computedTaggedAddresses"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Nodes s",
            "original": "nodes"
        },
        {
            "arguments": [],
            "name": "TaggedAddresses",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lan\" <$> TF.attribute",
                    "name": "lan",
                    "method": "computedLan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLan",
                    "optional": false,
                    "label": "_computedLan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"wan\" <$> TF.attribute",
                    "name": "wan",
                    "method": "computedWan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWan",
                    "optional": false,
                    "label": "_computedWan"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "TaggedAddresses s",
            "original": "tagged_addresses"
        },
        {
            "arguments": [],
            "name": "Services",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "computedTags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedTags",
                    "optional": false,
                    "label": "_computedTags"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Services s",
            "original": "services"
        },
        {
            "arguments": [],
            "name": "Dns",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow_stale\" <$> TF.attribute",
                    "name": "allow_stale",
                    "method": "computedAllowStale",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAllowStale",
                    "optional": false,
                    "label": "_computedAllowStale"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_compression\" <$> TF.attribute",
                    "name": "enable_compression",
                    "method": "computedEnableCompression",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableCompression",
                    "optional": false,
                    "label": "_computedEnableCompression"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_truncate\" <$> TF.attribute",
                    "name": "enable_truncate",
                    "method": "computedEnableTruncate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableTruncate",
                    "optional": false,
                    "label": "_computedEnableTruncate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_stale\" <$> TF.attribute",
                    "name": "max_stale",
                    "method": "computedMaxStale",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMaxStale",
                    "optional": false,
                    "label": "_computedMaxStale"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_ttl\" <$> TF.attribute",
                    "name": "node_ttl",
                    "method": "computedNodeTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeTtl",
                    "optional": false,
                    "label": "_computedNodeTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"only_passing\" <$> TF.attribute",
                    "name": "only_passing",
                    "method": "computedOnlyPassing",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedOnlyPassing",
                    "optional": false,
                    "label": "_computedOnlyPassing"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"recursor_timeout\" <$> TF.attribute",
                    "name": "recursor_timeout",
                    "method": "computedRecursorTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRecursorTimeout",
                    "optional": false,
                    "label": "_computedRecursorTimeout"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service_ttl\" <$> TF.attribute",
                    "name": "service_ttl",
                    "method": "computedServiceTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServiceTtl",
                    "optional": false,
                    "label": "_computedServiceTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"udp_answer_limit\" <$> TF.attribute",
                    "name": "udp_answer_limit",
                    "method": "computedUdpAnswerLimit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedUdpAnswerLimit",
                    "optional": false,
                    "label": "_computedUdpAnswerLimit"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Dns s",
            "original": "dns"
        }
    ],
    "arguments": [
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"address\" <$>",
            "name": "address",
            "method": "address",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasAddress",
            "optional": true,
            "label": "_address"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"ca_file\" <$>",
            "name": "ca_file",
            "method": "caFile",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasCaFile",
            "optional": true,
            "label": "_caFile"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"cert_file\" <$>",
            "name": "cert_file",
            "method": "certFile",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasCertFile",
            "optional": true,
            "label": "_certFile"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"datacenter\" <$>",
            "name": "datacenter",
            "method": "datacenter",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasDatacenter",
            "optional": true,
            "label": "_datacenter"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"http_auth\" <$>",
            "name": "http_auth",
            "method": "httpAuth",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasHttpAuth",
            "optional": true,
            "label": "_httpAuth"
        },
        {
            "default": "P.False",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"insecure_https\"",
            "name": "insecure_https",
            "method": "insecureHttps",
            "conflicts": [],
            "type": "P.Bool",
            "class": "HasInsecureHttps",
            "optional": true,
            "label": "_insecureHttps"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"key_file\" <$>",
            "name": "key_file",
            "method": "keyFile",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasKeyFile",
            "optional": true,
            "label": "_keyFile"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"scheme\" <$>",
            "name": "scheme",
            "method": "scheme",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasScheme",
            "optional": true,
            "label": "_scheme"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"token\" <$>",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasToken",
            "optional": true,
            "label": "_token"
        }
    ],
    "dataSources": [
        {
            "arguments": [],
            "schema": "DataSource",
            "name": "AgentConfigData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The datacenter the agent is running in"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": false,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The ID of the node the agent is running on"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_id\" <$> TF.attribute",
                    "name": "node_id",
                    "method": "computedNodeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeId",
                    "optional": false,
                    "label": "_computedNodeId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The name of the node the agent is running on"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_name\" <$> TF.attribute",
                    "name": "node_name",
                    "method": "computedNodeName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeName",
                    "optional": false,
                    "label": "_computedNodeName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The VCS revision of the build of Consul that is running"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"revision\" <$> TF.attribute",
                    "name": "revision",
                    "method": "computedRevision",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRevision",
                    "optional": false,
                    "label": "_computedRevision"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "If the agent is a server or not"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"server\" <$> TF.attribute",
                    "name": "server",
                    "method": "computedServer",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedServer",
                    "optional": false,
                    "label": "_computedServer"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The version of the build of Consul that is running"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "version",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersion",
                    "optional": false,
                    "label": "_computedVersion"
                }
            ],
            "parameters": [],
            "type": "AgentConfigData s",
            "original": "consul_agent_config"
        },
        {
            "arguments": [],
            "schema": "DataSource",
            "name": "AgentSelfData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acl_datacenter\" <$> TF.attribute",
                    "name": "acl_datacenter",
                    "method": "computedAclDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAclDatacenter",
                    "optional": false,
                    "label": "_computedAclDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acl_default_policy\" <$> TF.attribute",
                    "name": "acl_default_policy",
                    "method": "computedAclDefaultPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAclDefaultPolicy",
                    "optional": false,
                    "label": "_computedAclDefaultPolicy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acl_disabled_ttl\" <$> TF.attribute",
                    "name": "acl_disabled_ttl",
                    "method": "computedAclDisabledTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAclDisabledTtl",
                    "optional": false,
                    "label": "_computedAclDisabledTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acl_down_policy\" <$> TF.attribute",
                    "name": "acl_down_policy",
                    "method": "computedAclDownPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAclDownPolicy",
                    "optional": false,
                    "label": "_computedAclDownPolicy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acl_enforce_0_8_semantics\" <$> TF.attribute",
                    "name": "acl_enforce_0_8_semantics",
                    "method": "computedAclEnforce08Semantics",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAclEnforce08Semantics",
                    "optional": false,
                    "label": "_computedAclEnforce08Semantics"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acl_ttl\" <$> TF.attribute",
                    "name": "acl_ttl",
                    "method": "computedAclTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAclTtl",
                    "optional": false,
                    "label": "_computedAclTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"addresses\" <$> TF.attribute",
                    "name": "addresses",
                    "method": "computedAddresses",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Addresses s))",
                    "class": "HasComputedAddresses",
                    "optional": false,
                    "label": "_computedAddresses"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advertise_addr\" <$> TF.attribute",
                    "name": "advertise_addr",
                    "method": "computedAdvertiseAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdvertiseAddr",
                    "optional": false,
                    "label": "_computedAdvertiseAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advertise_addr_wan\" <$> TF.attribute",
                    "name": "advertise_addr_wan",
                    "method": "computedAdvertiseAddrWan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdvertiseAddrWan",
                    "optional": false,
                    "label": "_computedAdvertiseAddrWan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advertise_addrs\" <$> TF.attribute",
                    "name": "advertise_addrs",
                    "method": "computedAdvertiseAddrs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (AdvertiseAddrs s))",
                    "class": "HasComputedAdvertiseAddrs",
                    "optional": false,
                    "label": "_computedAdvertiseAddrs"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"atlas_join\" <$> TF.attribute",
                    "name": "atlas_join",
                    "method": "computedAtlasJoin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAtlasJoin",
                    "optional": false,
                    "label": "_computedAtlasJoin"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bind_addr\" <$> TF.attribute",
                    "name": "bind_addr",
                    "method": "computedBindAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBindAddr",
                    "optional": false,
                    "label": "_computedBindAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bootstrap_expect\" <$> TF.attribute",
                    "name": "bootstrap_expect",
                    "method": "computedBootstrapExpect",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedBootstrapExpect",
                    "optional": false,
                    "label": "_computedBootstrapExpect"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bootstrap_mode\" <$> TF.attribute",
                    "name": "bootstrap_mode",
                    "method": "computedBootstrapMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedBootstrapMode",
                    "optional": false,
                    "label": "_computedBootstrapMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_deregister_interval_min\" <$> TF.attribute",
                    "name": "check_deregister_interval_min",
                    "method": "computedCheckDeregisterIntervalMin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCheckDeregisterIntervalMin",
                    "optional": false,
                    "label": "_computedCheckDeregisterIntervalMin"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_reap_interval\" <$> TF.attribute",
                    "name": "check_reap_interval",
                    "method": "computedCheckReapInterval",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCheckReapInterval",
                    "optional": false,
                    "label": "_computedCheckReapInterval"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_update_interval\" <$> TF.attribute",
                    "name": "check_update_interval",
                    "method": "computedCheckUpdateInterval",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCheckUpdateInterval",
                    "optional": false,
                    "label": "_computedCheckUpdateInterval"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"client_addr\" <$> TF.attribute",
                    "name": "client_addr",
                    "method": "computedClientAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClientAddr",
                    "optional": false,
                    "label": "_computedClientAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"data_dir\" <$> TF.attribute",
                    "name": "data_dir",
                    "method": "computedDataDir",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDataDir",
                    "optional": false,
                    "label": "_computedDataDir"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": false,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dev_mode\" <$> TF.attribute",
                    "name": "dev_mode",
                    "method": "computedDevMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDevMode",
                    "optional": false,
                    "label": "_computedDevMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns\" <$> TF.attribute",
                    "name": "dns",
                    "method": "computedDns",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Dns s))",
                    "class": "HasComputedDns",
                    "optional": false,
                    "label": "_computedDns"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns_recursors\" <$> TF.attribute",
                    "name": "dns_recursors",
                    "method": "computedDnsRecursors",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedDnsRecursors",
                    "optional": false,
                    "label": "_computedDnsRecursors"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "computedDomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomain",
                    "optional": false,
                    "label": "_computedDomain"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_anonymous_signature\" <$> TF.attribute",
                    "name": "enable_anonymous_signature",
                    "method": "computedEnableAnonymousSignature",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableAnonymousSignature",
                    "optional": false,
                    "label": "_computedEnableAnonymousSignature"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_coordinates\" <$> TF.attribute",
                    "name": "enable_coordinates",
                    "method": "computedEnableCoordinates",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableCoordinates",
                    "optional": false,
                    "label": "_computedEnableCoordinates"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_debug\" <$> TF.attribute",
                    "name": "enable_debug",
                    "method": "computedEnableDebug",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableDebug",
                    "optional": false,
                    "label": "_computedEnableDebug"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_remote_exec\" <$> TF.attribute",
                    "name": "enable_remote_exec",
                    "method": "computedEnableRemoteExec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableRemoteExec",
                    "optional": false,
                    "label": "_computedEnableRemoteExec"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_syslog\" <$> TF.attribute",
                    "name": "enable_syslog",
                    "method": "computedEnableSyslog",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableSyslog",
                    "optional": false,
                    "label": "_computedEnableSyslog"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_ui\" <$> TF.attribute",
                    "name": "enable_ui",
                    "method": "computedEnableUi",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableUi",
                    "optional": false,
                    "label": "_computedEnableUi"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_update_check\" <$> TF.attribute",
                    "name": "enable_update_check",
                    "method": "computedEnableUpdateCheck",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableUpdateCheck",
                    "optional": false,
                    "label": "_computedEnableUpdateCheck"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"leave_on_int\" <$> TF.attribute",
                    "name": "leave_on_int",
                    "method": "computedLeaveOnInt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedLeaveOnInt",
                    "optional": false,
                    "label": "_computedLeaveOnInt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"leave_on_term\" <$> TF.attribute",
                    "name": "leave_on_term",
                    "method": "computedLeaveOnTerm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedLeaveOnTerm",
                    "optional": false,
                    "label": "_computedLeaveOnTerm"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"log_level\" <$> TF.attribute",
                    "name": "log_level",
                    "method": "computedLogLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLogLevel",
                    "optional": false,
                    "label": "_computedLogLevel"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "optional": false,
                    "label": "_computedName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"performance\" <$> TF.attribute",
                    "name": "performance",
                    "method": "computedPerformance",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Performance s))",
                    "class": "HasComputedPerformance",
                    "optional": false,
                    "label": "_computedPerformance"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pid_file\" <$> TF.attribute",
                    "name": "pid_file",
                    "method": "computedPidFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPidFile",
                    "optional": false,
                    "label": "_computedPidFile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ports\" <$> TF.attribute",
                    "name": "ports",
                    "method": "computedPorts",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Ports s))",
                    "class": "HasComputedPorts",
                    "optional": false,
                    "label": "_computedPorts"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol_version\" <$> TF.attribute",
                    "name": "protocol_version",
                    "method": "computedProtocolVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedProtocolVersion",
                    "optional": false,
                    "label": "_computedProtocolVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"reconnect_timeout_lan\" <$> TF.attribute",
                    "name": "reconnect_timeout_lan",
                    "method": "computedReconnectTimeoutLan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedReconnectTimeoutLan",
                    "optional": false,
                    "label": "_computedReconnectTimeoutLan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"reconnect_timeout_wan\" <$> TF.attribute",
                    "name": "reconnect_timeout_wan",
                    "method": "computedReconnectTimeoutWan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedReconnectTimeoutWan",
                    "optional": false,
                    "label": "_computedReconnectTimeoutWan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rejoin_after_leave\" <$> TF.attribute",
                    "name": "rejoin_after_leave",
                    "method": "computedRejoinAfterLeave",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedRejoinAfterLeave",
                    "optional": false,
                    "label": "_computedRejoinAfterLeave"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_join\" <$> TF.attribute",
                    "name": "retry_join",
                    "method": "computedRetryJoin",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedRetryJoin",
                    "optional": false,
                    "label": "_computedRetryJoin"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_join_ec2\" <$> TF.attribute",
                    "name": "retry_join_ec2",
                    "method": "computedRetryJoinEc2",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (RetryJoinEc2 s))",
                    "class": "HasComputedRetryJoinEc2",
                    "optional": false,
                    "label": "_computedRetryJoinEc2"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_join_gce\" <$> TF.attribute",
                    "name": "retry_join_gce",
                    "method": "computedRetryJoinGce",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (RetryJoinGce s))",
                    "class": "HasComputedRetryJoinGce",
                    "optional": false,
                    "label": "_computedRetryJoinGce"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_join_wan\" <$> TF.attribute",
                    "name": "retry_join_wan",
                    "method": "computedRetryJoinWan",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedRetryJoinWan",
                    "optional": false,
                    "label": "_computedRetryJoinWan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_max_attempts\" <$> TF.attribute",
                    "name": "retry_max_attempts",
                    "method": "computedRetryMaxAttempts",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedRetryMaxAttempts",
                    "optional": false,
                    "label": "_computedRetryMaxAttempts"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_max_attempts_wan\" <$> TF.attribute",
                    "name": "retry_max_attempts_wan",
                    "method": "computedRetryMaxAttemptsWan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedRetryMaxAttemptsWan",
                    "optional": false,
                    "label": "_computedRetryMaxAttemptsWan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serf_lan_bind_addr\" <$> TF.attribute",
                    "name": "serf_lan_bind_addr",
                    "method": "computedSerfLanBindAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSerfLanBindAddr",
                    "optional": false,
                    "label": "_computedSerfLanBindAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serf_wan_bind_addr\" <$> TF.attribute",
                    "name": "serf_wan_bind_addr",
                    "method": "computedSerfWanBindAddr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSerfWanBindAddr",
                    "optional": false,
                    "label": "_computedSerfWanBindAddr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_mode\" <$> TF.attribute",
                    "name": "server_mode",
                    "method": "computedServerMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedServerMode",
                    "optional": false,
                    "label": "_computedServerMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_name\" <$> TF.attribute",
                    "name": "server_name",
                    "method": "computedServerName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServerName",
                    "optional": false,
                    "label": "_computedServerName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"session_ttl_min\" <$> TF.attribute",
                    "name": "session_ttl_min",
                    "method": "computedSessionTtlMin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSessionTtlMin",
                    "optional": false,
                    "label": "_computedSessionTtlMin"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_join\" <$> TF.attribute",
                    "name": "start_join",
                    "method": "computedStartJoin",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedStartJoin",
                    "optional": false,
                    "label": "_computedStartJoin"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_join_wan\" <$> TF.attribute",
                    "name": "start_join_wan",
                    "method": "computedStartJoinWan",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedStartJoinWan",
                    "optional": false,
                    "label": "_computedStartJoinWan"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"syslog_facility\" <$> TF.attribute",
                    "name": "syslog_facility",
                    "method": "computedSyslogFacility",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSyslogFacility",
                    "optional": false,
                    "label": "_computedSyslogFacility"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tagged_addresses\" <$> TF.attribute",
                    "name": "tagged_addresses",
                    "method": "computedTaggedAddresses",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TaggedAddresses s))",
                    "class": "HasComputedTaggedAddresses",
                    "optional": false,
                    "label": "_computedTaggedAddresses"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"telemetry\" <$> TF.attribute",
                    "name": "telemetry",
                    "method": "computedTelemetry",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Telemetry s))",
                    "class": "HasComputedTelemetry",
                    "optional": false,
                    "label": "_computedTelemetry"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_ca_file\" <$> TF.attribute",
                    "name": "tls_ca_file",
                    "method": "computedTlsCaFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsCaFile",
                    "optional": false,
                    "label": "_computedTlsCaFile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_cert_file\" <$> TF.attribute",
                    "name": "tls_cert_file",
                    "method": "computedTlsCertFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsCertFile",
                    "optional": false,
                    "label": "_computedTlsCertFile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_key_file\" <$> TF.attribute",
                    "name": "tls_key_file",
                    "method": "computedTlsKeyFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsKeyFile",
                    "optional": false,
                    "label": "_computedTlsKeyFile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_min_version\" <$> TF.attribute",
                    "name": "tls_min_version",
                    "method": "computedTlsMinVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTlsMinVersion",
                    "optional": false,
                    "label": "_computedTlsMinVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_verify_incoming\" <$> TF.attribute",
                    "name": "tls_verify_incoming",
                    "method": "computedTlsVerifyIncoming",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedTlsVerifyIncoming",
                    "optional": false,
                    "label": "_computedTlsVerifyIncoming"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_verify_outgoing\" <$> TF.attribute",
                    "name": "tls_verify_outgoing",
                    "method": "computedTlsVerifyOutgoing",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedTlsVerifyOutgoing",
                    "optional": false,
                    "label": "_computedTlsVerifyOutgoing"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_verify_server_hostname\" <$> TF.attribute",
                    "name": "tls_verify_server_hostname",
                    "method": "computedTlsVerifyServerHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedTlsVerifyServerHostname",
                    "optional": false,
                    "label": "_computedTlsVerifyServerHostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"translate_wan_addrs\" <$> TF.attribute",
                    "name": "translate_wan_addrs",
                    "method": "computedTranslateWanAddrs",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedTranslateWanAddrs",
                    "optional": false,
                    "label": "_computedTranslateWanAddrs"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ui_dir\" <$> TF.attribute",
                    "name": "ui_dir",
                    "method": "computedUiDir",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUiDir",
                    "optional": false,
                    "label": "_computedUiDir"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unix_sockets\" <$> TF.attribute",
                    "name": "unix_sockets",
                    "method": "computedUnixSockets",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (UnixSockets s))",
                    "class": "HasComputedUnixSockets",
                    "optional": false,
                    "label": "_computedUnixSockets"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "version",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersion",
                    "optional": false,
                    "label": "_computedVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version_prerelease\" <$> TF.attribute",
                    "name": "version_prerelease",
                    "method": "computedVersionPrerelease",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersionPrerelease",
                    "optional": false,
                    "label": "_computedVersionPrerelease"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version_revision\" <$> TF.attribute",
                    "name": "version_revision",
                    "method": "computedVersionRevision",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersionRevision",
                    "optional": false,
                    "label": "_computedVersionRevision"
                }
            ],
            "parameters": [],
            "type": "AgentSelfData s",
            "original": "consul_agent_self"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_options\" <$> TF.attribute",
                    "name": "query_options",
                    "method": "queryOptions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (QueryOptions s)]",
                    "class": "HasQueryOptions",
                    "optional": true,
                    "label": "_queryOptions"
                }
            ],
            "schema": "DataSource",
            "name": "CatalogNodesData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": false,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_ids\" <$> TF.attribute",
                    "name": "node_ids",
                    "method": "computedNodeIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNodeIds",
                    "optional": false,
                    "label": "_computedNodeIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_names\" <$> TF.attribute",
                    "name": "node_names",
                    "method": "computedNodeNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNodeNames",
                    "optional": false,
                    "label": "_computedNodeNames"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"nodes\" <$> TF.attribute",
                    "name": "nodes",
                    "method": "computedNodes",
                    "conflicts": [],
                    "type": "TF.Attr s [Nodes s]",
                    "class": "HasComputedNodes",
                    "optional": false,
                    "label": "_computedNodes"
                }
            ],
            "parameters": [],
            "type": "CatalogNodesData s",
            "original": "consul_catalog_nodes"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "datacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatacenter",
                    "optional": true,
                    "label": "_datacenter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_options\" <$> TF.attribute",
                    "name": "query_options",
                    "method": "queryOptions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (QueryOptions s)]",
                    "class": "HasQueryOptions",
                    "optional": true,
                    "label": "_queryOptions"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tag\" <$> TF.attribute",
                    "name": "tag",
                    "method": "tag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTag",
                    "optional": true,
                    "label": "_tag"
                }
            ],
            "schema": "DataSource",
            "name": "CatalogServiceData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "service",
                    "method": "computedService",
                    "conflicts": [],
                    "type": "TF.Attr s [Service s]",
                    "class": "HasComputedService",
                    "optional": false,
                    "label": "_computedService"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "CatalogServiceData s",
            "original": "consul_catalog_service"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_options\" <$> TF.attribute",
                    "name": "query_options",
                    "method": "queryOptions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (QueryOptions s)]",
                    "class": "HasQueryOptions",
                    "optional": true,
                    "label": "_queryOptions"
                }
            ],
            "schema": "DataSource",
            "name": "CatalogServicesData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": false,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"names\" <$> TF.attribute",
                    "name": "names",
                    "method": "computedNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNames",
                    "optional": false,
                    "label": "_computedNames"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "services",
                    "method": "computedServices",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Services s))",
                    "class": "HasComputedServices",
                    "optional": false,
                    "label": "_computedServices"
                }
            ],
            "parameters": [],
            "type": "CatalogServicesData s",
            "original": "consul_catalog_services"
        },
        {
            "arguments": [
                {
                    "default": "_pathPrefix",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path_prefix\" <$> TF.attribute",
                    "name": "path_prefix",
                    "method": "pathPrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPathPrefix",
                    "optional": false,
                    "label": "_pathPrefix"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subkey\" <$> TF.attribute",
                    "name": "subkey",
                    "method": "subkey",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Subkey s)]",
                    "class": "HasSubkey",
                    "optional": true,
                    "label": "_subkey"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "schema": "DataSource",
            "name": "KeyPrefixData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": true,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subkeys\" <$> TF.attribute",
                    "name": "subkeys",
                    "method": "computedSubkeys",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedSubkeys",
                    "optional": false,
                    "label": "_computedSubkeys"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"var\" <$> TF.attribute",
                    "name": "var",
                    "method": "computedVar",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedVar",
                    "optional": false,
                    "label": "_computedVar"
                }
            ],
            "parameters": [
                {
                    "default": "_pathPrefix",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path_prefix\" <$> TF.attribute",
                    "name": "path_prefix",
                    "method": "pathPrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPathPrefix",
                    "optional": false,
                    "label": "_pathPrefix"
                }
            ],
            "type": "KeyPrefixData s",
            "original": "consul_key_prefix"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Key s)]",
                    "class": "HasKey",
                    "optional": true,
                    "label": "_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "schema": "DataSource",
            "name": "KeysData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": true,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"var\" <$> TF.attribute",
                    "name": "var",
                    "method": "computedVar",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedVar",
                    "optional": false,
                    "label": "_computedVar"
                }
            ],
            "parameters": [],
            "type": "KeysData s",
            "original": "consul_keys"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_options\" <$> TF.attribute",
                    "name": "query_options",
                    "method": "queryOptions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (QueryOptions s)]",
                    "class": "HasQueryOptions",
                    "optional": true,
                    "label": "_queryOptions"
                }
            ],
            "schema": "DataSource",
            "name": "NodesData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": false,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_ids\" <$> TF.attribute",
                    "name": "node_ids",
                    "method": "computedNodeIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNodeIds",
                    "optional": false,
                    "label": "_computedNodeIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_names\" <$> TF.attribute",
                    "name": "node_names",
                    "method": "computedNodeNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNodeNames",
                    "optional": false,
                    "label": "_computedNodeNames"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"nodes\" <$> TF.attribute",
                    "name": "nodes",
                    "method": "computedNodes",
                    "conflicts": [],
                    "type": "TF.Attr s [Nodes s]",
                    "class": "HasComputedNodes",
                    "optional": false,
                    "label": "_computedNodes"
                }
            ],
            "parameters": [],
            "type": "NodesData s",
            "original": "consul_nodes"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "datacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatacenter",
                    "optional": true,
                    "label": "_datacenter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_options\" <$> TF.attribute",
                    "name": "query_options",
                    "method": "queryOptions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (QueryOptions s)]",
                    "class": "HasQueryOptions",
                    "optional": true,
                    "label": "_queryOptions"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tag\" <$> TF.attribute",
                    "name": "tag",
                    "method": "tag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTag",
                    "optional": true,
                    "label": "_tag"
                }
            ],
            "schema": "DataSource",
            "name": "ServiceData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "service",
                    "method": "computedService",
                    "conflicts": [],
                    "type": "TF.Attr s [Service s]",
                    "class": "HasComputedService",
                    "optional": false,
                    "label": "_computedService"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ServiceData s",
            "original": "consul_service"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_options\" <$> TF.attribute",
                    "name": "query_options",
                    "method": "queryOptions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (QueryOptions s)]",
                    "class": "HasQueryOptions",
                    "optional": true,
                    "label": "_queryOptions"
                }
            ],
            "schema": "DataSource",
            "name": "ServicesData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": false,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"names\" <$> TF.attribute",
                    "name": "names",
                    "method": "computedNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNames",
                    "optional": false,
                    "label": "_computedNames"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "services",
                    "method": "computedServices",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (Services s))",
                    "class": "HasComputedServices",
                    "optional": false,
                    "label": "_computedServices"
                }
            ],
            "parameters": [],
            "type": "ServicesData s",
            "original": "consul_services"
        }
    ],
    "resources": [
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": true,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "optional": true,
                    "label": "_tags"
                }
            ],
            "schema": "Resource",
            "name": "AgentServiceResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "optional": true,
                    "label": "_computedAddress"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "AgentServiceResource s",
            "original": "consul_agent_service"
        },
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_node",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"node\" <$> TF.attribute",
                    "name": "node",
                    "method": "node",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNode",
                    "optional": false,
                    "label": "_node"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Service s)]",
                    "class": "HasService",
                    "optional": true,
                    "label": "_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "schema": "Resource",
            "name": "CatalogEntryResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": true,
                    "label": "_computedDatacenter"
                }
            ],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_node",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"node\" <$> TF.attribute",
                    "name": "node",
                    "method": "node",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNode",
                    "optional": false,
                    "label": "_node"
                }
            ],
            "type": "CatalogEntryResource s",
            "original": "consul_catalog_entry"
        },
        {
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_destinationName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_name\" <$> TF.attribute",
                    "name": "destination_name",
                    "method": "destinationName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationName",
                    "optional": false,
                    "label": "_destinationName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"meta\" <$> TF.attribute",
                    "name": "meta",
                    "method": "meta",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMeta",
                    "optional": true,
                    "label": "_meta"
                },
                {
                    "default": "_sourceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_name\" <$> TF.attribute",
                    "name": "source_name",
                    "method": "sourceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceName",
                    "optional": false,
                    "label": "_sourceName"
                }
            ],
            "schema": "Resource",
            "name": "IntentionResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "_destinationName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_name\" <$> TF.attribute",
                    "name": "destination_name",
                    "method": "destinationName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationName",
                    "optional": false,
                    "label": "_destinationName"
                },
                {
                    "default": "_sourceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_name\" <$> TF.attribute",
                    "name": "source_name",
                    "method": "sourceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceName",
                    "optional": false,
                    "label": "_sourceName"
                }
            ],
            "type": "IntentionResource s",
            "original": "consul_intention"
        },
        {
            "arguments": [
                {
                    "default": "_pathPrefix",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"path_prefix\" <$> TF.attribute",
                    "name": "path_prefix",
                    "method": "pathPrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPathPrefix",
                    "optional": false,
                    "label": "_pathPrefix"
                },
                {
                    "default": "_subkeys",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subkeys\" <$> TF.attribute",
                    "name": "subkeys",
                    "method": "subkeys",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasSubkeys",
                    "optional": false,
                    "label": "_subkeys"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "schema": "Resource",
            "name": "KeyPrefixResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": true,
                    "label": "_computedDatacenter"
                }
            ],
            "parameters": [
                {
                    "default": "_pathPrefix",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"path_prefix\" <$> TF.attribute",
                    "name": "path_prefix",
                    "method": "pathPrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPathPrefix",
                    "optional": false,
                    "label": "_pathPrefix"
                },
                {
                    "default": "_subkeys",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subkeys\" <$> TF.attribute",
                    "name": "subkeys",
                    "method": "subkeys",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasSubkeys",
                    "optional": false,
                    "label": "_subkeys"
                }
            ],
            "type": "KeyPrefixResource s",
            "original": "consul_key_prefix"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Key s)]",
                    "class": "HasKey",
                    "optional": true,
                    "label": "_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "schema": "Resource",
            "name": "KeysResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": true,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"var\" <$> TF.attribute",
                    "name": "var",
                    "method": "computedVar",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedVar",
                    "optional": false,
                    "label": "_computedVar"
                }
            ],
            "parameters": [],
            "type": "KeysResource s",
            "original": "consul_keys"
        },
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "schema": "Resource",
            "name": "NodeResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": true,
                    "label": "_computedDatacenter"
                }
            ],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "NodeResource s",
            "original": "consul_node"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "datacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatacenter",
                    "optional": true,
                    "label": "_datacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns\" <$> TF.attribute",
                    "name": "dns",
                    "method": "dns",
                    "conflicts": [],
                    "type": "TF.Attr s [Dns s]",
                    "class": "HasDns",
                    "optional": true,
                    "label": "_dns"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"failover\" <$> TF.attribute",
                    "name": "failover",
                    "method": "failover",
                    "conflicts": [],
                    "type": "TF.Attr s [Failover s]",
                    "class": "HasFailover",
                    "optional": true,
                    "label": "_failover"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"near\" <$> TF.attribute",
                    "name": "near",
                    "method": "near",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNear",
                    "optional": true,
                    "label": "_near"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"only_passing\" <$> TF.attribute",
                    "name": "only_passing",
                    "method": "onlyPassing",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasOnlyPassing",
                    "optional": true,
                    "label": "_onlyPassing"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "optional": false,
                    "label": "_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"session\" <$> TF.attribute",
                    "name": "session",
                    "method": "session",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSession",
                    "optional": true,
                    "label": "_session"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"stored_token\" <$> TF.attribute",
                    "name": "stored_token",
                    "method": "storedToken",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStoredToken",
                    "optional": true,
                    "label": "_storedToken"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasTags",
                    "optional": true,
                    "label": "_tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"template\" <$> TF.attribute",
                    "name": "template",
                    "method": "template",
                    "conflicts": [],
                    "type": "TF.Attr s [Template s]",
                    "class": "HasTemplate",
                    "optional": true,
                    "label": "_template"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "schema": "Resource",
            "name": "PreparedQueryResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "optional": false,
                    "label": "_service"
                }
            ],
            "type": "PreparedQueryResource s",
            "original": "consul_prepared_query"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_node",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"node\" <$> TF.attribute",
                    "name": "node",
                    "method": "node",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNode",
                    "optional": false,
                    "label": "_node"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": true,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "optional": true,
                    "label": "_tags"
                }
            ],
            "schema": "Resource",
            "name": "ServiceResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "optional": true,
                    "label": "_computedAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datacenter\" <$> TF.attribute",
                    "name": "datacenter",
                    "method": "computedDatacenter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDatacenter",
                    "optional": true,
                    "label": "_computedDatacenter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_id\" <$> TF.attribute",
                    "name": "service_id",
                    "method": "computedServiceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServiceId",
                    "optional": true,
                    "label": "_computedServiceId"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_node",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"node\" <$> TF.attribute",
                    "name": "node",
                    "method": "node",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNode",
                    "optional": false,
                    "label": "_node"
                }
            ],
            "type": "ServiceResource s",
            "original": "consul_service"
        }
    ],
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "Consul",
    "parameters": [],
    "package": "terrafomo-consul",
    "type": "Provider",
    "original": "consul"
}