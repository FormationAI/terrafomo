{
    "settings": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"associate_public_ip_address\" <$> TF.attribute",
                    "name": "associate_public_ip_address",
                    "method": "associatePublicIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAssociatePublicIpAddress",
                    "optional": true,
                    "label": "_associatePublicIpAddress"
                },
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "_deviceIndex",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device_index\" <$> TF.attribute",
                    "name": "device_index",
                    "method": "deviceIndex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeviceIndex",
                    "optional": false,
                    "label": "_deviceIndex"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_interface_id\" <$> TF.attribute",
                    "name": "network_interface_id",
                    "method": "networkInterfaceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetworkInterfaceId",
                    "optional": true,
                    "label": "_networkInterfaceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_ip_address\" <$> TF.attribute",
                    "name": "private_ip_address",
                    "method": "privateIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPrivateIpAddress",
                    "optional": true,
                    "label": "_privateIpAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"secondary_private_ip_address_count\" <$> TF.attribute",
                    "name": "secondary_private_ip_address_count",
                    "method": "secondaryPrivateIpAddressCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecondaryPrivateIpAddressCount",
                    "optional": true,
                    "label": "_secondaryPrivateIpAddressCount"
                }
            ],
            "name": "NetworkInterface",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delete_on_termination\" <$> TF.attribute",
                    "name": "delete_on_termination",
                    "method": "computedDeleteOnTermination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDeleteOnTermination",
                    "optional": true,
                    "label": "_computedDeleteOnTermination"
                }
            ],
            "parameters": [
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "_deviceIndex",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device_index\" <$> TF.attribute",
                    "name": "device_index",
                    "method": "deviceIndex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeviceIndex",
                    "optional": false,
                    "label": "_deviceIndex"
                }
            ],
            "hashable": false,
            "type": "NetworkInterface s",
            "original": "network_interface"
        },
        {
            "arguments": [
                {
                    "default": "_cleanupOnFailure",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cleanup_on_failure\" <$> TF.attribute",
                    "name": "cleanup_on_failure",
                    "method": "cleanupOnFailure",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasCleanupOnFailure",
                    "optional": false,
                    "label": "_cleanupOnFailure"
                },
                {
                    "default": "_deploymentGroups",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deployment_groups\" <$> TF.attribute",
                    "name": "deployment_groups",
                    "method": "deploymentGroups",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (DeploymentGroups s)]",
                    "class": "HasDeploymentGroups",
                    "optional": false,
                    "label": "_deploymentGroups"
                },
                {
                    "default": "_terminateInstanceOnFailure",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"terminate_instance_on_failure\" <$> TF.attribute",
                    "name": "terminate_instance_on_failure",
                    "method": "terminateInstanceOnFailure",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasTerminateInstanceOnFailure",
                    "optional": false,
                    "label": "_terminateInstanceOnFailure"
                }
            ],
            "name": "IntegrationCodedeploy",
            "attributes": [],
            "parameters": [
                {
                    "default": "_cleanupOnFailure",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cleanup_on_failure\" <$> TF.attribute",
                    "name": "cleanup_on_failure",
                    "method": "cleanupOnFailure",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasCleanupOnFailure",
                    "optional": false,
                    "label": "_cleanupOnFailure"
                },
                {
                    "default": "_deploymentGroups",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deployment_groups\" <$> TF.attribute",
                    "name": "deployment_groups",
                    "method": "deploymentGroups",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (DeploymentGroups s)]",
                    "class": "HasDeploymentGroups",
                    "optional": false,
                    "label": "_deploymentGroups"
                },
                {
                    "default": "_terminateInstanceOnFailure",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"terminate_instance_on_failure\" <$> TF.attribute",
                    "name": "terminate_instance_on_failure",
                    "method": "terminateInstanceOnFailure",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasTerminateInstanceOnFailure",
                    "optional": false,
                    "label": "_terminateInstanceOnFailure"
                }
            ],
            "hashable": false,
            "type": "IntegrationCodedeploy s",
            "original": "integration_codedeploy"
        },
        {
            "arguments": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "name": "AutoscaleAttributes",
            "attributes": [],
            "parameters": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "hashable": false,
            "type": "AutoscaleAttributes s",
            "original": "autoscale_attributes"
        },
        {
            "arguments": [
                {
                    "default": "_deviceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device_name\" <$> TF.attribute",
                    "name": "device_name",
                    "method": "deviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeviceName",
                    "optional": false,
                    "label": "_deviceName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"iops\" <$> TF.attribute",
                    "name": "iops",
                    "method": "iops",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasIops",
                    "optional": true,
                    "label": "_iops"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"kms_key_id\" <$> TF.attribute",
                    "name": "kms_key_id",
                    "method": "kmsKeyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKmsKeyId",
                    "optional": true,
                    "label": "_kmsKeyId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"snapshot_id\" <$> TF.attribute",
                    "name": "snapshot_id",
                    "method": "snapshotId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSnapshotId",
                    "optional": true,
                    "label": "_snapshotId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"volume_size\" <$> TF.attribute",
                    "name": "volume_size",
                    "method": "volumeSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVolumeSize",
                    "optional": true,
                    "label": "_volumeSize"
                }
            ],
            "name": "EbsBlockDevice",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delete_on_termination\" <$> TF.attribute",
                    "name": "delete_on_termination",
                    "method": "computedDeleteOnTermination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDeleteOnTermination",
                    "optional": true,
                    "label": "_computedDeleteOnTermination"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"encrypted\" <$> TF.attribute",
                    "name": "encrypted",
                    "method": "computedEncrypted",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEncrypted",
                    "optional": true,
                    "label": "_computedEncrypted"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"volume_type\" <$> TF.attribute",
                    "name": "volume_type",
                    "method": "computedVolumeType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVolumeType",
                    "optional": true,
                    "label": "_computedVolumeType"
                }
            ],
            "parameters": [
                {
                    "default": "_deviceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device_name\" <$> TF.attribute",
                    "name": "device_name",
                    "method": "deviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeviceName",
                    "optional": false,
                    "label": "_deviceName"
                }
            ],
            "hashable": false,
            "type": "EbsBlockDevice s",
            "original": "ebs_block_device"
        },
        {
            "arguments": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "name": "AutoscaleLabels",
            "attributes": [],
            "parameters": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "hashable": false,
            "type": "AutoscaleLabels s",
            "original": "autoscale_labels"
        },
        {
            "arguments": [
                {
                    "default": "_batchSizePercentage",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"batch_size_percentage\" <$> TF.attribute",
                    "name": "batch_size_percentage",
                    "method": "batchSizePercentage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasBatchSizePercentage",
                    "optional": false,
                    "label": "_batchSizePercentage"
                },
                {
                    "default": "TF.value (-1)",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"grace_period\" <$> TF.attribute",
                    "name": "grace_period",
                    "method": "gracePeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasGracePeriod",
                    "optional": true,
                    "label": "_gracePeriod"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_check_type\" <$> TF.attribute",
                    "name": "health_check_type",
                    "method": "healthCheckType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthCheckType",
                    "optional": true,
                    "label": "_healthCheckType"
                }
            ],
            "name": "RollConfig",
            "attributes": [],
            "parameters": [
                {
                    "default": "_batchSizePercentage",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"batch_size_percentage\" <$> TF.attribute",
                    "name": "batch_size_percentage",
                    "method": "batchSizePercentage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasBatchSizePercentage",
                    "optional": false,
                    "label": "_batchSizePercentage"
                }
            ],
            "hashable": false,
            "type": "RollConfig s",
            "original": "roll_config"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acl_token\" <$> TF.attribute",
                    "name": "acl_token",
                    "method": "aclToken",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAclToken",
                    "optional": true,
                    "label": "_aclToken"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_constraints\" <$> TF.attribute",
                    "name": "autoscale_constraints",
                    "method": "autoscaleConstraints",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AutoscaleConstraints s)]",
                    "class": "HasAutoscaleConstraints",
                    "optional": true,
                    "label": "_autoscaleConstraints"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_cooldown\" <$> TF.attribute",
                    "name": "autoscale_cooldown",
                    "method": "autoscaleCooldown",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAutoscaleCooldown",
                    "optional": true,
                    "label": "_autoscaleCooldown"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_down\" <$> TF.attribute",
                    "name": "autoscale_down",
                    "method": "autoscaleDown",
                    "conflicts": [],
                    "type": "TF.Attr s [AutoscaleDown s]",
                    "class": "HasAutoscaleDown",
                    "optional": true,
                    "label": "_autoscaleDown"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_headroom\" <$> TF.attribute",
                    "name": "autoscale_headroom",
                    "method": "autoscaleHeadroom",
                    "conflicts": [],
                    "type": "TF.Attr s [AutoscaleHeadroom s]",
                    "class": "HasAutoscaleHeadroom",
                    "optional": true,
                    "label": "_autoscaleHeadroom"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_is_enabled\" <$> TF.attribute",
                    "name": "autoscale_is_enabled",
                    "method": "autoscaleIsEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoscaleIsEnabled",
                    "optional": true,
                    "label": "_autoscaleIsEnabled"
                },
                {
                    "default": "_masterHost",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_host\" <$> TF.attribute",
                    "name": "master_host",
                    "method": "masterHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMasterHost",
                    "optional": false,
                    "label": "_masterHost"
                },
                {
                    "default": "_masterPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_port\" <$> TF.attribute",
                    "name": "master_port",
                    "method": "masterPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMasterPort",
                    "optional": false,
                    "label": "_masterPort"
                }
            ],
            "name": "IntegrationNomad",
            "attributes": [],
            "parameters": [
                {
                    "default": "_masterHost",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_host\" <$> TF.attribute",
                    "name": "master_host",
                    "method": "masterHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMasterHost",
                    "optional": false,
                    "label": "_masterHost"
                },
                {
                    "default": "_masterPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_port\" <$> TF.attribute",
                    "name": "master_port",
                    "method": "masterPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMasterPort",
                    "optional": false,
                    "label": "_masterPort"
                }
            ],
            "hashable": false,
            "type": "IntegrationNomad s",
            "original": "integration_nomad"
        },
        {
            "arguments": [
                {
                    "default": "_accessKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"access_key\" <$> TF.attribute",
                    "name": "access_key",
                    "method": "accessKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAccessKey",
                    "optional": false,
                    "label": "_accessKey"
                },
                {
                    "default": "_masterHost",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_host\" <$> TF.attribute",
                    "name": "master_host",
                    "method": "masterHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMasterHost",
                    "optional": false,
                    "label": "_masterHost"
                },
                {
                    "default": "_secretKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"secret_key\" <$> TF.attribute",
                    "name": "secret_key",
                    "method": "secretKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecretKey",
                    "optional": false,
                    "label": "_secretKey"
                }
            ],
            "name": "IntegrationRancher",
            "attributes": [],
            "parameters": [
                {
                    "default": "_accessKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"access_key\" <$> TF.attribute",
                    "name": "access_key",
                    "method": "accessKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAccessKey",
                    "optional": false,
                    "label": "_accessKey"
                },
                {
                    "default": "_masterHost",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_host\" <$> TF.attribute",
                    "name": "master_host",
                    "method": "masterHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMasterHost",
                    "optional": false,
                    "label": "_masterHost"
                },
                {
                    "default": "_secretKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"secret_key\" <$> TF.attribute",
                    "name": "secret_key",
                    "method": "secretKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecretKey",
                    "optional": false,
                    "label": "_secretKey"
                }
            ],
            "hashable": false,
            "type": "IntegrationRancher s",
            "original": "integration_rancher"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action_type\" <$> TF.attribute",
                    "name": "action_type",
                    "method": "actionType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasActionType",
                    "optional": true,
                    "label": "_actionType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"adjustment\" <$> TF.attribute",
                    "name": "adjustment",
                    "method": "adjustment",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAdjustment",
                    "optional": true,
                    "label": "_adjustment"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dimensions\" <$> TF.attribute",
                    "name": "dimensions",
                    "method": "dimensions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasDimensions",
                    "optional": true,
                    "label": "_dimensions"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_target_capacity\" <$> TF.attribute",
                    "name": "max_target_capacity",
                    "method": "maxTargetCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMaxTargetCapacity",
                    "optional": true,
                    "label": "_maxTargetCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"maximum\" <$> TF.attribute",
                    "name": "maximum",
                    "method": "maximum",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMaximum",
                    "optional": true,
                    "label": "_maximum"
                },
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_target_capacity\" <$> TF.attribute",
                    "name": "min_target_capacity",
                    "method": "minTargetCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinTargetCapacity",
                    "optional": true,
                    "label": "_minTargetCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minimum\" <$> TF.attribute",
                    "name": "minimum",
                    "method": "minimum",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinimum",
                    "optional": true,
                    "label": "_minimum"
                },
                {
                    "default": "_namespace",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"namespace\" <$> TF.attribute",
                    "name": "namespace",
                    "method": "namespace",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNamespace",
                    "optional": false,
                    "label": "_namespace"
                },
                {
                    "default": "_policyName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_name\" <$> TF.attribute",
                    "name": "policy_name",
                    "method": "policyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyName",
                    "optional": false,
                    "label": "_policyName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "optional": true,
                    "label": "_target"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasThreshold",
                    "optional": false,
                    "label": "_threshold"
                },
                {
                    "default": "_unit",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unit\" <$> TF.attribute",
                    "name": "unit",
                    "method": "unit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnit",
                    "optional": false,
                    "label": "_unit"
                }
            ],
            "name": "ScalingUpPolicy",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cooldown\" <$> TF.attribute",
                    "name": "cooldown",
                    "method": "computedCooldown",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedCooldown",
                    "optional": true,
                    "label": "_computedCooldown"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"evaluation_periods\" <$> TF.attribute",
                    "name": "evaluation_periods",
                    "method": "computedEvaluationPeriods",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedEvaluationPeriods",
                    "optional": true,
                    "label": "_computedEvaluationPeriods"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"operator\" <$> TF.attribute",
                    "name": "operator",
                    "method": "computedOperator",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOperator",
                    "optional": true,
                    "label": "_computedOperator"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "computedPeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPeriod",
                    "optional": true,
                    "label": "_computedPeriod"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "source",
                    "method": "computedSource",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSource",
                    "optional": true,
                    "label": "_computedSource"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statistic\" <$> TF.attribute",
                    "name": "statistic",
                    "method": "computedStatistic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatistic",
                    "optional": true,
                    "label": "_computedStatistic"
                }
            ],
            "parameters": [
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "_namespace",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"namespace\" <$> TF.attribute",
                    "name": "namespace",
                    "method": "namespace",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNamespace",
                    "optional": false,
                    "label": "_namespace"
                },
                {
                    "default": "_policyName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_name\" <$> TF.attribute",
                    "name": "policy_name",
                    "method": "policyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyName",
                    "optional": false,
                    "label": "_policyName"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasThreshold",
                    "optional": false,
                    "label": "_threshold"
                },
                {
                    "default": "_unit",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unit\" <$> TF.attribute",
                    "name": "unit",
                    "method": "unit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnit",
                    "optional": false,
                    "label": "_unit"
                }
            ],
            "hashable": false,
            "type": "ScalingUpPolicy s",
            "original": "scaling_up_policy"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"api_server\" <$> TF.attribute",
                    "name": "api_server",
                    "method": "apiServer",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasApiServer",
                    "optional": true,
                    "label": "_apiServer"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_cooldown\" <$> TF.attribute",
                    "name": "autoscale_cooldown",
                    "method": "autoscaleCooldown",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAutoscaleCooldown",
                    "optional": true,
                    "label": "_autoscaleCooldown"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_down\" <$> TF.attribute",
                    "name": "autoscale_down",
                    "method": "autoscaleDown",
                    "conflicts": [],
                    "type": "TF.Attr s [AutoscaleDown s]",
                    "class": "HasAutoscaleDown",
                    "optional": true,
                    "label": "_autoscaleDown"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_headroom\" <$> TF.attribute",
                    "name": "autoscale_headroom",
                    "method": "autoscaleHeadroom",
                    "conflicts": [],
                    "type": "TF.Attr s [AutoscaleHeadroom s]",
                    "class": "HasAutoscaleHeadroom",
                    "optional": true,
                    "label": "_autoscaleHeadroom"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_is_auto_config\" <$> TF.attribute",
                    "name": "autoscale_is_auto_config",
                    "method": "autoscaleIsAutoConfig",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoscaleIsAutoConfig",
                    "optional": true,
                    "label": "_autoscaleIsAutoConfig"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_is_enabled\" <$> TF.attribute",
                    "name": "autoscale_is_enabled",
                    "method": "autoscaleIsEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoscaleIsEnabled",
                    "optional": true,
                    "label": "_autoscaleIsEnabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_labels\" <$> TF.attribute",
                    "name": "autoscale_labels",
                    "method": "autoscaleLabels",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AutoscaleLabels s)]",
                    "class": "HasAutoscaleLabels",
                    "optional": true,
                    "label": "_autoscaleLabels"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_identifier\" <$> TF.attribute",
                    "name": "cluster_identifier",
                    "method": "clusterIdentifier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClusterIdentifier",
                    "optional": true,
                    "label": "_clusterIdentifier"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_mode\" <$> TF.attribute",
                    "name": "integration_mode",
                    "method": "integrationMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIntegrationMode",
                    "optional": true,
                    "label": "_integrationMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                }
            ],
            "name": "IntegrationKubernetes",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "IntegrationKubernetes s",
            "original": "integration_kubernetes"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_delete_images\" <$> TF.attribute",
                    "name": "should_delete_images",
                    "method": "shouldDeleteImages",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldDeleteImages",
                    "optional": true,
                    "label": "_shouldDeleteImages"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_delete_network_interfaces\" <$> TF.attribute",
                    "name": "should_delete_network_interfaces",
                    "method": "shouldDeleteNetworkInterfaces",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldDeleteNetworkInterfaces",
                    "optional": true,
                    "label": "_shouldDeleteNetworkInterfaces"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_delete_snapshots\" <$> TF.attribute",
                    "name": "should_delete_snapshots",
                    "method": "shouldDeleteSnapshots",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldDeleteSnapshots",
                    "optional": true,
                    "label": "_shouldDeleteSnapshots"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_delete_volumes\" <$> TF.attribute",
                    "name": "should_delete_volumes",
                    "method": "shouldDeleteVolumes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldDeleteVolumes",
                    "optional": true,
                    "label": "_shouldDeleteVolumes"
                }
            ],
            "name": "StatefulDeallocation",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "StatefulDeallocation s",
            "original": "stateful_deallocation"
        },
        {
            "arguments": [
                {
                    "default": "_instanceType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_type\" <$> TF.attribute",
                    "name": "instance_type",
                    "method": "instanceType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceType",
                    "optional": false,
                    "label": "_instanceType"
                },
                {
                    "default": "_weight",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "weight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasWeight",
                    "optional": false,
                    "label": "_weight"
                }
            ],
            "name": "InstanceTypesWeights",
            "attributes": [],
            "parameters": [
                {
                    "default": "_instanceType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_type\" <$> TF.attribute",
                    "name": "instance_type",
                    "method": "instanceType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceType",
                    "optional": false,
                    "label": "_instanceType"
                },
                {
                    "default": "_weight",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "weight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasWeight",
                    "optional": false,
                    "label": "_weight"
                }
            ],
            "hashable": false,
            "type": "InstanceTypesWeights s",
            "original": "instance_types_weights"
        },
        {
            "arguments": [
                {
                    "default": "_performAt",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"perform_at\" <$> TF.attribute",
                    "name": "perform_at",
                    "method": "performAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPerformAt",
                    "optional": false,
                    "label": "_performAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"time_windows\" <$> TF.attribute",
                    "name": "time_windows",
                    "method": "timeWindows",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTimeWindows",
                    "optional": true,
                    "label": "_timeWindows"
                }
            ],
            "name": "RevertToSpot",
            "attributes": [],
            "parameters": [
                {
                    "default": "_performAt",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"perform_at\" <$> TF.attribute",
                    "name": "perform_at",
                    "method": "performAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPerformAt",
                    "optional": false,
                    "label": "_performAt"
                }
            ],
            "hashable": false,
            "type": "RevertToSpot s",
            "original": "revert_to_spot"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"runner\" <$> TF.attribute",
                    "name": "runner",
                    "method": "runner",
                    "conflicts": [],
                    "type": "TF.Attr s [Runner s]",
                    "class": "HasRunner",
                    "optional": true,
                    "label": "_runner"
                }
            ],
            "name": "IntegrationGitlab",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "IntegrationGitlab s",
            "original": "integration_gitlab"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_attributes\" <$> TF.attribute",
                    "name": "autoscale_attributes",
                    "method": "autoscaleAttributes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AutoscaleAttributes s)]",
                    "class": "HasAutoscaleAttributes",
                    "optional": true,
                    "label": "_autoscaleAttributes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_cooldown\" <$> TF.attribute",
                    "name": "autoscale_cooldown",
                    "method": "autoscaleCooldown",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAutoscaleCooldown",
                    "optional": true,
                    "label": "_autoscaleCooldown"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_down\" <$> TF.attribute",
                    "name": "autoscale_down",
                    "method": "autoscaleDown",
                    "conflicts": [],
                    "type": "TF.Attr s [AutoscaleDown s]",
                    "class": "HasAutoscaleDown",
                    "optional": true,
                    "label": "_autoscaleDown"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_headroom\" <$> TF.attribute",
                    "name": "autoscale_headroom",
                    "method": "autoscaleHeadroom",
                    "conflicts": [],
                    "type": "TF.Attr s [AutoscaleHeadroom s]",
                    "class": "HasAutoscaleHeadroom",
                    "optional": true,
                    "label": "_autoscaleHeadroom"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_is_enabled\" <$> TF.attribute",
                    "name": "autoscale_is_enabled",
                    "method": "autoscaleIsEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoscaleIsEnabled",
                    "optional": true,
                    "label": "_autoscaleIsEnabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscale_scale_down_non_service_tasks\" <$> TF.attribute",
                    "name": "autoscale_scale_down_non_service_tasks",
                    "method": "autoscaleScaleDownNonServiceTasks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoscaleScaleDownNonServiceTasks",
                    "optional": true,
                    "label": "_autoscaleScaleDownNonServiceTasks"
                },
                {
                    "default": "_clusterName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_name\" <$> TF.attribute",
                    "name": "cluster_name",
                    "method": "clusterName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClusterName",
                    "optional": false,
                    "label": "_clusterName"
                }
            ],
            "name": "IntegrationEcs",
            "attributes": [],
            "parameters": [
                {
                    "default": "_clusterName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_name\" <$> TF.attribute",
                    "name": "cluster_name",
                    "method": "clusterName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClusterName",
                    "optional": false,
                    "label": "_clusterName"
                }
            ],
            "hashable": false,
            "type": "IntegrationEcs s",
            "original": "integration_ecs"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dimensions\" <$> TF.attribute",
                    "name": "dimensions",
                    "method": "dimensions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasDimensions",
                    "optional": true,
                    "label": "_dimensions"
                },
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "_namespace",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"namespace\" <$> TF.attribute",
                    "name": "namespace",
                    "method": "namespace",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNamespace",
                    "optional": false,
                    "label": "_namespace"
                },
                {
                    "default": "_policyName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_name\" <$> TF.attribute",
                    "name": "policy_name",
                    "method": "policyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyName",
                    "optional": false,
                    "label": "_policyName"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "optional": false,
                    "label": "_target"
                },
                {
                    "default": "_unit",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unit\" <$> TF.attribute",
                    "name": "unit",
                    "method": "unit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnit",
                    "optional": false,
                    "label": "_unit"
                }
            ],
            "name": "ScalingTargetPolicy",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cooldown\" <$> TF.attribute",
                    "name": "cooldown",
                    "method": "computedCooldown",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedCooldown",
                    "optional": true,
                    "label": "_computedCooldown"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "source",
                    "method": "computedSource",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSource",
                    "optional": true,
                    "label": "_computedSource"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statistic\" <$> TF.attribute",
                    "name": "statistic",
                    "method": "computedStatistic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatistic",
                    "optional": true,
                    "label": "_computedStatistic"
                }
            ],
            "parameters": [
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "_namespace",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"namespace\" <$> TF.attribute",
                    "name": "namespace",
                    "method": "namespace",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNamespace",
                    "optional": false,
                    "label": "_namespace"
                },
                {
                    "default": "_policyName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_name\" <$> TF.attribute",
                    "name": "policy_name",
                    "method": "policyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyName",
                    "optional": false,
                    "label": "_policyName"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "optional": false,
                    "label": "_target"
                },
                {
                    "default": "_unit",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unit\" <$> TF.attribute",
                    "name": "unit",
                    "method": "unit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnit",
                    "optional": false,
                    "label": "_unit"
                }
            ],
            "hashable": false,
            "type": "ScalingTargetPolicy s",
            "original": "scaling_target_policy"
        },
        {
            "arguments": [
                {
                    "default": "_apiServer",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"api_server\" <$> TF.attribute",
                    "name": "api_server",
                    "method": "apiServer",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasApiServer",
                    "optional": false,
                    "label": "_apiServer"
                }
            ],
            "name": "IntegrationMesosphere",
            "attributes": [],
            "parameters": [
                {
                    "default": "_apiServer",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"api_server\" <$> TF.attribute",
                    "name": "api_server",
                    "method": "apiServer",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasApiServer",
                    "optional": false,
                    "label": "_apiServer"
                }
            ],
            "hashable": false,
            "type": "IntegrationMesosphere s",
            "original": "integration_mesosphere"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action_type\" <$> TF.attribute",
                    "name": "action_type",
                    "method": "actionType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasActionType",
                    "optional": true,
                    "label": "_actionType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"adjustment\" <$> TF.attribute",
                    "name": "adjustment",
                    "method": "adjustment",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAdjustment",
                    "optional": true,
                    "label": "_adjustment"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dimensions\" <$> TF.attribute",
                    "name": "dimensions",
                    "method": "dimensions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasDimensions",
                    "optional": true,
                    "label": "_dimensions"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_target_capacity\" <$> TF.attribute",
                    "name": "max_target_capacity",
                    "method": "maxTargetCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMaxTargetCapacity",
                    "optional": true,
                    "label": "_maxTargetCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"maximum\" <$> TF.attribute",
                    "name": "maximum",
                    "method": "maximum",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMaximum",
                    "optional": true,
                    "label": "_maximum"
                },
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_target_capacity\" <$> TF.attribute",
                    "name": "min_target_capacity",
                    "method": "minTargetCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinTargetCapacity",
                    "optional": true,
                    "label": "_minTargetCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minimum\" <$> TF.attribute",
                    "name": "minimum",
                    "method": "minimum",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinimum",
                    "optional": true,
                    "label": "_minimum"
                },
                {
                    "default": "_namespace",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"namespace\" <$> TF.attribute",
                    "name": "namespace",
                    "method": "namespace",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNamespace",
                    "optional": false,
                    "label": "_namespace"
                },
                {
                    "default": "_policyName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_name\" <$> TF.attribute",
                    "name": "policy_name",
                    "method": "policyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyName",
                    "optional": false,
                    "label": "_policyName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "optional": true,
                    "label": "_target"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasThreshold",
                    "optional": false,
                    "label": "_threshold"
                },
                {
                    "default": "_unit",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unit\" <$> TF.attribute",
                    "name": "unit",
                    "method": "unit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnit",
                    "optional": false,
                    "label": "_unit"
                }
            ],
            "name": "ScalingDownPolicy",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cooldown\" <$> TF.attribute",
                    "name": "cooldown",
                    "method": "computedCooldown",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedCooldown",
                    "optional": true,
                    "label": "_computedCooldown"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"evaluation_periods\" <$> TF.attribute",
                    "name": "evaluation_periods",
                    "method": "computedEvaluationPeriods",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedEvaluationPeriods",
                    "optional": true,
                    "label": "_computedEvaluationPeriods"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"operator\" <$> TF.attribute",
                    "name": "operator",
                    "method": "computedOperator",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOperator",
                    "optional": true,
                    "label": "_computedOperator"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "computedPeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPeriod",
                    "optional": true,
                    "label": "_computedPeriod"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "source",
                    "method": "computedSource",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSource",
                    "optional": true,
                    "label": "_computedSource"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"statistic\" <$> TF.attribute",
                    "name": "statistic",
                    "method": "computedStatistic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatistic",
                    "optional": true,
                    "label": "_computedStatistic"
                }
            ],
            "parameters": [
                {
                    "default": "_metricName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric_name\" <$> TF.attribute",
                    "name": "metric_name",
                    "method": "metricName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetricName",
                    "optional": false,
                    "label": "_metricName"
                },
                {
                    "default": "_namespace",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"namespace\" <$> TF.attribute",
                    "name": "namespace",
                    "method": "namespace",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNamespace",
                    "optional": false,
                    "label": "_namespace"
                },
                {
                    "default": "_policyName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_name\" <$> TF.attribute",
                    "name": "policy_name",
                    "method": "policyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyName",
                    "optional": false,
                    "label": "_policyName"
                },
                {
                    "default": "_threshold",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasThreshold",
                    "optional": false,
                    "label": "_threshold"
                },
                {
                    "default": "_unit",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unit\" <$> TF.attribute",
                    "name": "unit",
                    "method": "unit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUnit",
                    "optional": false,
                    "label": "_unit"
                }
            ],
            "hashable": false,
            "type": "ScalingDownPolicy s",
            "original": "scaling_down_policy"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cpu_per_unit\" <$> TF.attribute",
                    "name": "cpu_per_unit",
                    "method": "cpuPerUnit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCpuPerUnit",
                    "optional": true,
                    "label": "_cpuPerUnit"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"memory_per_unit\" <$> TF.attribute",
                    "name": "memory_per_unit",
                    "method": "memoryPerUnit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMemoryPerUnit",
                    "optional": true,
                    "label": "_memoryPerUnit"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_of_units\" <$> TF.attribute",
                    "name": "num_of_units",
                    "method": "numOfUnits",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasNumOfUnits",
                    "optional": true,
                    "label": "_numOfUnits"
                }
            ],
            "name": "AutoscaleHeadroom",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "AutoscaleHeadroom s",
            "original": "autoscale_headroom"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"evaluation_periods\" <$> TF.attribute",
                    "name": "evaluation_periods",
                    "method": "evaluationPeriods",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasEvaluationPeriods",
                    "optional": true,
                    "label": "_evaluationPeriods"
                }
            ],
            "name": "AutoscaleDown",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "AutoscaleDown s",
            "original": "autoscale_down"
        },
        {
            "arguments": [
                {
                    "default": "_applicationName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"application_name\" <$> TF.attribute",
                    "name": "application_name",
                    "method": "applicationName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasApplicationName",
                    "optional": false,
                    "label": "_applicationName"
                },
                {
                    "default": "_deploymentGroupName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deployment_group_name\" <$> TF.attribute",
                    "name": "deployment_group_name",
                    "method": "deploymentGroupName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeploymentGroupName",
                    "optional": false,
                    "label": "_deploymentGroupName"
                }
            ],
            "name": "DeploymentGroups",
            "attributes": [],
            "parameters": [
                {
                    "default": "_applicationName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"application_name\" <$> TF.attribute",
                    "name": "application_name",
                    "method": "applicationName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasApplicationName",
                    "optional": false,
                    "label": "_applicationName"
                },
                {
                    "default": "_deploymentGroupName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deployment_group_name\" <$> TF.attribute",
                    "name": "deployment_group_name",
                    "method": "deploymentGroupName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeploymentGroupName",
                    "optional": false,
                    "label": "_deploymentGroupName"
                }
            ],
            "hashable": false,
            "type": "DeploymentGroups s",
            "original": "deployment_groups"
        },
        {
            "arguments": [
                {
                    "default": "_deploymentId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deployment_id\" <$> TF.attribute",
                    "name": "deployment_id",
                    "method": "deploymentId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeploymentId",
                    "optional": false,
                    "label": "_deploymentId"
                }
            ],
            "name": "IntegrationMultaiRuntime",
            "attributes": [],
            "parameters": [
                {
                    "default": "_deploymentId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deployment_id\" <$> TF.attribute",
                    "name": "deployment_id",
                    "method": "deploymentId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeploymentId",
                    "optional": false,
                    "label": "_deploymentId"
                }
            ],
            "hashable": false,
            "type": "IntegrationMultaiRuntime s",
            "original": "integration_multai_runtime"
        },
        {
            "arguments": [
                {
                    "default": "_balancerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"balancer_id\" <$> TF.attribute",
                    "name": "balancer_id",
                    "method": "balancerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBalancerId",
                    "optional": false,
                    "label": "_balancerId"
                },
                {
                    "default": "_targetSetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_set_id\" <$> TF.attribute",
                    "name": "target_set_id",
                    "method": "targetSetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetSetId",
                    "optional": false,
                    "label": "_targetSetId"
                }
            ],
            "name": "MultaiTargetSets",
            "attributes": [],
            "parameters": [
                {
                    "default": "_balancerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"balancer_id\" <$> TF.attribute",
                    "name": "balancer_id",
                    "method": "balancerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBalancerId",
                    "optional": false,
                    "label": "_balancerId"
                },
                {
                    "default": "_targetSetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_set_id\" <$> TF.attribute",
                    "name": "target_set_id",
                    "method": "targetSetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetSetId",
                    "optional": false,
                    "label": "_targetSetId"
                }
            ],
            "hashable": false,
            "type": "MultaiTargetSets s",
            "original": "multai_target_sets"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_enabled\" <$> TF.attribute",
                    "name": "is_enabled",
                    "method": "isEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIsEnabled",
                    "optional": true,
                    "label": "_isEnabled"
                }
            ],
            "name": "Runner",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Runner s",
            "original": "runner"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"batch_size_percentage\" <$> TF.attribute",
                    "name": "batch_size_percentage",
                    "method": "batchSizePercentage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBatchSizePercentage",
                    "optional": true,
                    "label": "_batchSizePercentage"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cron_expression\" <$> TF.attribute",
                    "name": "cron_expression",
                    "method": "cronExpression",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCronExpression",
                    "optional": true,
                    "label": "_cronExpression"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"frequency\" <$> TF.attribute",
                    "name": "frequency",
                    "method": "frequency",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFrequency",
                    "optional": true,
                    "label": "_frequency"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"grace_period\" <$> TF.attribute",
                    "name": "grace_period",
                    "method": "gracePeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGracePeriod",
                    "optional": true,
                    "label": "_gracePeriod"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_enabled\" <$> TF.attribute",
                    "name": "is_enabled",
                    "method": "isEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIsEnabled",
                    "optional": true,
                    "label": "_isEnabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_capacity\" <$> TF.attribute",
                    "name": "max_capacity",
                    "method": "maxCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMaxCapacity",
                    "optional": true,
                    "label": "_maxCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_capacity\" <$> TF.attribute",
                    "name": "min_capacity",
                    "method": "minCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinCapacity",
                    "optional": true,
                    "label": "_minCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scale_max_capacity\" <$> TF.attribute",
                    "name": "scale_max_capacity",
                    "method": "scaleMaxCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasScaleMaxCapacity",
                    "optional": true,
                    "label": "_scaleMaxCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scale_min_capacity\" <$> TF.attribute",
                    "name": "scale_min_capacity",
                    "method": "scaleMinCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasScaleMinCapacity",
                    "optional": true,
                    "label": "_scaleMinCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scale_target_capacity\" <$> TF.attribute",
                    "name": "scale_target_capacity",
                    "method": "scaleTargetCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasScaleTargetCapacity",
                    "optional": true,
                    "label": "_scaleTargetCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time\" <$> TF.attribute",
                    "name": "start_time",
                    "method": "startTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStartTime",
                    "optional": true,
                    "label": "_startTime"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_capacity\" <$> TF.attribute",
                    "name": "target_capacity",
                    "method": "targetCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetCapacity",
                    "optional": true,
                    "label": "_targetCapacity"
                },
                {
                    "default": "_taskType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"task_type\" <$> TF.attribute",
                    "name": "task_type",
                    "method": "taskType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTaskType",
                    "optional": false,
                    "label": "_taskType"
                }
            ],
            "name": "ScheduledTask",
            "attributes": [],
            "parameters": [
                {
                    "default": "_taskType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"task_type\" <$> TF.attribute",
                    "name": "task_type",
                    "method": "taskType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTaskType",
                    "optional": false,
                    "label": "_taskType"
                }
            ],
            "hashable": false,
            "type": "ScheduledTask s",
            "original": "scheduled_task"
        },
        {
            "arguments": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "name": "AutoscaleConstraints",
            "attributes": [],
            "parameters": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "hashable": false,
            "type": "AutoscaleConstraints s",
            "original": "autoscale_constraints"
        },
        {
            "arguments": [
                {
                    "default": "_deviceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device_name\" <$> TF.attribute",
                    "name": "device_name",
                    "method": "deviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeviceName",
                    "optional": false,
                    "label": "_deviceName"
                },
                {
                    "default": "_virtualName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"virtual_name\" <$> TF.attribute",
                    "name": "virtual_name",
                    "method": "virtualName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVirtualName",
                    "optional": false,
                    "label": "_virtualName"
                }
            ],
            "name": "EphemeralBlockDevice",
            "attributes": [],
            "parameters": [
                {
                    "default": "_deviceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device_name\" <$> TF.attribute",
                    "name": "device_name",
                    "method": "deviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDeviceName",
                    "optional": false,
                    "label": "_deviceName"
                },
                {
                    "default": "_virtualName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"virtual_name\" <$> TF.attribute",
                    "name": "virtual_name",
                    "method": "virtualName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVirtualName",
                    "optional": false,
                    "label": "_virtualName"
                }
            ],
            "hashable": false,
            "type": "EphemeralBlockDevice s",
            "original": "ephemeral_block_device"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"roll_config\" <$> TF.attribute",
                    "name": "roll_config",
                    "method": "rollConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [RollConfig s]",
                    "class": "HasRollConfig",
                    "optional": true,
                    "label": "_rollConfig"
                },
                {
                    "default": "_shouldResumeStateful",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_resume_stateful\" <$> TF.attribute",
                    "name": "should_resume_stateful",
                    "method": "shouldResumeStateful",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldResumeStateful",
                    "optional": false,
                    "label": "_shouldResumeStateful"
                },
                {
                    "default": "_shouldRoll",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_roll\" <$> TF.attribute",
                    "name": "should_roll",
                    "method": "shouldRoll",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldRoll",
                    "optional": false,
                    "label": "_shouldRoll"
                }
            ],
            "name": "UpdatePolicy",
            "attributes": [],
            "parameters": [
                {
                    "default": "_shouldResumeStateful",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_resume_stateful\" <$> TF.attribute",
                    "name": "should_resume_stateful",
                    "method": "shouldResumeStateful",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldResumeStateful",
                    "optional": false,
                    "label": "_shouldResumeStateful"
                },
                {
                    "default": "_shouldRoll",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"should_roll\" <$> TF.attribute",
                    "name": "should_roll",
                    "method": "shouldRoll",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShouldRoll",
                    "optional": false,
                    "label": "_shouldRoll"
                }
            ],
            "hashable": false,
            "type": "UpdatePolicy s",
            "original": "update_policy"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": true,
                    "label": "_timeout"
                }
            ],
            "name": "Signal",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Signal s",
            "original": "signal"
        },
        {
            "arguments": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "name": "Tags",
            "attributes": [],
            "parameters": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "optional": false,
                    "label": "_key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "hashable": false,
            "type": "Tags s",
            "original": "tags"
        }
    ],
    "arguments": [
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Spotinst Account ID"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"account\" <$>",
            "name": "account",
            "method": "account",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasAccount",
            "optional": true,
            "label": "_account"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Spotinst Personal API Access Token"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"token\" <$>",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasToken",
            "optional": true,
            "label": "_token"
        }
    ],
    "dataSources": [],
    "resources": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"availability_zones\" <$> TF.attribute",
                    "name": "availability_zones",
                    "method": "availabilityZones",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "subnetIds",
                            "label": "_subnetIds"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasAvailabilityZones",
                    "optional": true,
                    "label": "_availabilityZones"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"block_devices_mode\" <$> TF.attribute",
                    "name": "block_devices_mode",
                    "method": "blockDevicesMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBlockDevicesMode",
                    "optional": true,
                    "label": "_blockDevicesMode"
                },
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"desired_capacity\" <$> TF.attribute",
                    "name": "desired_capacity",
                    "method": "desiredCapacity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDesiredCapacity",
                    "optional": true,
                    "label": "_desiredCapacity"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"draining_timeout\" <$> TF.attribute",
                    "name": "draining_timeout",
                    "method": "drainingTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDrainingTimeout",
                    "optional": true,
                    "label": "_drainingTimeout"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ebs_block_device\" <$> TF.attribute",
                    "name": "ebs_block_device",
                    "method": "ebsBlockDevice",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (EbsBlockDevice s)]",
                    "class": "HasEbsBlockDevice",
                    "optional": true,
                    "label": "_ebsBlockDevice"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"elastic_ips\" <$> TF.attribute",
                    "name": "elastic_ips",
                    "method": "elasticIps",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasElasticIps",
                    "optional": true,
                    "label": "_elasticIps"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"elastic_load_balancers\" <$> TF.attribute",
                    "name": "elastic_load_balancers",
                    "method": "elasticLoadBalancers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasElasticLoadBalancers",
                    "optional": true,
                    "label": "_elasticLoadBalancers"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_monitoring\" <$> TF.attribute",
                    "name": "enable_monitoring",
                    "method": "enableMonitoring",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableMonitoring",
                    "optional": true,
                    "label": "_enableMonitoring"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ephemeral_block_device\" <$> TF.attribute",
                    "name": "ephemeral_block_device",
                    "method": "ephemeralBlockDevice",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (EphemeralBlockDevice s)]",
                    "class": "HasEphemeralBlockDevice",
                    "optional": true,
                    "label": "_ephemeralBlockDevice"
                },
                {
                    "default": "_fallbackToOndemand",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fallback_to_ondemand\" <$> TF.attribute",
                    "name": "fallback_to_ondemand",
                    "method": "fallbackToOndemand",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasFallbackToOndemand",
                    "optional": false,
                    "label": "_fallbackToOndemand"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_check_grace_period\" <$> TF.attribute",
                    "name": "health_check_grace_period",
                    "method": "healthCheckGracePeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasHealthCheckGracePeriod",
                    "optional": true,
                    "label": "_healthCheckGracePeriod"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_check_type\" <$> TF.attribute",
                    "name": "health_check_type",
                    "method": "healthCheckType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthCheckType",
                    "optional": true,
                    "label": "_healthCheckType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_check_unhealthy_duration_before_replacement\" <$> TF.attribute",
                    "name": "health_check_unhealthy_duration_before_replacement",
                    "method": "healthCheckUnhealthyDurationBeforeReplacement",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasHealthCheckUnhealthyDurationBeforeReplacement",
                    "optional": true,
                    "label": "_healthCheckUnhealthyDurationBeforeReplacement"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"iam_instance_profile\" <$> TF.attribute",
                    "name": "iam_instance_profile",
                    "method": "iamInstanceProfile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIamInstanceProfile",
                    "optional": true,
                    "label": "_iamInstanceProfile"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"image_id\" <$> TF.attribute",
                    "name": "image_id",
                    "method": "imageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImageId",
                    "optional": true,
                    "label": "_imageId"
                },
                {
                    "default": "_instanceTypesOndemand",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_types_ondemand\" <$> TF.attribute",
                    "name": "instance_types_ondemand",
                    "method": "instanceTypesOndemand",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceTypesOndemand",
                    "optional": false,
                    "label": "_instanceTypesOndemand"
                },
                {
                    "default": "_instanceTypesSpot",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_types_spot\" <$> TF.attribute",
                    "name": "instance_types_spot",
                    "method": "instanceTypesSpot",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasInstanceTypesSpot",
                    "optional": false,
                    "label": "_instanceTypesSpot"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_types_weights\" <$> TF.attribute",
                    "name": "instance_types_weights",
                    "method": "instanceTypesWeights",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (InstanceTypesWeights s)]",
                    "class": "HasInstanceTypesWeights",
                    "optional": true,
                    "label": "_instanceTypesWeights"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_codedeploy\" <$> TF.attribute",
                    "name": "integration_codedeploy",
                    "method": "integrationCodedeploy",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationCodedeploy s]",
                    "class": "HasIntegrationCodedeploy",
                    "optional": true,
                    "label": "_integrationCodedeploy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_ecs\" <$> TF.attribute",
                    "name": "integration_ecs",
                    "method": "integrationEcs",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationEcs s]",
                    "class": "HasIntegrationEcs",
                    "optional": true,
                    "label": "_integrationEcs"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_gitlab\" <$> TF.attribute",
                    "name": "integration_gitlab",
                    "method": "integrationGitlab",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationGitlab s]",
                    "class": "HasIntegrationGitlab",
                    "optional": true,
                    "label": "_integrationGitlab"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_kubernetes\" <$> TF.attribute",
                    "name": "integration_kubernetes",
                    "method": "integrationKubernetes",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationKubernetes s]",
                    "class": "HasIntegrationKubernetes",
                    "optional": true,
                    "label": "_integrationKubernetes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_mesosphere\" <$> TF.attribute",
                    "name": "integration_mesosphere",
                    "method": "integrationMesosphere",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationMesosphere s]",
                    "class": "HasIntegrationMesosphere",
                    "optional": true,
                    "label": "_integrationMesosphere"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_multai_runtime\" <$> TF.attribute",
                    "name": "integration_multai_runtime",
                    "method": "integrationMultaiRuntime",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationMultaiRuntime s]",
                    "class": "HasIntegrationMultaiRuntime",
                    "optional": true,
                    "label": "_integrationMultaiRuntime"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_nomad\" <$> TF.attribute",
                    "name": "integration_nomad",
                    "method": "integrationNomad",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationNomad s]",
                    "class": "HasIntegrationNomad",
                    "optional": true,
                    "label": "_integrationNomad"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_rancher\" <$> TF.attribute",
                    "name": "integration_rancher",
                    "method": "integrationRancher",
                    "conflicts": [],
                    "type": "TF.Attr s [IntegrationRancher s]",
                    "class": "HasIntegrationRancher",
                    "optional": true,
                    "label": "_integrationRancher"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key_name\" <$> TF.attribute",
                    "name": "key_name",
                    "method": "keyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyName",
                    "optional": true,
                    "label": "_keyName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lifetime_period\" <$> TF.attribute",
                    "name": "lifetime_period",
                    "method": "lifetimePeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLifetimePeriod",
                    "optional": true,
                    "label": "_lifetimePeriod"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"multai_target_sets\" <$> TF.attribute",
                    "name": "multai_target_sets",
                    "method": "multaiTargetSets",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (MultaiTargetSets s)]",
                    "class": "HasMultaiTargetSets",
                    "optional": true,
                    "label": "_multaiTargetSets"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_interface\" <$> TF.attribute",
                    "name": "network_interface",
                    "method": "networkInterface",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NetworkInterface s)]",
                    "class": "HasNetworkInterface",
                    "optional": true,
                    "label": "_networkInterface"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ondemand_count\" <$> TF.attribute",
                    "name": "ondemand_count",
                    "method": "ondemandCount",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "spotPercentage",
                            "label": "_spotPercentage"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasOndemandCount",
                    "optional": true,
                    "label": "_ondemandCount"
                },
                {
                    "default": "_orientation",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"orientation\" <$> TF.attribute",
                    "name": "orientation",
                    "method": "orientation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrientation",
                    "optional": false,
                    "label": "_orientation"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"persist_block_devices\" <$> TF.attribute",
                    "name": "persist_block_devices",
                    "method": "persistBlockDevices",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPersistBlockDevices",
                    "optional": true,
                    "label": "_persistBlockDevices"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"persist_private_ip\" <$> TF.attribute",
                    "name": "persist_private_ip",
                    "method": "persistPrivateIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPersistPrivateIp",
                    "optional": true,
                    "label": "_persistPrivateIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"persist_root_device\" <$> TF.attribute",
                    "name": "persist_root_device",
                    "method": "persistRootDevice",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPersistRootDevice",
                    "optional": true,
                    "label": "_persistRootDevice"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"placement_tenancy\" <$> TF.attribute",
                    "name": "placement_tenancy",
                    "method": "placementTenancy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPlacementTenancy",
                    "optional": true,
                    "label": "_placementTenancy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preferred_availability_zones\" <$> TF.attribute",
                    "name": "preferred_availability_zones",
                    "method": "preferredAvailabilityZones",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPreferredAvailabilityZones",
                    "optional": true,
                    "label": "_preferredAvailabilityZones"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_ips\" <$> TF.attribute",
                    "name": "private_ips",
                    "method": "privateIps",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPrivateIps",
                    "optional": true,
                    "label": "_privateIps"
                },
                {
                    "default": "_product",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"product\" <$> TF.attribute",
                    "name": "product",
                    "method": "product",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProduct",
                    "optional": false,
                    "label": "_product"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": true,
                    "label": "_region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"revert_to_spot\" <$> TF.attribute",
                    "name": "revert_to_spot",
                    "method": "revertToSpot",
                    "conflicts": [],
                    "type": "TF.Attr s [RevertToSpot s]",
                    "class": "HasRevertToSpot",
                    "optional": true,
                    "label": "_revertToSpot"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scaling_down_policy\" <$> TF.attribute",
                    "name": "scaling_down_policy",
                    "method": "scalingDownPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScalingDownPolicy s)]",
                    "class": "HasScalingDownPolicy",
                    "optional": true,
                    "label": "_scalingDownPolicy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scaling_target_policy\" <$> TF.attribute",
                    "name": "scaling_target_policy",
                    "method": "scalingTargetPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScalingTargetPolicy s)]",
                    "class": "HasScalingTargetPolicy",
                    "optional": true,
                    "label": "_scalingTargetPolicy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scaling_up_policy\" <$> TF.attribute",
                    "name": "scaling_up_policy",
                    "method": "scalingUpPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScalingUpPolicy s)]",
                    "class": "HasScalingUpPolicy",
                    "optional": true,
                    "label": "_scalingUpPolicy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scheduled_task\" <$> TF.attribute",
                    "name": "scheduled_task",
                    "method": "scheduledTask",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScheduledTask s)]",
                    "class": "HasScheduledTask",
                    "optional": true,
                    "label": "_scheduledTask"
                },
                {
                    "default": "_securityGroups",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_groups\" <$> TF.attribute",
                    "name": "security_groups",
                    "method": "securityGroups",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSecurityGroups",
                    "optional": false,
                    "label": "_securityGroups"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"signal\" <$> TF.attribute",
                    "name": "signal",
                    "method": "signal",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Signal s)]",
                    "class": "HasSignal",
                    "optional": true,
                    "label": "_signal"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"spot_percentage\" <$> TF.attribute",
                    "name": "spot_percentage",
                    "method": "spotPercentage",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "ondemandCount",
                            "label": "_ondemandCount"
                        }
                    ],
                    "type": "TF.Attr s P.Double",
                    "class": "HasSpotPercentage",
                    "optional": true,
                    "label": "_spotPercentage"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"stateful_deallocation\" <$> TF.attribute",
                    "name": "stateful_deallocation",
                    "method": "statefulDeallocation",
                    "conflicts": [],
                    "type": "TF.Attr s [StatefulDeallocation s]",
                    "class": "HasStatefulDeallocation",
                    "optional": true,
                    "label": "_statefulDeallocation"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnet_ids\" <$> TF.attribute",
                    "name": "subnet_ids",
                    "method": "subnetIds",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "availabilityZones",
                            "label": "_availabilityZones"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSubnetIds",
                    "optional": true,
                    "label": "_subnetIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Tags s)]",
                    "class": "HasTags",
                    "optional": true,
                    "label": "_tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_group_arns\" <$> TF.attribute",
                    "name": "target_group_arns",
                    "method": "targetGroupArns",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTargetGroupArns",
                    "optional": true,
                    "label": "_targetGroupArns"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_policy\" <$> TF.attribute",
                    "name": "update_policy",
                    "method": "updatePolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [UpdatePolicy s]",
                    "class": "HasUpdatePolicy",
                    "optional": true,
                    "label": "_updatePolicy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_data\" <$> TF.attribute",
                    "name": "user_data",
                    "method": "userData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserData",
                    "optional": true,
                    "label": "_userData"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"utilize_reserved_instances\" <$> TF.attribute",
                    "name": "utilize_reserved_instances",
                    "method": "utilizeReservedInstances",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUtilizeReservedInstances",
                    "optional": true,
                    "label": "_utilizeReservedInstances"
                }
            ],
            "schema": "Resource",
            "name": "ElastigroupAwsResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"capacity_unit\" <$> TF.attribute",
                    "name": "capacity_unit",
                    "method": "computedCapacityUnit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCapacityUnit",
                    "optional": true,
                    "label": "_computedCapacityUnit"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ebs_optimized\" <$> TF.attribute",
                    "name": "ebs_optimized",
                    "method": "computedEbsOptimized",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEbsOptimized",
                    "optional": true,
                    "label": "_computedEbsOptimized"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_size\" <$> TF.attribute",
                    "name": "max_size",
                    "method": "computedMaxSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxSize",
                    "optional": true,
                    "label": "_computedMaxSize"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_size\" <$> TF.attribute",
                    "name": "min_size",
                    "method": "computedMinSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMinSize",
                    "optional": true,
                    "label": "_computedMinSize"
                }
            ],
            "parameters": [
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "_fallbackToOndemand",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fallback_to_ondemand\" <$> TF.attribute",
                    "name": "fallback_to_ondemand",
                    "method": "fallbackToOndemand",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasFallbackToOndemand",
                    "optional": false,
                    "label": "_fallbackToOndemand"
                },
                {
                    "default": "_instanceTypesOndemand",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_types_ondemand\" <$> TF.attribute",
                    "name": "instance_types_ondemand",
                    "method": "instanceTypesOndemand",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceTypesOndemand",
                    "optional": false,
                    "label": "_instanceTypesOndemand"
                },
                {
                    "default": "_instanceTypesSpot",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_types_spot\" <$> TF.attribute",
                    "name": "instance_types_spot",
                    "method": "instanceTypesSpot",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasInstanceTypesSpot",
                    "optional": false,
                    "label": "_instanceTypesSpot"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_orientation",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"orientation\" <$> TF.attribute",
                    "name": "orientation",
                    "method": "orientation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrientation",
                    "optional": false,
                    "label": "_orientation"
                },
                {
                    "default": "_product",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"product\" <$> TF.attribute",
                    "name": "product",
                    "method": "product",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProduct",
                    "optional": false,
                    "label": "_product"
                },
                {
                    "default": "_securityGroups",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_groups\" <$> TF.attribute",
                    "name": "security_groups",
                    "method": "securityGroups",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSecurityGroups",
                    "optional": false,
                    "label": "_securityGroups"
                }
            ],
            "type": "ElastigroupAwsResource s",
            "original": "spotinst_elastigroup_aws"
        },
        {
            "arguments": [
                {
                    "default": "_endpoint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"endpoint\" <$> TF.attribute",
                    "name": "endpoint",
                    "method": "endpoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEndpoint",
                    "optional": false,
                    "label": "_endpoint"
                },
                {
                    "default": "_eventType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"event_type\" <$> TF.attribute",
                    "name": "event_type",
                    "method": "eventType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEventType",
                    "optional": false,
                    "label": "_eventType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_resourceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resource_id\" <$> TF.attribute",
                    "name": "resource_id",
                    "method": "resourceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResourceId",
                    "optional": false,
                    "label": "_resourceId"
                }
            ],
            "schema": "Resource",
            "name": "SubscriptionResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_endpoint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"endpoint\" <$> TF.attribute",
                    "name": "endpoint",
                    "method": "endpoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEndpoint",
                    "optional": false,
                    "label": "_endpoint"
                },
                {
                    "default": "_eventType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"event_type\" <$> TF.attribute",
                    "name": "event_type",
                    "method": "eventType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEventType",
                    "optional": false,
                    "label": "_eventType"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_resourceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resource_id\" <$> TF.attribute",
                    "name": "resource_id",
                    "method": "resourceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResourceId",
                    "optional": false,
                    "label": "_resourceId"
                }
            ],
            "type": "SubscriptionResource s",
            "original": "spotinst_subscription"
        }
    ],
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "Spotinst",
    "parameters": [],
    "package": "terrafomo-spotinst",
    "type": "Provider",
    "original": "spotinst"
}