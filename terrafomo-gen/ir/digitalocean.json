{
    "settings": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"certificate_id\" <$> TF.attribute",
                    "name": "certificate_id",
                    "method": "certificateId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificateId",
                    "optional": true,
                    "label": "_certificateId"
                },
                {
                    "default": "_entryPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"entry_port\" <$> TF.attribute",
                    "name": "entry_port",
                    "method": "entryPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasEntryPort",
                    "optional": false,
                    "label": "_entryPort"
                },
                {
                    "default": "_entryProtocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"entry_protocol\" <$> TF.attribute",
                    "name": "entry_protocol",
                    "method": "entryProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEntryProtocol",
                    "optional": false,
                    "label": "_entryProtocol"
                },
                {
                    "default": "_targetPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_port\" <$> TF.attribute",
                    "name": "target_port",
                    "method": "targetPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTargetPort",
                    "optional": false,
                    "label": "_targetPort"
                },
                {
                    "default": "_targetProtocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_protocol\" <$> TF.attribute",
                    "name": "target_protocol",
                    "method": "targetProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetProtocol",
                    "optional": false,
                    "label": "_targetProtocol"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_passthrough\" <$> TF.attribute",
                    "name": "tls_passthrough",
                    "method": "tlsPassthrough",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasTlsPassthrough",
                    "optional": true,
                    "label": "_tlsPassthrough"
                }
            ],
            "name": "ForwardingRule",
            "attributes": [],
            "parameters": [
                {
                    "default": "_entryPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"entry_port\" <$> TF.attribute",
                    "name": "entry_port",
                    "method": "entryPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasEntryPort",
                    "optional": false,
                    "label": "_entryPort"
                },
                {
                    "default": "_entryProtocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"entry_protocol\" <$> TF.attribute",
                    "name": "entry_protocol",
                    "method": "entryProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEntryProtocol",
                    "optional": false,
                    "label": "_entryProtocol"
                },
                {
                    "default": "_targetPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_port\" <$> TF.attribute",
                    "name": "target_port",
                    "method": "targetPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTargetPort",
                    "optional": false,
                    "label": "_targetPort"
                },
                {
                    "default": "_targetProtocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_protocol\" <$> TF.attribute",
                    "name": "target_protocol",
                    "method": "targetProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetProtocol",
                    "optional": false,
                    "label": "_targetProtocol"
                }
            ],
            "hashable": false,
            "type": "ForwardingRule s",
            "original": "forwarding_rule"
        },
        {
            "arguments": [
                {
                    "default": "TF.value 10",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_interval_seconds\" <$> TF.attribute",
                    "name": "check_interval_seconds",
                    "method": "checkIntervalSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCheckIntervalSeconds",
                    "optional": true,
                    "label": "_checkIntervalSeconds"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthy_threshold\" <$> TF.attribute",
                    "name": "healthy_threshold",
                    "method": "healthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasHealthyThreshold",
                    "optional": true,
                    "label": "_healthyThreshold"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": true,
                    "label": "_path"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_timeout_seconds\" <$> TF.attribute",
                    "name": "response_timeout_seconds",
                    "method": "responseTimeoutSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasResponseTimeoutSeconds",
                    "optional": true,
                    "label": "_responseTimeoutSeconds"
                },
                {
                    "default": "TF.value 3",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unhealthy_threshold\" <$> TF.attribute",
                    "name": "unhealthy_threshold",
                    "method": "unhealthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasUnhealthyThreshold",
                    "optional": true,
                    "label": "_unhealthyThreshold"
                }
            ],
            "name": "Healthcheck",
            "attributes": [],
            "parameters": [
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                }
            ],
            "hashable": false,
            "type": "Healthcheck s",
            "original": "healthcheck"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_addresses\" <$> TF.attribute",
                    "name": "destination_addresses",
                    "method": "destinationAddresses",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDestinationAddresses",
                    "optional": true,
                    "label": "_destinationAddresses"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_droplet_ids\" <$> TF.attribute",
                    "name": "destination_droplet_ids",
                    "method": "destinationDropletIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Integer]",
                    "class": "HasDestinationDropletIds",
                    "optional": true,
                    "label": "_destinationDropletIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_load_balancer_uids\" <$> TF.attribute",
                    "name": "destination_load_balancer_uids",
                    "method": "destinationLoadBalancerUids",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDestinationLoadBalancerUids",
                    "optional": true,
                    "label": "_destinationLoadBalancerUids"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_tags\" <$> TF.attribute",
                    "name": "destination_tags",
                    "method": "destinationTags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDestinationTags",
                    "optional": true,
                    "label": "_destinationTags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_range\" <$> TF.attribute",
                    "name": "port_range",
                    "method": "portRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPortRange",
                    "optional": true,
                    "label": "_portRange"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": true,
                    "label": "_protocol"
                }
            ],
            "name": "OutboundRule",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "OutboundRule s",
            "original": "outbound_rule"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"droplet_id\" <$> TF.attribute",
                    "name": "droplet_id",
                    "method": "dropletId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDropletId",
                    "optional": true,
                    "label": "_dropletId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"removing\" <$> TF.attribute",
                    "name": "removing",
                    "method": "removing",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasRemoving",
                    "optional": true,
                    "label": "_removing"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "optional": true,
                    "label": "_status"
                }
            ],
            "name": "PendingChanges",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "PendingChanges s",
            "original": "pending_changes"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_range\" <$> TF.attribute",
                    "name": "port_range",
                    "method": "portRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPortRange",
                    "optional": true,
                    "label": "_portRange"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": true,
                    "label": "_protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_addresses\" <$> TF.attribute",
                    "name": "source_addresses",
                    "method": "sourceAddresses",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSourceAddresses",
                    "optional": true,
                    "label": "_sourceAddresses"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_droplet_ids\" <$> TF.attribute",
                    "name": "source_droplet_ids",
                    "method": "sourceDropletIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Integer]",
                    "class": "HasSourceDropletIds",
                    "optional": true,
                    "label": "_sourceDropletIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_load_balancer_uids\" <$> TF.attribute",
                    "name": "source_load_balancer_uids",
                    "method": "sourceLoadBalancerUids",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSourceLoadBalancerUids",
                    "optional": true,
                    "label": "_sourceLoadBalancerUids"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_tags\" <$> TF.attribute",
                    "name": "source_tags",
                    "method": "sourceTags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSourceTags",
                    "optional": true,
                    "label": "_sourceTags"
                }
            ],
            "name": "InboundRule",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "InboundRule s",
            "original": "inbound_rule"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cookie_name\" <$> TF.attribute",
                    "name": "cookie_name",
                    "method": "cookieName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCookieName",
                    "optional": true,
                    "label": "_cookieName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cookie_ttl_seconds\" <$> TF.attribute",
                    "name": "cookie_ttl_seconds",
                    "method": "cookieTtlSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCookieTtlSeconds",
                    "optional": true,
                    "label": "_cookieTtlSeconds"
                },
                {
                    "default": "TF.value \"none\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": true,
                    "label": "_type'"
                }
            ],
            "name": "StickySessions",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "StickySessions s",
            "original": "sticky_sessions"
        }
    ],
    "arguments": [
        {
            "default": "_token",
            "computed": false,
            "required": true,
            "help": [
                "The token key for API operations."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"token\"",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasToken",
            "optional": false,
            "label": "_token"
        }
    ],
    "dataSources": [
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Name of the domain"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "DataSource",
            "name": "DomainData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Ttl of the domain"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "computedTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTtl",
                    "optional": false,
                    "label": "_computedTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Zone file of the domain"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone_file\" <$> TF.attribute",
                    "name": "zone_file",
                    "method": "computedZoneFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZoneFile",
                    "optional": false,
                    "label": "_computedZoneFile"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Name of the domain"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "DomainData s",
            "original": "digitalocean_domain"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Name of the image"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "DataSource",
            "name": "ImageData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Slug or id of the image"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "image",
                    "method": "computedImage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImage",
                    "optional": false,
                    "label": "_computedImage"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Minimum disk size required by the image"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_disk_size\" <$> TF.attribute",
                    "name": "min_disk_size",
                    "method": "computedMinDiskSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMinDiskSize",
                    "optional": false,
                    "label": "_computedMinDiskSize"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Is the image private or non-private"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"private\" <$> TF.attribute",
                    "name": "private",
                    "method": "computedPrivate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPrivate",
                    "optional": false,
                    "label": "_computedPrivate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "List of the regions that the image is available in"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"regions\" <$> TF.attribute",
                    "name": "regions",
                    "method": "computedRegions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedRegions",
                    "optional": false,
                    "label": "_computedRegions"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Type of the image"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "computedType'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType'",
                    "optional": false,
                    "label": "_computedType'"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Name of the image"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ImageData s",
            "original": "digitalocean_image"
        },
        {
            "arguments": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Domain of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Name of the record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "DataSource",
            "name": "RecordData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Name record data"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"data\" <$> TF.attribute",
                    "name": "data",
                    "method": "computedData'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedData'",
                    "optional": false,
                    "label": "_computedData'"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Flags of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"flags\" <$> TF.attribute",
                    "name": "flags",
                    "method": "computedFlags",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedFlags",
                    "optional": false,
                    "label": "_computedFlags"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Id of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Port of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "computedPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPort",
                    "optional": false,
                    "label": "_computedPort"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Priority of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "priority",
                    "method": "computedPriority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPriority",
                    "optional": false,
                    "label": "_computedPriority"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Tag of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tag\" <$> TF.attribute",
                    "name": "tag",
                    "method": "computedTag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTag",
                    "optional": false,
                    "label": "_computedTag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Ttl of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "computedTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTtl",
                    "optional": false,
                    "label": "_computedTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Type of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "computedType'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType'",
                    "optional": false,
                    "label": "_computedType'"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Weight of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "computedWeight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedWeight",
                    "optional": false,
                    "label": "_computedWeight"
                }
            ],
            "parameters": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Domain of the name record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Name of the record"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "RecordData s",
            "original": "digitalocean_record"
        }
    ],
    "resources": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"certificate_chain\" <$> TF.attribute",
                    "name": "certificate_chain",
                    "method": "certificateChain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificateChain",
                    "optional": true,
                    "label": "_certificateChain"
                },
                {
                    "default": "_leafCertificate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"leaf_certificate\" <$> TF.attribute",
                    "name": "leaf_certificate",
                    "method": "leafCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLeafCertificate",
                    "optional": false,
                    "label": "_leafCertificate"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_privateKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"private_key\" <$> TF.attribute",
                    "name": "private_key",
                    "method": "privateKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPrivateKey",
                    "optional": false,
                    "label": "_privateKey"
                }
            ],
            "schema": "Resource",
            "name": "CertificateResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"not_after\" <$> TF.attribute",
                    "name": "not_after",
                    "method": "computedNotAfter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNotAfter",
                    "optional": false,
                    "label": "_computedNotAfter"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha1_fingerprint\" <$> TF.attribute",
                    "name": "sha1_fingerprint",
                    "method": "computedSha1Fingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha1Fingerprint",
                    "optional": false,
                    "label": "_computedSha1Fingerprint"
                }
            ],
            "parameters": [
                {
                    "default": "_leafCertificate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"leaf_certificate\" <$> TF.attribute",
                    "name": "leaf_certificate",
                    "method": "leafCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLeafCertificate",
                    "optional": false,
                    "label": "_leafCertificate"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_privateKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"private_key\" <$> TF.attribute",
                    "name": "private_key",
                    "method": "privateKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPrivateKey",
                    "optional": false,
                    "label": "_privateKey"
                }
            ],
            "type": "CertificateResource s",
            "original": "digitalocean_certificate"
        },
        {
            "arguments": [
                {
                    "default": "_ipAddress",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": false,
                    "label": "_ipAddress"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "DomainResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_ipAddress",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": false,
                    "label": "_ipAddress"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "DomainResource s",
            "original": "digitalocean_domain"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backups\" <$> TF.attribute",
                    "name": "backups",
                    "method": "backups",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasBackups",
                    "optional": true,
                    "label": "_backups"
                },
                {
                    "default": "_image",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "image",
                    "method": "image",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImage",
                    "optional": false,
                    "label": "_image"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6\" <$> TF.attribute",
                    "name": "ipv6",
                    "method": "ipv6",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIpv6",
                    "optional": true,
                    "label": "_ipv6"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"monitoring\" <$> TF.attribute",
                    "name": "monitoring",
                    "method": "monitoring",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMonitoring",
                    "optional": true,
                    "label": "_monitoring"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_networking\" <$> TF.attribute",
                    "name": "private_networking",
                    "method": "privateNetworking",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPrivateNetworking",
                    "optional": true,
                    "label": "_privateNetworking"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resize_disk\" <$> TF.attribute",
                    "name": "resize_disk",
                    "method": "resizeDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasResizeDisk",
                    "optional": true,
                    "label": "_resizeDisk"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssh_keys\" <$> TF.attribute",
                    "name": "ssh_keys",
                    "method": "sshKeys",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSshKeys",
                    "optional": true,
                    "label": "_sshKeys"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "optional": true,
                    "label": "_tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"user_data\" <$> TF.attribute",
                    "name": "user_data",
                    "method": "userData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserData",
                    "optional": true,
                    "label": "_userData"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"volume_ids\" <$> TF.attribute",
                    "name": "volume_ids",
                    "method": "volumeIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasVolumeIds",
                    "optional": true,
                    "label": "_volumeIds"
                }
            ],
            "schema": "Resource",
            "name": "DropletResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "disk",
                    "method": "computedDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDisk",
                    "optional": false,
                    "label": "_computedDisk"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv4_address\" <$> TF.attribute",
                    "name": "ipv4_address",
                    "method": "computedIpv4Address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv4Address",
                    "optional": false,
                    "label": "_computedIpv4Address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv4_address_private\" <$> TF.attribute",
                    "name": "ipv4_address_private",
                    "method": "computedIpv4AddressPrivate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv4AddressPrivate",
                    "optional": false,
                    "label": "_computedIpv4AddressPrivate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6_address\" <$> TF.attribute",
                    "name": "ipv6_address",
                    "method": "computedIpv6Address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6Address",
                    "optional": false,
                    "label": "_computedIpv6Address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv6_address_private\" <$> TF.attribute",
                    "name": "ipv6_address_private",
                    "method": "computedIpv6AddressPrivate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6AddressPrivate",
                    "optional": false,
                    "label": "_computedIpv6AddressPrivate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"locked\" <$> TF.attribute",
                    "name": "locked",
                    "method": "computedLocked",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLocked",
                    "optional": false,
                    "label": "_computedLocked"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"price_hourly\" <$> TF.attribute",
                    "name": "price_hourly",
                    "method": "computedPriceHourly",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasComputedPriceHourly",
                    "optional": false,
                    "label": "_computedPriceHourly"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"price_monthly\" <$> TF.attribute",
                    "name": "price_monthly",
                    "method": "computedPriceMonthly",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasComputedPriceMonthly",
                    "optional": false,
                    "label": "_computedPriceMonthly"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "optional": false,
                    "label": "_computedStatus"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"vcpus\" <$> TF.attribute",
                    "name": "vcpus",
                    "method": "computedVcpus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedVcpus",
                    "optional": false,
                    "label": "_computedVcpus"
                }
            ],
            "parameters": [
                {
                    "default": "_image",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "image",
                    "method": "image",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImage",
                    "optional": false,
                    "label": "_image"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                }
            ],
            "type": "DropletResource s",
            "original": "digitalocean_droplet"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"droplet_ids\" <$> TF.attribute",
                    "name": "droplet_ids",
                    "method": "dropletIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDropletIds",
                    "optional": true,
                    "label": "_dropletIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"inbound_rule\" <$> TF.attribute",
                    "name": "inbound_rule",
                    "method": "inboundRule",
                    "conflicts": [],
                    "type": "TF.Attr s [InboundRule s]",
                    "class": "HasInboundRule",
                    "optional": true,
                    "label": "_inboundRule"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"outbound_rule\" <$> TF.attribute",
                    "name": "outbound_rule",
                    "method": "outboundRule",
                    "conflicts": [],
                    "type": "TF.Attr s [OutboundRule s]",
                    "class": "HasOutboundRule",
                    "optional": true,
                    "label": "_outboundRule"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "optional": true,
                    "label": "_tags"
                }
            ],
            "schema": "Resource",
            "name": "FirewallResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_at\" <$> TF.attribute",
                    "name": "created_at",
                    "method": "computedCreatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedAt",
                    "optional": false,
                    "label": "_computedCreatedAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pending_changes\" <$> TF.attribute",
                    "name": "pending_changes",
                    "method": "computedPendingChanges",
                    "conflicts": [],
                    "type": "TF.Attr s [PendingChanges s]",
                    "class": "HasComputedPendingChanges",
                    "optional": false,
                    "label": "_computedPendingChanges"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "optional": false,
                    "label": "_computedStatus"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "FirewallResource s",
            "original": "digitalocean_firewall"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"droplet_id\" <$> TF.attribute",
                    "name": "droplet_id",
                    "method": "dropletId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDropletId",
                    "optional": true,
                    "label": "_dropletId"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "schema": "Resource",
            "name": "FloatingIpResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "computedIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpAddress",
                    "optional": true,
                    "label": "_computedIpAddress"
                }
            ],
            "parameters": [
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "type": "FloatingIpResource s",
            "original": "digitalocean_floating_ip"
        },
        {
            "arguments": [
                {
                    "default": "TF.value \"round_robin\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"algorithm\" <$> TF.attribute",
                    "name": "algorithm",
                    "method": "algorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAlgorithm",
                    "optional": true,
                    "label": "_algorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"droplet_ids\" <$> TF.attribute",
                    "name": "droplet_ids",
                    "method": "dropletIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDropletIds",
                    "optional": true,
                    "label": "_dropletIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"droplet_tag\" <$> TF.attribute",
                    "name": "droplet_tag",
                    "method": "dropletTag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDropletTag",
                    "optional": true,
                    "label": "_dropletTag"
                },
                {
                    "default": "_forwardingRule",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"forwarding_rule\" <$> TF.attribute",
                    "name": "forwarding_rule",
                    "method": "forwardingRule",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (ForwardingRule s))",
                    "class": "HasForwardingRule",
                    "optional": false,
                    "label": "_forwardingRule"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthcheck\" <$> TF.attribute",
                    "name": "healthcheck",
                    "method": "healthcheck",
                    "conflicts": [],
                    "type": "TF.Attr s [Healthcheck s]",
                    "class": "HasHealthcheck",
                    "optional": true,
                    "label": "_healthcheck"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"redirect_http_to_https\" <$> TF.attribute",
                    "name": "redirect_http_to_https",
                    "method": "redirectHttpToHttps",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasRedirectHttpToHttps",
                    "optional": true,
                    "label": "_redirectHttpToHttps"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "schema": "Resource",
            "name": "LoadbalancerResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip\" <$> TF.attribute",
                    "name": "ip",
                    "method": "computedIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIp",
                    "optional": false,
                    "label": "_computedIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sticky_sessions\" <$> TF.attribute",
                    "name": "sticky_sessions",
                    "method": "computedStickySessions",
                    "conflicts": [],
                    "type": "TF.Attr s [StickySessions s]",
                    "class": "HasComputedStickySessions",
                    "optional": true,
                    "label": "_computedStickySessions"
                }
            ],
            "parameters": [
                {
                    "default": "_forwardingRule",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"forwarding_rule\" <$> TF.attribute",
                    "name": "forwarding_rule",
                    "method": "forwardingRule",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (ForwardingRule s))",
                    "class": "HasForwardingRule",
                    "optional": false,
                    "label": "_forwardingRule"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "type": "LoadbalancerResource s",
            "original": "digitalocean_loadbalancer"
        },
        {
            "arguments": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tag\" <$> TF.attribute",
                    "name": "tag",
                    "method": "tag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTag",
                    "optional": true,
                    "label": "_tag"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "schema": "Resource",
            "name": "RecordResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"flags\" <$> TF.attribute",
                    "name": "flags",
                    "method": "computedFlags",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFlags",
                    "optional": true,
                    "label": "_computedFlags"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fqdn\" <$> TF.attribute",
                    "name": "fqdn",
                    "method": "computedFqdn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFqdn",
                    "optional": false,
                    "label": "_computedFqdn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "computedPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPort",
                    "optional": true,
                    "label": "_computedPort"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "priority",
                    "method": "computedPriority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPriority",
                    "optional": true,
                    "label": "_computedPriority"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "computedTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTtl",
                    "optional": true,
                    "label": "_computedTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "computedValue",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedValue",
                    "optional": true,
                    "label": "_computedValue"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "computedWeight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWeight",
                    "optional": true,
                    "label": "_computedWeight"
                }
            ],
            "parameters": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "type": "RecordResource s",
            "original": "digitalocean_record"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_publicKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "public_key",
                    "method": "publicKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPublicKey",
                    "optional": false,
                    "label": "_publicKey"
                }
            ],
            "schema": "Resource",
            "name": "SshKeyResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "fingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "optional": false,
                    "label": "_computedFingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_publicKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "public_key",
                    "method": "publicKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPublicKey",
                    "optional": false,
                    "label": "_publicKey"
                }
            ],
            "type": "SshKeyResource s",
            "original": "digitalocean_ssh_key"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "TagResource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "TagResource s",
            "original": "digitalocean_tag"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"filesystem_type\" <$> TF.attribute",
                    "name": "filesystem_type",
                    "method": "filesystemType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilesystemType",
                    "optional": true,
                    "label": "_filesystemType"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                }
            ],
            "schema": "Resource",
            "name": "VolumeResource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"droplet_ids\" <$> TF.attribute",
                    "name": "droplet_ids",
                    "method": "computedDropletIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Integer)]",
                    "class": "HasComputedDropletIds",
                    "optional": false,
                    "label": "_computedDropletIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                }
            ],
            "type": "VolumeResource s",
            "original": "digitalocean_volume"
        }
    ],
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "DigitalOcean",
    "parameters": [
        {
            "default": "_token",
            "computed": false,
            "required": true,
            "help": [
                "The token key for API operations."
            ],
            "forceNew": false,
            "encoder": "P.Just $ TF.assign \"token\"",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Text",
            "class": "HasToken",
            "optional": false,
            "label": "_token"
        }
    ],
    "package": "terrafomo-digitalocean",
    "type": "Provider",
    "original": "digitalocean"
}