{
    "settings": [
        {
            "con": {
                "smart": "newServiceIncidentUrgencyRule",
                "name": "ServiceIncidentUrgencyRule'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"during_support_hours\" <$> TF.attribute",
                    "name": "_duringSupportHours",
                    "method": "duringSupportHours",
                    "conflicts": [],
                    "type": "TF.Attr s (IncidentUrgencyRuleDuringSupportHours s)",
                    "class": "HasDuringSupportHours",
                    "validate": true,
                    "optional": true,
                    "original": "during_support_hours"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"outside_support_hours\" <$> TF.attribute",
                    "name": "_outsideSupportHours",
                    "method": "outsideSupportHours",
                    "conflicts": [],
                    "type": "TF.Attr s (IncidentUrgencyRuleOutsideSupportHours s)",
                    "class": "HasOutsideSupportHours",
                    "validate": true,
                    "optional": true,
                    "original": "outside_support_hours"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"urgency\" <$> TF.attribute",
                    "name": "_urgency",
                    "method": "urgency",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrgency",
                    "validate": false,
                    "optional": true,
                    "original": "urgency"
                }
            ],
            "name": "ServiceIncidentUrgencyRule",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "ServiceIncidentUrgencyRule s",
            "original": "service_incident_urgency_rule"
        },
        {
            "con": {
                "smart": "newServiceScheduledActions",
                "name": "ServiceScheduledActions'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"at\" <$> TF.attribute",
                    "name": "_at",
                    "method": "at",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScheduledActionsAt s)]",
                    "class": "HasAt",
                    "validate": true,
                    "optional": true,
                    "original": "at"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"to_urgency\" <$> TF.attribute",
                    "name": "_toUrgency",
                    "method": "toUrgency",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToUrgency",
                    "validate": false,
                    "optional": true,
                    "original": "to_urgency"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "name": "ServiceScheduledActions",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "ServiceScheduledActions s",
            "original": "service_scheduled_actions"
        },
        {
            "con": {
                "smart": "newServiceSupportHours",
                "name": "ServiceSupportHours'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"days_of_week\" <$> TF.attribute",
                    "name": "_daysOfWeek",
                    "method": "daysOfWeek",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Integer]",
                    "class": "HasDaysOfWeek",
                    "validate": false,
                    "optional": true,
                    "original": "days_of_week"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"end_time\" <$> TF.attribute",
                    "name": "_endTime",
                    "method": "endTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEndTime",
                    "validate": false,
                    "optional": true,
                    "original": "end_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time\" <$> TF.attribute",
                    "name": "_startTime",
                    "method": "startTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStartTime",
                    "validate": false,
                    "optional": true,
                    "original": "start_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"time_zone\" <$> TF.attribute",
                    "name": "_timeZone",
                    "method": "timeZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTimeZone",
                    "validate": false,
                    "optional": true,
                    "original": "time_zone"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "name": "ServiceSupportHours",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "ServiceSupportHours s",
            "original": "service_support_hours"
        },
        {
            "con": {
                "smart": "newScheduledActionsAt",
                "name": "ScheduledActionsAt'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "name": "ScheduledActionsAt",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "ScheduledActionsAt s",
            "original": "scheduled_actions_at"
        },
        {
            "con": {
                "smart": "newIncidentUrgencyRuleOutsideSupportHours",
                "name": "IncidentUrgencyRuleOutsideSupportHours'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"urgency\" <$> TF.attribute",
                    "name": "_urgency",
                    "method": "urgency",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrgency",
                    "validate": false,
                    "optional": true,
                    "original": "urgency"
                }
            ],
            "name": "IncidentUrgencyRuleOutsideSupportHours",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "IncidentUrgencyRuleOutsideSupportHours s",
            "original": "incident_urgency_rule_outside_support_hours"
        },
        {
            "con": {
                "smart": "newLayerRestriction",
                "name": "LayerRestriction'"
            },
            "arguments": [
                {
                    "default": "_durationSeconds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"duration_seconds\" <$> TF.attribute",
                    "name": "_durationSeconds",
                    "method": "durationSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDurationSeconds",
                    "validate": false,
                    "optional": false,
                    "original": "duration_seconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_day_of_week\" <$> TF.attribute",
                    "name": "_startDayOfWeek",
                    "method": "startDayOfWeek",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasStartDayOfWeek",
                    "validate": false,
                    "optional": true,
                    "original": "start_day_of_week"
                },
                {
                    "default": "_startTimeOfDay",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time_of_day\" <$> TF.attribute",
                    "name": "_startTimeOfDay",
                    "method": "startTimeOfDay",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStartTimeOfDay",
                    "validate": false,
                    "optional": false,
                    "original": "start_time_of_day"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "name": "LayerRestriction",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_durationSeconds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"duration_seconds\" <$> TF.attribute",
                    "name": "_durationSeconds",
                    "method": "durationSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDurationSeconds",
                    "validate": false,
                    "optional": false,
                    "original": "duration_seconds"
                },
                {
                    "default": "_startTimeOfDay",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time_of_day\" <$> TF.attribute",
                    "name": "_startTimeOfDay",
                    "method": "startTimeOfDay",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStartTimeOfDay",
                    "validate": false,
                    "optional": false,
                    "original": "start_time_of_day"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "LayerRestriction s",
            "original": "layer_restriction"
        },
        {
            "con": {
                "smart": "newRuleTarget",
                "name": "RuleTarget'"
            },
            "arguments": [
                {
                    "default": "_id",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_id",
                    "method": "id",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.value \"user_reference\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "name": "RuleTarget",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_id",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_id",
                    "method": "id",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                }
            ],
            "conflicts": [],
            "type": "RuleTarget s",
            "original": "rule_target"
        },
        {
            "con": {
                "smart": "newEscalationPolicyRule",
                "name": "EscalationPolicyRule'"
            },
            "arguments": [
                {
                    "default": "_escalationDelayInMinutes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"escalation_delay_in_minutes\" <$> TF.attribute",
                    "name": "_escalationDelayInMinutes",
                    "method": "escalationDelayInMinutes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasEscalationDelayInMinutes",
                    "validate": false,
                    "optional": false,
                    "original": "escalation_delay_in_minutes"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (RuleTarget s)]",
                    "class": "HasTarget",
                    "validate": true,
                    "optional": false,
                    "original": "target"
                }
            ],
            "name": "EscalationPolicyRule",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                }
            ],
            "parameters": [
                {
                    "default": "_escalationDelayInMinutes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"escalation_delay_in_minutes\" <$> TF.attribute",
                    "name": "_escalationDelayInMinutes",
                    "method": "escalationDelayInMinutes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasEscalationDelayInMinutes",
                    "validate": false,
                    "optional": false,
                    "original": "escalation_delay_in_minutes"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (RuleTarget s)]",
                    "class": "HasTarget",
                    "validate": true,
                    "optional": false,
                    "original": "target"
                }
            ],
            "conflicts": [],
            "type": "EscalationPolicyRule s",
            "original": "escalation_policy_rule"
        },
        {
            "con": {
                "smart": "newIncidentUrgencyRuleDuringSupportHours",
                "name": "IncidentUrgencyRuleDuringSupportHours'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"urgency\" <$> TF.attribute",
                    "name": "_urgency",
                    "method": "urgency",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrgency",
                    "validate": false,
                    "optional": true,
                    "original": "urgency"
                }
            ],
            "name": "IncidentUrgencyRuleDuringSupportHours",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "IncidentUrgencyRuleDuringSupportHours s",
            "original": "incident_urgency_rule_during_support_hours"
        },
        {
            "con": {
                "smart": "newScheduleLayer",
                "name": "ScheduleLayer'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"end\" <$> TF.attribute",
                    "name": "_end",
                    "method": "end",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEnd",
                    "validate": false,
                    "optional": true,
                    "original": "end"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restriction\" <$> TF.attribute",
                    "name": "_restriction",
                    "method": "restriction",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (LayerRestriction s)]",
                    "class": "HasRestriction",
                    "validate": true,
                    "optional": true,
                    "original": "restriction"
                },
                {
                    "default": "_rotationTurnLengthSeconds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rotation_turn_length_seconds\" <$> TF.attribute",
                    "name": "_rotationTurnLengthSeconds",
                    "method": "rotationTurnLengthSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRotationTurnLengthSeconds",
                    "validate": false,
                    "optional": false,
                    "original": "rotation_turn_length_seconds"
                },
                {
                    "default": "_rotationVirtualStart",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rotation_virtual_start\" <$> TF.attribute",
                    "name": "_rotationVirtualStart",
                    "method": "rotationVirtualStart",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRotationVirtualStart",
                    "validate": false,
                    "optional": false,
                    "original": "rotation_virtual_start"
                },
                {
                    "default": "_start",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start\" <$> TF.attribute",
                    "name": "_start",
                    "method": "start",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStart",
                    "validate": false,
                    "optional": false,
                    "original": "start"
                },
                {
                    "default": "_users",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"users\" <$> TF.attribute",
                    "name": "_users",
                    "method": "users",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasUsers",
                    "validate": false,
                    "optional": false,
                    "original": "users"
                }
            ],
            "name": "ScheduleLayer",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                }
            ],
            "parameters": [
                {
                    "default": "_rotationTurnLengthSeconds",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rotation_turn_length_seconds\" <$> TF.attribute",
                    "name": "_rotationTurnLengthSeconds",
                    "method": "rotationTurnLengthSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRotationTurnLengthSeconds",
                    "validate": false,
                    "optional": false,
                    "original": "rotation_turn_length_seconds"
                },
                {
                    "default": "_rotationVirtualStart",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rotation_virtual_start\" <$> TF.attribute",
                    "name": "_rotationVirtualStart",
                    "method": "rotationVirtualStart",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRotationVirtualStart",
                    "validate": false,
                    "optional": false,
                    "original": "rotation_virtual_start"
                },
                {
                    "default": "_start",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start\" <$> TF.attribute",
                    "name": "_start",
                    "method": "start",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStart",
                    "validate": false,
                    "optional": false,
                    "original": "start"
                },
                {
                    "default": "_users",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"users\" <$> TF.attribute",
                    "name": "_users",
                    "method": "users",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasUsers",
                    "validate": false,
                    "optional": false,
                    "original": "users"
                }
            ],
            "conflicts": [],
            "type": "ScheduleLayer s",
            "original": "schedule_layer"
        }
    ],
    "url": "https://www.terraform.io/docs/providers/pagerduty/index.html",
    "dataSources": [
        {
            "con": {
                "smart": "escalationPolicyData",
                "name": "EscalationPolicyData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/d/escalation_policy.html",
            "name": "EscalationPolicyData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "EscalationPolicyData s",
            "original": "pagerduty_escalation_policy"
        },
        {
            "con": {
                "smart": "extensionSchemaData",
                "name": "ExtensionSchemaData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/d/extension_schema.html",
            "name": "ExtensionSchemaData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ExtensionSchemaData s",
            "original": "pagerduty_extension_schema"
        },
        {
            "con": {
                "smart": "scheduleData",
                "name": "ScheduleData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/d/schedule.html",
            "name": "ScheduleData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ScheduleData s",
            "original": "pagerduty_schedule"
        },
        {
            "con": {
                "smart": "teamData",
                "name": "TeamData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the team to find in the PagerDuty API"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/d/team.html",
            "name": "TeamData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the team to find in the PagerDuty API"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "TeamData s",
            "original": "pagerduty_team"
        },
        {
            "con": {
                "smart": "userData",
                "name": "UserData'"
            },
            "arguments": [
                {
                    "default": "_email",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/d/user.html",
            "name": "UserData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [
                {
                    "default": "_email",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                }
            ],
            "conflicts": [],
            "type": "UserData s",
            "original": "pagerduty_user"
        },
        {
            "con": {
                "smart": "vendorData",
                "name": "VendorData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name_regex\" <$> TF.attribute",
                    "name": "_nameRegex",
                    "method": "nameRegex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNameRegex",
                    "validate": false,
                    "optional": true,
                    "original": "name_regex"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/d/vendor.html",
            "name": "VendorData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "VendorData s",
            "original": "pagerduty_vendor"
        }
    ],
    "resources": [
        {
            "con": {
                "smart": "addonResource",
                "name": "AddonResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_src",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"src\" <$> TF.attribute",
                    "name": "_src",
                    "method": "src",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSrc",
                    "validate": false,
                    "optional": false,
                    "original": "src"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/addon.html",
            "name": "AddonResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_src",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"src\" <$> TF.attribute",
                    "name": "_src",
                    "method": "src",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSrc",
                    "validate": false,
                    "optional": false,
                    "original": "src"
                }
            ],
            "conflicts": [],
            "type": "AddonResource s",
            "original": "pagerduty_addon"
        },
        {
            "con": {
                "smart": "escalationPolicyResource",
                "name": "EscalationPolicyResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"Managed by Terraform\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_loops\" <$> TF.attribute",
                    "name": "_numLoops",
                    "method": "numLoops",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasNumLoops",
                    "validate": false,
                    "optional": true,
                    "original": "num_loops"
                },
                {
                    "default": "_rule",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "_rule",
                    "method": "rule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (EscalationPolicyRule s)]",
                    "class": "HasRule",
                    "validate": true,
                    "optional": false,
                    "original": "rule"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"teams\" <$> TF.attribute",
                    "name": "_teams",
                    "method": "teams",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTeams",
                    "validate": false,
                    "optional": true,
                    "original": "teams"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/escalation_policy.html",
            "name": "EscalationPolicyResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_rule",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "_rule",
                    "method": "rule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (EscalationPolicyRule s)]",
                    "class": "HasRule",
                    "validate": true,
                    "optional": false,
                    "original": "rule"
                }
            ],
            "conflicts": [],
            "type": "EscalationPolicyResource s",
            "original": "pagerduty_escalation_policy"
        },
        {
            "con": {
                "smart": "extensionResource",
                "name": "ExtensionResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"endpoint_url\" <$> TF.attribute",
                    "name": "_endpointUrl",
                    "method": "endpointUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEndpointUrl",
                    "validate": false,
                    "optional": true,
                    "original": "endpoint_url"
                },
                {
                    "default": "_extensionObjects",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"extension_objects\" <$> TF.attribute",
                    "name": "_extensionObjects",
                    "method": "extensionObjects",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasExtensionObjects",
                    "validate": false,
                    "optional": false,
                    "original": "extension_objects"
                },
                {
                    "default": "_extensionSchema",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"extension_schema\" <$> TF.attribute",
                    "name": "_extensionSchema",
                    "method": "extensionSchema",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExtensionSchema",
                    "validate": false,
                    "optional": false,
                    "original": "extension_schema"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/extension.html",
            "name": "ExtensionResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "parameters": [
                {
                    "default": "_extensionObjects",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"extension_objects\" <$> TF.attribute",
                    "name": "_extensionObjects",
                    "method": "extensionObjects",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasExtensionObjects",
                    "validate": false,
                    "optional": false,
                    "original": "extension_objects"
                },
                {
                    "default": "_extensionSchema",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"extension_schema\" <$> TF.attribute",
                    "name": "_extensionSchema",
                    "method": "extensionSchema",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExtensionSchema",
                    "validate": false,
                    "optional": false,
                    "original": "extension_schema"
                }
            ],
            "conflicts": [],
            "type": "ExtensionResource s",
            "original": "pagerduty_extension"
        },
        {
            "con": {
                "smart": "maintenanceWindowResource",
                "name": "MaintenanceWindowResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"Managed by Terraform\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_endTime",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"end_time\" <$> TF.attribute",
                    "name": "_endTime",
                    "method": "endTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEndTime",
                    "validate": false,
                    "optional": false,
                    "original": "end_time"
                },
                {
                    "default": "_services",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "_services",
                    "method": "services",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasServices",
                    "validate": false,
                    "optional": false,
                    "original": "services"
                },
                {
                    "default": "_startTime",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time\" <$> TF.attribute",
                    "name": "_startTime",
                    "method": "startTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStartTime",
                    "validate": false,
                    "optional": false,
                    "original": "start_time"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/maintenance_window.html",
            "name": "MaintenanceWindowResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_endTime",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"end_time\" <$> TF.attribute",
                    "name": "_endTime",
                    "method": "endTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEndTime",
                    "validate": false,
                    "optional": false,
                    "original": "end_time"
                },
                {
                    "default": "_services",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "_services",
                    "method": "services",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasServices",
                    "validate": false,
                    "optional": false,
                    "original": "services"
                },
                {
                    "default": "_startTime",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time\" <$> TF.attribute",
                    "name": "_startTime",
                    "method": "startTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStartTime",
                    "validate": false,
                    "optional": false,
                    "original": "start_time"
                }
            ],
            "conflicts": [],
            "type": "MaintenanceWindowResource s",
            "original": "pagerduty_maintenance_window"
        },
        {
            "con": {
                "smart": "scheduleResource",
                "name": "ScheduleResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"Managed by Terraform\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_layer",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"layer\" <$> TF.attribute",
                    "name": "_layer",
                    "method": "layer",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScheduleLayer s)]",
                    "class": "HasLayer",
                    "validate": true,
                    "optional": false,
                    "original": "layer"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"overflow\" <$> TF.attribute",
                    "name": "_overflow",
                    "method": "overflow",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasOverflow",
                    "validate": false,
                    "optional": true,
                    "original": "overflow"
                },
                {
                    "default": "_timeZone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"time_zone\" <$> TF.attribute",
                    "name": "_timeZone",
                    "method": "timeZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTimeZone",
                    "validate": false,
                    "optional": false,
                    "original": "time_zone"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/schedule.html",
            "name": "ScheduleResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_layer",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"layer\" <$> TF.attribute",
                    "name": "_layer",
                    "method": "layer",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScheduleLayer s)]",
                    "class": "HasLayer",
                    "validate": true,
                    "optional": false,
                    "original": "layer"
                },
                {
                    "default": "_timeZone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"time_zone\" <$> TF.attribute",
                    "name": "_timeZone",
                    "method": "timeZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTimeZone",
                    "validate": false,
                    "optional": false,
                    "original": "time_zone"
                }
            ],
            "conflicts": [],
            "type": "ScheduleResource s",
            "original": "pagerduty_schedule"
        },
        {
            "con": {
                "smart": "serviceResource",
                "name": "ServiceResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"1800\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"acknowledgement_timeout\" <$> TF.attribute",
                    "name": "_acknowledgementTimeout",
                    "method": "acknowledgementTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAcknowledgementTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "acknowledgement_timeout"
                },
                {
                    "default": "TF.value \"create_incidents\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"alert_creation\" <$> TF.attribute",
                    "name": "_alertCreation",
                    "method": "alertCreation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAlertCreation",
                    "validate": false,
                    "optional": true,
                    "original": "alert_creation"
                },
                {
                    "default": "TF.value \"14400\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_resolve_timeout\" <$> TF.attribute",
                    "name": "_autoResolveTimeout",
                    "method": "autoResolveTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAutoResolveTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "auto_resolve_timeout"
                },
                {
                    "default": "TF.value \"Managed by Terraform\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_escalationPolicy",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"escalation_policy\" <$> TF.attribute",
                    "name": "_escalationPolicy",
                    "method": "escalationPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEscalationPolicy",
                    "validate": false,
                    "optional": false,
                    "original": "escalation_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scheduled_actions\" <$> TF.attribute",
                    "name": "_scheduledActions",
                    "method": "scheduledActions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ServiceScheduledActions s)]",
                    "class": "HasScheduledActions",
                    "validate": true,
                    "optional": true,
                    "original": "scheduled_actions"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"support_hours\" <$> TF.attribute",
                    "name": "_supportHours",
                    "method": "supportHours",
                    "conflicts": [],
                    "type": "TF.Attr s (ServiceSupportHours s)",
                    "class": "HasSupportHours",
                    "validate": true,
                    "optional": true,
                    "original": "support_hours"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/service.html",
            "name": "ServiceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_at\" <$> TF.attribute",
                    "name": "_computedCreatedAt",
                    "method": "computedCreatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedAt",
                    "validate": false,
                    "optional": false,
                    "original": "created_at"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"incident_urgency_rule\" <$> TF.attribute",
                    "name": "_computedIncidentUrgencyRule",
                    "method": "computedIncidentUrgencyRule",
                    "conflicts": [],
                    "type": "TF.Attr s (ServiceIncidentUrgencyRule s)",
                    "class": "HasComputedIncidentUrgencyRule",
                    "validate": true,
                    "optional": true,
                    "original": "incident_urgency_rule"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_incident_timestamp\" <$> TF.attribute",
                    "name": "_computedLastIncidentTimestamp",
                    "method": "computedLastIncidentTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLastIncidentTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "last_incident_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_computedStatus",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                }
            ],
            "parameters": [
                {
                    "default": "_escalationPolicy",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"escalation_policy\" <$> TF.attribute",
                    "name": "_escalationPolicy",
                    "method": "escalationPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEscalationPolicy",
                    "validate": false,
                    "optional": false,
                    "original": "escalation_policy"
                }
            ],
            "conflicts": [],
            "type": "ServiceResource s",
            "original": "pagerduty_service"
        },
        {
            "con": {
                "smart": "serviceIntegrationResource",
                "name": "ServiceIntegrationResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/service_integration.html",
            "name": "ServiceIntegrationResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"html_url\" <$> TF.attribute",
                    "name": "_computedHtmlUrl",
                    "method": "computedHtmlUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHtmlUrl",
                    "validate": false,
                    "optional": false,
                    "original": "html_url"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_email\" <$> TF.attribute",
                    "name": "_computedIntegrationEmail",
                    "method": "computedIntegrationEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIntegrationEmail",
                    "validate": false,
                    "optional": true,
                    "original": "integration_email"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"integration_key\" <$> TF.attribute",
                    "name": "_computedIntegrationKey",
                    "method": "computedIntegrationKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIntegrationKey",
                    "validate": false,
                    "optional": true,
                    "original": "integration_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [
                        "_vendor"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vendor\" <$> TF.attribute",
                    "name": "_computedVendor",
                    "method": "computedVendor",
                    "conflicts": [
                        "_type'"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVendor",
                    "validate": false,
                    "optional": true,
                    "original": "vendor"
                }
            ],
            "parameters": [
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "conflicts": [],
            "type": "ServiceIntegrationResource s",
            "original": "pagerduty_service_integration"
        },
        {
            "con": {
                "smart": "teamResource",
                "name": "TeamResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"Managed by Terraform\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/team.html",
            "name": "TeamResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "TeamResource s",
            "original": "pagerduty_team"
        },
        {
            "con": {
                "smart": "teamMembershipResource",
                "name": "TeamMembershipResource'"
            },
            "arguments": [
                {
                    "default": "_teamId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"team_id\" <$> TF.attribute",
                    "name": "_teamId",
                    "method": "teamId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTeamId",
                    "validate": false,
                    "optional": false,
                    "original": "team_id"
                },
                {
                    "default": "_userId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"user_id\" <$> TF.attribute",
                    "name": "_userId",
                    "method": "userId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserId",
                    "validate": false,
                    "optional": false,
                    "original": "user_id"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/team_membership.html",
            "name": "TeamMembershipResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_teamId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"team_id\" <$> TF.attribute",
                    "name": "_teamId",
                    "method": "teamId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTeamId",
                    "validate": false,
                    "optional": false,
                    "original": "team_id"
                },
                {
                    "default": "_userId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"user_id\" <$> TF.attribute",
                    "name": "_userId",
                    "method": "userId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserId",
                    "validate": false,
                    "optional": false,
                    "original": "user_id"
                }
            ],
            "conflicts": [],
            "type": "TeamMembershipResource s",
            "original": "pagerduty_team_membership"
        },
        {
            "con": {
                "smart": "userResource",
                "name": "UserResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"Managed by Terraform\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_email",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"job_title\" <$> TF.attribute",
                    "name": "_jobTitle",
                    "method": "jobTitle",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasJobTitle",
                    "validate": false,
                    "optional": true,
                    "original": "job_title"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"user\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": true,
                    "original": "role"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"teams\" <$> TF.attribute",
                    "name": "_teams",
                    "method": "teams",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTeams",
                    "validate": false,
                    "optional": true,
                    "original": "teams"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/user.html",
            "name": "UserResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"avatar_url\" <$> TF.attribute",
                    "name": "_computedAvatarUrl",
                    "method": "computedAvatarUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAvatarUrl",
                    "validate": false,
                    "optional": false,
                    "original": "avatar_url"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"color\" <$> TF.attribute",
                    "name": "_computedColor",
                    "method": "computedColor",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedColor",
                    "validate": false,
                    "optional": true,
                    "original": "color"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"html_url\" <$> TF.attribute",
                    "name": "_computedHtmlUrl",
                    "method": "computedHtmlUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHtmlUrl",
                    "validate": false,
                    "optional": false,
                    "original": "html_url"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"invitation_sent\" <$> TF.attribute",
                    "name": "_computedInvitationSent",
                    "method": "computedInvitationSent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedInvitationSent",
                    "validate": false,
                    "optional": false,
                    "original": "invitation_sent"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"time_zone\" <$> TF.attribute",
                    "name": "_computedTimeZone",
                    "method": "computedTimeZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTimeZone",
                    "validate": false,
                    "optional": true,
                    "original": "time_zone"
                }
            ],
            "parameters": [
                {
                    "default": "_email",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "UserResource s",
            "original": "pagerduty_user"
        },
        {
            "con": {
                "smart": "userContactMethodResource",
                "name": "UserContactMethodResource'"
            },
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"country_code\" <$> TF.attribute",
                    "name": "_countryCode",
                    "method": "countryCode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCountryCode",
                    "validate": false,
                    "optional": true,
                    "original": "country_code"
                },
                {
                    "default": "_label",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label\" <$> TF.attribute",
                    "name": "_label",
                    "method": "label",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLabel",
                    "validate": false,
                    "optional": false,
                    "original": "label"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"send_short_email\" <$> TF.attribute",
                    "name": "_sendShortEmail",
                    "method": "sendShortEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasSendShortEmail",
                    "validate": false,
                    "optional": true,
                    "original": "send_short_email"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                },
                {
                    "default": "_userId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_id\" <$> TF.attribute",
                    "name": "_userId",
                    "method": "userId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserId",
                    "validate": false,
                    "optional": false,
                    "original": "user_id"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/pagerduty/r/user_contact_method.html",
            "name": "UserContactMethodResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"blacklisted\" <$> TF.attribute",
                    "name": "_computedBlacklisted",
                    "method": "computedBlacklisted",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedBlacklisted",
                    "validate": false,
                    "optional": false,
                    "original": "blacklisted"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_computedEnabled",
                    "method": "computedEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnabled",
                    "validate": false,
                    "optional": false,
                    "original": "enabled"
                }
            ],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "_label",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label\" <$> TF.attribute",
                    "name": "_label",
                    "method": "label",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLabel",
                    "validate": false,
                    "optional": false,
                    "original": "label"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                },
                {
                    "default": "_userId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_id\" <$> TF.attribute",
                    "name": "_userId",
                    "method": "userId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserId",
                    "validate": false,
                    "optional": false,
                    "original": "user_id"
                }
            ],
            "conflicts": [],
            "type": "UserContactMethodResource s",
            "original": "pagerduty_user_contact_method"
        }
    ],
    "schema": {
        "con": {
            "smart": "newProvider",
            "name": "Provider'"
        },
        "arguments": [
            {
                "default": "P.False",
                "computed": false,
                "required": false,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"skip_credentials_validation\"",
                "name": "_skipCredentialsValidation",
                "method": "skipCredentialsValidation",
                "conflicts": [],
                "type": "P.Bool",
                "class": "HasSkipCredentialsValidation",
                "validate": false,
                "optional": true,
                "original": "skip_credentials_validation"
            },
            {
                "default": "_token",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"token\"",
                "name": "_token",
                "method": "token",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasToken",
                "validate": false,
                "optional": false,
                "original": "token"
            }
        ],
        "name": "Provider",
        "threaded": false,
        "attributes": [],
        "parameters": [
            {
                "default": "_token",
                "computed": false,
                "required": true,
                "help": [],
                "forceNew": false,
                "encoder": "P.Just $ TF.assign \"token\"",
                "name": "_token",
                "method": "token",
                "conflicts": [],
                "type": "P.Text",
                "class": "HasToken",
                "validate": false,
                "optional": false,
                "original": "token"
            }
        ],
        "conflicts": [],
        "type": "Provider",
        "original": "provider"
    },
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "PagerDuty",
    "package": "terrafomo-pagerduty",
    "original": "pagerduty"
}