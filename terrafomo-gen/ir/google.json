{
    "settings": [
        {
            "con": {
                "smart": "newNetworkInterface",
                "name": "NetworkInterface'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"access_config\" <$> TF.attribute",
                    "name": "_accessConfig",
                    "method": "accessConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AccessConfig s)]",
                    "class": "HasAccessConfig",
                    "validate": true,
                    "optional": true,
                    "original": "access_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"alias_ip_range\" <$> TF.attribute",
                    "name": "_aliasIpRange",
                    "method": "aliasIpRange",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AliasIpRange s)]",
                    "class": "HasAliasIpRange",
                    "validate": true,
                    "optional": true,
                    "original": "alias_ip_range"
                }
            ],
            "name": "NetworkInterface",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_computedAddress",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "validate": false,
                    "optional": true,
                    "original": "address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": true,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_computedSubnetwork",
                    "method": "computedSubnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetwork",
                    "validate": false,
                    "optional": true,
                    "original": "subnetwork"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork_project\" <$> TF.attribute",
                    "name": "_computedSubnetworkProject",
                    "method": "computedSubnetworkProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetworkProject",
                    "validate": false,
                    "optional": true,
                    "original": "subnetwork_project"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "NetworkInterface s",
            "original": "network_interface"
        },
        {
            "con": {
                "smart": "newSecondaryIpRange",
                "name": "SecondaryIpRange'"
            },
            "arguments": [],
            "name": "SecondaryIpRange",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_cidr_range\" <$> TF.attribute",
                    "name": "_computedIpCidrRange",
                    "method": "computedIpCidrRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpCidrRange",
                    "validate": false,
                    "optional": false,
                    "original": "ip_cidr_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"range_name\" <$> TF.attribute",
                    "name": "_computedRangeName",
                    "method": "computedRangeName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRangeName",
                    "validate": false,
                    "optional": false,
                    "original": "range_name"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "SecondaryIpRange s",
            "original": "secondary_ip_range"
        },
        {
            "con": {
                "smart": "newStatus",
                "name": "Status'"
            },
            "arguments": [],
            "name": "Status",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Output-only. Optional job state details, such as an error description if the",
                        "state is ERROR"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"details\" <$> TF.attribute",
                    "name": "_computedDetails",
                    "method": "computedDetails",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDetails",
                    "validate": false,
                    "optional": false,
                    "original": "details"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Output-only. A state message specifying the overall job state"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_computedState",
                    "method": "computedState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedState",
                    "validate": false,
                    "optional": false,
                    "original": "state"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Output-only. The time when this state was entered"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"state_start_time\" <$> TF.attribute",
                    "name": "_computedStateStartTime",
                    "method": "computedStateStartTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStateStartTime",
                    "validate": false,
                    "optional": false,
                    "original": "state_start_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Output-only. Additional state information, which includes status reported by",
                        "the agent"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"substate\" <$> TF.attribute",
                    "name": "_computedSubstate",
                    "method": "computedSubstate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubstate",
                    "validate": false,
                    "optional": false,
                    "original": "substate"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Status s",
            "original": "status"
        },
        {
            "con": {
                "smart": "newBootDisk",
                "name": "BootDisk'"
            },
            "arguments": [],
            "name": "BootDisk",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"auto_delete\" <$> TF.attribute",
                    "name": "_computedAutoDelete",
                    "method": "computedAutoDelete",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAutoDelete",
                    "validate": false,
                    "optional": true,
                    "original": "auto_delete"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"device_name\" <$> TF.attribute",
                    "name": "_computedDeviceName",
                    "method": "computedDeviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDeviceName",
                    "validate": false,
                    "optional": true,
                    "original": "device_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_encryption_key_raw\" <$> TF.attribute",
                    "name": "_computedDiskEncryptionKeyRaw",
                    "method": "computedDiskEncryptionKeyRaw",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskEncryptionKeyRaw",
                    "validate": false,
                    "optional": true,
                    "original": "disk_encryption_key_raw"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_encryption_key_sha256\" <$> TF.attribute",
                    "name": "_computedDiskEncryptionKeySha256",
                    "method": "computedDiskEncryptionKeySha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskEncryptionKeySha256",
                    "validate": false,
                    "optional": false,
                    "original": "disk_encryption_key_sha256"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"initialize_params\" <$> TF.attribute",
                    "name": "_computedInitializeParams",
                    "method": "computedInitializeParams",
                    "conflicts": [],
                    "type": "TF.Attr s (InitializeParams s)",
                    "class": "HasComputedInitializeParams",
                    "validate": true,
                    "optional": true,
                    "original": "initialize_params"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_computedSource",
                    "method": "computedSource",
                    "conflicts": [
                        "_initializeParams"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSource",
                    "validate": false,
                    "optional": true,
                    "original": "source"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "BootDisk s",
            "original": "boot_disk"
        },
        {
            "con": {
                "smart": "newHiveConfig",
                "name": "HiveConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"continue_on_failure\" <$> TF.attribute",
                    "name": "_continueOnFailure",
                    "method": "continueOnFailure",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasContinueOnFailure",
                    "validate": false,
                    "optional": true,
                    "original": "continue_on_failure"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"jar_file_uris\" <$> TF.attribute",
                    "name": "_jarFileUris",
                    "method": "jarFileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasJarFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "jar_file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "_properties",
                    "method": "properties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasProperties",
                    "validate": false,
                    "optional": true,
                    "original": "properties"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_file_uri\" <$> TF.attribute",
                    "name": "_queryFileUri",
                    "method": "queryFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryList",
                            "method": "queryList"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQueryFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "query_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_list\" <$> TF.attribute",
                    "name": "_queryList",
                    "method": "queryList",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryFileUri",
                            "method": "queryFileUri"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasQueryList",
                    "validate": false,
                    "optional": true,
                    "original": "query_list"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"script_variables\" <$> TF.attribute",
                    "name": "_scriptVariables",
                    "method": "scriptVariables",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasScriptVariables",
                    "validate": false,
                    "optional": true,
                    "original": "script_variables"
                }
            ],
            "name": "HiveConfig",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_file_uri\" <$> TF.attribute",
                    "name": "_queryFileUri",
                    "method": "queryFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryList",
                            "method": "queryList"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQueryFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "query_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_list\" <$> TF.attribute",
                    "name": "_queryList",
                    "method": "queryList",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryFileUri",
                            "method": "queryFileUri"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasQueryList",
                    "validate": false,
                    "optional": true,
                    "original": "query_list"
                }
            ],
            "type": "HiveConfig s",
            "original": "hive_config"
        },
        {
            "con": {
                "smart": "newRestorePolicy",
                "name": "RestorePolicy'"
            },
            "arguments": [
                {
                    "default": "_default'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default\" <$> TF.attribute",
                    "name": "_default'",
                    "method": "default'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDefault'",
                    "validate": false,
                    "optional": false,
                    "original": "default"
                }
            ],
            "name": "RestorePolicy",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_default'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default\" <$> TF.attribute",
                    "name": "_default'",
                    "method": "default'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDefault'",
                    "validate": false,
                    "optional": false,
                    "original": "default"
                }
            ],
            "conflicts": [],
            "type": "RestorePolicy s",
            "original": "restore_policy"
        },
        {
            "con": {
                "smart": "newLoadBalancingUtilization",
                "name": "LoadBalancingUtilization'"
            },
            "arguments": [
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "name": "LoadBalancingUtilization",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "conflicts": [],
            "type": "LoadBalancingUtilization s",
            "original": "load_balancing_utilization"
        },
        {
            "con": {
                "smart": "newHttpHealthCheck",
                "name": "HttpHealthCheck'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": true,
                    "original": "host"
                },
                {
                    "default": "TF.value 80",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_header\" <$> TF.attribute",
                    "name": "_proxyHeader",
                    "method": "proxyHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProxyHeader",
                    "validate": false,
                    "optional": true,
                    "original": "proxy_header"
                },
                {
                    "default": "TF.value \"/\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_path\" <$> TF.attribute",
                    "name": "_requestPath",
                    "method": "requestPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestPath",
                    "validate": false,
                    "optional": true,
                    "original": "request_path"
                }
            ],
            "name": "HttpHealthCheck",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "HttpHealthCheck s",
            "original": "http_health_check"
        },
        {
            "con": {
                "smart": "newAutoscaling",
                "name": "Autoscaling'"
            },
            "arguments": [],
            "name": "Autoscaling",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_node_count\" <$> TF.attribute",
                    "name": "_computedMaxNodeCount",
                    "method": "computedMaxNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxNodeCount",
                    "validate": false,
                    "optional": false,
                    "original": "max_node_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_node_count\" <$> TF.attribute",
                    "name": "_computedMinNodeCount",
                    "method": "computedMinNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMinNodeCount",
                    "validate": false,
                    "optional": false,
                    "original": "min_node_count"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Autoscaling s",
            "original": "autoscaling"
        },
        {
            "con": {
                "smart": "newConfig",
                "name": "Config'"
            },
            "arguments": [
                {
                    "default": "_srcIpRanges",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"src_ip_ranges\" <$> TF.attribute",
                    "name": "_srcIpRanges",
                    "method": "srcIpRanges",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasSrcIpRanges",
                    "validate": false,
                    "optional": false,
                    "original": "src_ip_ranges"
                }
            ],
            "name": "Config",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_srcIpRanges",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"src_ip_ranges\" <$> TF.attribute",
                    "name": "_srcIpRanges",
                    "method": "srcIpRanges",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasSrcIpRanges",
                    "validate": false,
                    "optional": false,
                    "original": "src_ip_ranges"
                }
            ],
            "conflicts": [],
            "type": "Config s",
            "original": "config"
        },
        {
            "con": {
                "smart": "newHttpConfig",
                "name": "HttpConfig'"
            },
            "arguments": [
                {
                    "default": "_httpEnabledState",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_enabled_state\" <$> TF.attribute",
                    "name": "_httpEnabledState",
                    "method": "httpEnabledState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHttpEnabledState",
                    "validate": false,
                    "optional": false,
                    "original": "http_enabled_state"
                }
            ],
            "name": "HttpConfig",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_httpEnabledState",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_enabled_state\" <$> TF.attribute",
                    "name": "_httpEnabledState",
                    "method": "httpEnabledState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHttpEnabledState",
                    "validate": false,
                    "optional": false,
                    "original": "http_enabled_state"
                }
            ],
            "conflicts": [],
            "type": "HttpConfig s",
            "original": "http_config"
        },
        {
            "con": {
                "smart": "newListPolicy",
                "name": "ListPolicy'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow\" <$> TF.attribute",
                    "name": "_allow",
                    "method": "allow",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_deny",
                            "method": "deny"
                        }
                    ],
                    "type": "TF.Attr s (Allow s)",
                    "class": "HasAllow",
                    "validate": true,
                    "optional": true,
                    "original": "allow"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deny\" <$> TF.attribute",
                    "name": "_deny",
                    "method": "deny",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_allow",
                            "method": "allow"
                        }
                    ],
                    "type": "TF.Attr s (Deny s)",
                    "class": "HasDeny",
                    "validate": true,
                    "optional": true,
                    "original": "deny"
                }
            ],
            "name": "ListPolicy",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"suggested_value\" <$> TF.attribute",
                    "name": "_computedSuggestedValue",
                    "method": "computedSuggestedValue",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSuggestedValue",
                    "validate": false,
                    "optional": true,
                    "original": "suggested_value"
                }
            ],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow\" <$> TF.attribute",
                    "name": "_allow",
                    "method": "allow",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_deny",
                            "method": "deny"
                        }
                    ],
                    "type": "TF.Attr s (Allow s)",
                    "class": "HasAllow",
                    "validate": true,
                    "optional": true,
                    "original": "allow"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deny\" <$> TF.attribute",
                    "name": "_deny",
                    "method": "deny",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_allow",
                            "method": "allow"
                        }
                    ],
                    "type": "TF.Attr s (Deny s)",
                    "class": "HasDeny",
                    "validate": true,
                    "optional": true,
                    "original": "deny"
                }
            ],
            "type": "ListPolicy s",
            "original": "list_policy"
        },
        {
            "con": {
                "smart": "newNamedPort",
                "name": "NamedPort'"
            },
            "arguments": [],
            "name": "NamedPort",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_computedPort",
                    "method": "computedPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPort",
                    "validate": false,
                    "optional": false,
                    "original": "port"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "NamedPort s",
            "original": "named_port"
        },
        {
            "con": {
                "smart": "newDisk",
                "name": "Disk'"
            },
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"auto_delete\" <$> TF.attribute",
                    "name": "_autoDelete",
                    "method": "autoDelete",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoDelete",
                    "validate": false,
                    "optional": true,
                    "original": "auto_delete"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_name\" <$> TF.attribute",
                    "name": "_diskName",
                    "method": "diskName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDiskName",
                    "validate": false,
                    "optional": true,
                    "original": "disk_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_size_gb\" <$> TF.attribute",
                    "name": "_diskSizeGb",
                    "method": "diskSizeGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDiskSizeGb",
                    "validate": false,
                    "optional": true,
                    "original": "disk_size_gb"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": true,
                    "original": "source"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_image\" <$> TF.attribute",
                    "name": "_sourceImage",
                    "method": "sourceImage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceImage",
                    "validate": false,
                    "optional": true,
                    "original": "source_image"
                }
            ],
            "name": "Disk",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"boot\" <$> TF.attribute",
                    "name": "_computedBoot",
                    "method": "computedBoot",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedBoot",
                    "validate": false,
                    "optional": true,
                    "original": "boot"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"device_name\" <$> TF.attribute",
                    "name": "_computedDeviceName",
                    "method": "computedDeviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDeviceName",
                    "validate": false,
                    "optional": true,
                    "original": "device_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_type\" <$> TF.attribute",
                    "name": "_computedDiskType",
                    "method": "computedDiskType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskType",
                    "validate": false,
                    "optional": true,
                    "original": "disk_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"interface\" <$> TF.attribute",
                    "name": "_computedInterface",
                    "method": "computedInterface",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInterface",
                    "validate": false,
                    "optional": true,
                    "original": "interface"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "_computedMode",
                    "method": "computedMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMode",
                    "validate": false,
                    "optional": true,
                    "original": "mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Disk s",
            "original": "disk"
        },
        {
            "con": {
                "smart": "newDiskEncryptionKey",
                "name": "DiskEncryptionKey'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"raw_key\" <$> TF.attribute",
                    "name": "_rawKey",
                    "method": "rawKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRawKey",
                    "validate": false,
                    "optional": true,
                    "original": "raw_key"
                }
            ],
            "name": "DiskEncryptionKey",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha256\" <$> TF.attribute",
                    "name": "_computedSha256",
                    "method": "computedSha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha256",
                    "validate": false,
                    "optional": false,
                    "original": "sha256"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "DiskEncryptionKey s",
            "original": "disk_encryption_key"
        },
        {
            "con": {
                "smart": "newSettings",
                "name": "Settings'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"authorized_gae_applications\" <$> TF.attribute",
                    "name": "_authorizedGaeApplications",
                    "method": "authorizedGaeApplications",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasAuthorizedGaeApplications",
                    "validate": false,
                    "optional": true,
                    "original": "authorized_gae_applications"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"database_flags\" <$> TF.attribute",
                    "name": "_databaseFlags",
                    "method": "databaseFlags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (DatabaseFlags s)]",
                    "class": "HasDatabaseFlags",
                    "validate": true,
                    "optional": true,
                    "original": "database_flags"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_autoresize\" <$> TF.attribute",
                    "name": "_diskAutoresize",
                    "method": "diskAutoresize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDiskAutoresize",
                    "validate": false,
                    "optional": true,
                    "original": "disk_autoresize"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"maintenance_window\" <$> TF.attribute",
                    "name": "_maintenanceWindow",
                    "method": "maintenanceWindow",
                    "conflicts": [],
                    "type": "TF.Attr s (MaintenanceWindow s)",
                    "class": "HasMaintenanceWindow",
                    "validate": true,
                    "optional": true,
                    "original": "maintenance_window"
                },
                {
                    "default": "TF.value \"PER_USE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pricing_plan\" <$> TF.attribute",
                    "name": "_pricingPlan",
                    "method": "pricingPlan",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPricingPlan",
                    "validate": false,
                    "optional": true,
                    "original": "pricing_plan"
                },
                {
                    "default": "TF.value \"SYNCHRONOUS\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"replication_type\" <$> TF.attribute",
                    "name": "_replicationType",
                    "method": "replicationType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasReplicationType",
                    "validate": false,
                    "optional": true,
                    "original": "replication_type"
                },
                {
                    "default": "_tier",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tier\" <$> TF.attribute",
                    "name": "_tier",
                    "method": "tier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTier",
                    "validate": false,
                    "optional": false,
                    "original": "tier"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_labels\" <$> TF.attribute",
                    "name": "_userLabels",
                    "method": "userLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasUserLabels",
                    "validate": false,
                    "optional": true,
                    "original": "user_labels"
                }
            ],
            "name": "Settings",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"activation_policy\" <$> TF.attribute",
                    "name": "_computedActivationPolicy",
                    "method": "computedActivationPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedActivationPolicy",
                    "validate": false,
                    "optional": true,
                    "original": "activation_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"availability_type\" <$> TF.attribute",
                    "name": "_computedAvailabilityType",
                    "method": "computedAvailabilityType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAvailabilityType",
                    "validate": false,
                    "optional": true,
                    "original": "availability_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backup_configuration\" <$> TF.attribute",
                    "name": "_computedBackupConfiguration",
                    "method": "computedBackupConfiguration",
                    "conflicts": [],
                    "type": "TF.Attr s (BackupConfiguration s)",
                    "class": "HasComputedBackupConfiguration",
                    "validate": true,
                    "optional": true,
                    "original": "backup_configuration"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"crash_safe_replication\" <$> TF.attribute",
                    "name": "_computedCrashSafeReplication",
                    "method": "computedCrashSafeReplication",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedCrashSafeReplication",
                    "validate": false,
                    "optional": true,
                    "original": "crash_safe_replication"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_size\" <$> TF.attribute",
                    "name": "_computedDiskSize",
                    "method": "computedDiskSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDiskSize",
                    "validate": false,
                    "optional": true,
                    "original": "disk_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_type\" <$> TF.attribute",
                    "name": "_computedDiskType",
                    "method": "computedDiskType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskType",
                    "validate": false,
                    "optional": true,
                    "original": "disk_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_configuration\" <$> TF.attribute",
                    "name": "_computedIpConfiguration",
                    "method": "computedIpConfiguration",
                    "conflicts": [],
                    "type": "TF.Attr s (IpConfiguration s)",
                    "class": "HasComputedIpConfiguration",
                    "validate": true,
                    "optional": true,
                    "original": "ip_configuration"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"location_preference\" <$> TF.attribute",
                    "name": "_computedLocationPreference",
                    "method": "computedLocationPreference",
                    "conflicts": [],
                    "type": "TF.Attr s (LocationPreference s)",
                    "class": "HasComputedLocationPreference",
                    "validate": true,
                    "optional": true,
                    "original": "location_preference"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": false,
                    "original": "version"
                }
            ],
            "parameters": [
                {
                    "default": "_tier",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tier\" <$> TF.attribute",
                    "name": "_tier",
                    "method": "tier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTier",
                    "validate": false,
                    "optional": false,
                    "original": "tier"
                }
            ],
            "conflicts": [],
            "type": "Settings s",
            "original": "settings"
        },
        {
            "con": {
                "smart": "newBgp",
                "name": "Bgp'"
            },
            "arguments": [
                {
                    "default": "TF.value \"DEFAULT\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advertise_mode\" <$> TF.attribute",
                    "name": "_advertiseMode",
                    "method": "advertiseMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAdvertiseMode",
                    "validate": false,
                    "optional": true,
                    "original": "advertise_mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advertised_groups\" <$> TF.attribute",
                    "name": "_advertisedGroups",
                    "method": "advertisedGroups",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasAdvertisedGroups",
                    "validate": false,
                    "optional": true,
                    "original": "advertised_groups"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"advertised_ip_ranges\" <$> TF.attribute",
                    "name": "_advertisedIpRanges",
                    "method": "advertisedIpRanges",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AdvertisedIpRanges s)]",
                    "class": "HasAdvertisedIpRanges",
                    "validate": true,
                    "optional": true,
                    "original": "advertised_ip_ranges"
                },
                {
                    "default": "_asn",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"asn\" <$> TF.attribute",
                    "name": "_asn",
                    "method": "asn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAsn",
                    "validate": false,
                    "optional": false,
                    "original": "asn"
                }
            ],
            "name": "Bgp",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_asn",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"asn\" <$> TF.attribute",
                    "name": "_asn",
                    "method": "asn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAsn",
                    "validate": false,
                    "optional": false,
                    "original": "asn"
                }
            ],
            "conflicts": [],
            "type": "Bgp s",
            "original": "bgp"
        },
        {
            "con": {
                "smart": "newDatabaseFlags",
                "name": "DatabaseFlags'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "validate": false,
                    "optional": true,
                    "original": "value"
                }
            ],
            "name": "DatabaseFlags",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "DatabaseFlags s",
            "original": "database_flags"
        },
        {
            "con": {
                "smart": "newAuthorizedNetworks",
                "name": "AuthorizedNetworks'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expiration_time\" <$> TF.attribute",
                    "name": "_expirationTime",
                    "method": "expirationTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpirationTime",
                    "validate": false,
                    "optional": true,
                    "original": "expiration_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "validate": false,
                    "optional": true,
                    "original": "value"
                }
            ],
            "name": "AuthorizedNetworks",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "AuthorizedNetworks s",
            "original": "authorized_networks"
        },
        {
            "con": {
                "smart": "newPreemptibleWorkerConfig",
                "name": "PreemptibleWorkerConfig'"
            },
            "arguments": [],
            "name": "PreemptibleWorkerConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_config\" <$> TF.attribute",
                    "name": "_computedDiskConfig",
                    "method": "computedDiskConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (DiskConfig s)",
                    "class": "HasComputedDiskConfig",
                    "validate": true,
                    "optional": true,
                    "original": "disk_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_names\" <$> TF.attribute",
                    "name": "_computedInstanceNames",
                    "method": "computedInstanceNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstanceNames",
                    "validate": false,
                    "optional": false,
                    "original": "instance_names"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_instances\" <$> TF.attribute",
                    "name": "_computedNumInstances",
                    "method": "computedNumInstances",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNumInstances",
                    "validate": false,
                    "optional": true,
                    "original": "num_instances"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "PreemptibleWorkerConfig s",
            "original": "preemptible_worker_config"
        },
        {
            "con": {
                "smart": "newAutoscalingPolicy",
                "name": "AutoscalingPolicy'"
            },
            "arguments": [
                {
                    "default": "TF.value 60",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cooldown_period\" <$> TF.attribute",
                    "name": "_cooldownPeriod",
                    "method": "cooldownPeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCooldownPeriod",
                    "validate": false,
                    "optional": true,
                    "original": "cooldown_period"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"load_balancing_utilization\" <$> TF.attribute",
                    "name": "_loadBalancingUtilization",
                    "method": "loadBalancingUtilization",
                    "conflicts": [],
                    "type": "TF.Attr s (LoadBalancingUtilization s)",
                    "class": "HasLoadBalancingUtilization",
                    "validate": true,
                    "optional": true,
                    "original": "load_balancing_utilization"
                },
                {
                    "default": "_maxReplicas",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_replicas\" <$> TF.attribute",
                    "name": "_maxReplicas",
                    "method": "maxReplicas",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxReplicas",
                    "validate": false,
                    "optional": false,
                    "original": "max_replicas"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metric\" <$> TF.attribute",
                    "name": "_metric",
                    "method": "metric",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Metric s)]",
                    "class": "HasMetric",
                    "validate": true,
                    "optional": true,
                    "original": "metric"
                },
                {
                    "default": "_minReplicas",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_replicas\" <$> TF.attribute",
                    "name": "_minReplicas",
                    "method": "minReplicas",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinReplicas",
                    "validate": false,
                    "optional": false,
                    "original": "min_replicas"
                }
            ],
            "name": "AutoscalingPolicy",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cpu_utilization\" <$> TF.attribute",
                    "name": "_computedCpuUtilization",
                    "method": "computedCpuUtilization",
                    "conflicts": [],
                    "type": "TF.Attr s (CpuUtilization s)",
                    "class": "HasComputedCpuUtilization",
                    "validate": true,
                    "optional": true,
                    "original": "cpu_utilization"
                }
            ],
            "parameters": [
                {
                    "default": "_maxReplicas",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_replicas\" <$> TF.attribute",
                    "name": "_maxReplicas",
                    "method": "maxReplicas",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxReplicas",
                    "validate": false,
                    "optional": false,
                    "original": "max_replicas"
                },
                {
                    "default": "_minReplicas",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_replicas\" <$> TF.attribute",
                    "name": "_minReplicas",
                    "method": "minReplicas",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinReplicas",
                    "validate": false,
                    "optional": false,
                    "original": "min_replicas"
                }
            ],
            "conflicts": [],
            "type": "AutoscalingPolicy s",
            "original": "autoscaling_policy"
        },
        {
            "con": {
                "smart": "newCredentials",
                "name": "Credentials'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public_key_certificate\" <$> TF.attribute",
                    "name": "_publicKeyCertificate",
                    "method": "publicKeyCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (PublicKeyCertificate s))",
                    "class": "HasPublicKeyCertificate",
                    "validate": true,
                    "optional": true,
                    "original": "public_key_certificate"
                }
            ],
            "name": "Credentials",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Credentials s",
            "original": "credentials"
        },
        {
            "con": {
                "smart": "newDailyMaintenanceWindow",
                "name": "DailyMaintenanceWindow'"
            },
            "arguments": [],
            "name": "DailyMaintenanceWindow",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"duration\" <$> TF.attribute",
                    "name": "_computedDuration",
                    "method": "computedDuration",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDuration",
                    "validate": false,
                    "optional": false,
                    "original": "duration"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time\" <$> TF.attribute",
                    "name": "_computedStartTime",
                    "method": "computedStartTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStartTime",
                    "validate": false,
                    "optional": false,
                    "original": "start_time"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "DailyMaintenanceWindow s",
            "original": "daily_maintenance_window"
        },
        {
            "con": {
                "smart": "newIap",
                "name": "Iap'"
            },
            "arguments": [],
            "name": "Iap",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"oauth2_client_id\" <$> TF.attribute",
                    "name": "_computedOauth2ClientId",
                    "method": "computedOauth2ClientId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOauth2ClientId",
                    "validate": false,
                    "optional": false,
                    "original": "oauth2_client_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"oauth2_client_secret\" <$> TF.attribute",
                    "name": "_computedOauth2ClientSecret",
                    "method": "computedOauth2ClientSecret",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOauth2ClientSecret",
                    "validate": false,
                    "optional": false,
                    "original": "oauth2_client_secret"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Iap s",
            "original": "iap"
        },
        {
            "con": {
                "smart": "newDiskConfig",
                "name": "DiskConfig'"
            },
            "arguments": [],
            "name": "DiskConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"boot_disk_size_gb\" <$> TF.attribute",
                    "name": "_computedBootDiskSizeGb",
                    "method": "computedBootDiskSizeGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedBootDiskSizeGb",
                    "validate": false,
                    "optional": true,
                    "original": "boot_disk_size_gb"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"num_local_ssds\" <$> TF.attribute",
                    "name": "_computedNumLocalSsds",
                    "method": "computedNumLocalSsds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNumLocalSsds",
                    "validate": false,
                    "optional": true,
                    "original": "num_local_ssds"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "DiskConfig s",
            "original": "disk_config"
        },
        {
            "con": {
                "smart": "newAttachedDisk",
                "name": "AttachedDisk'"
            },
            "arguments": [
                {
                    "default": "_source",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": false,
                    "original": "source"
                }
            ],
            "name": "AttachedDisk",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device_name\" <$> TF.attribute",
                    "name": "_computedDeviceName",
                    "method": "computedDeviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDeviceName",
                    "validate": false,
                    "optional": true,
                    "original": "device_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_encryption_key_raw\" <$> TF.attribute",
                    "name": "_computedDiskEncryptionKeyRaw",
                    "method": "computedDiskEncryptionKeyRaw",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskEncryptionKeyRaw",
                    "validate": false,
                    "optional": true,
                    "original": "disk_encryption_key_raw"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_encryption_key_sha256\" <$> TF.attribute",
                    "name": "_computedDiskEncryptionKeySha256",
                    "method": "computedDiskEncryptionKeySha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskEncryptionKeySha256",
                    "validate": false,
                    "optional": false,
                    "original": "disk_encryption_key_sha256"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mode\" <$> TF.attribute",
                    "name": "_computedMode",
                    "method": "computedMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMode",
                    "validate": false,
                    "optional": true,
                    "original": "mode"
                }
            ],
            "parameters": [
                {
                    "default": "_source",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": false,
                    "original": "source"
                }
            ],
            "conflicts": [],
            "type": "AttachedDisk s",
            "original": "attached_disk"
        },
        {
            "con": {
                "smart": "newStateNotificationConfig",
                "name": "StateNotificationConfig'"
            },
            "arguments": [
                {
                    "default": "_pubsubTopicName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pubsub_topic_name\" <$> TF.attribute",
                    "name": "_pubsubTopicName",
                    "method": "pubsubTopicName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPubsubTopicName",
                    "validate": false,
                    "optional": false,
                    "original": "pubsub_topic_name"
                }
            ],
            "name": "StateNotificationConfig",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_pubsubTopicName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pubsub_topic_name\" <$> TF.attribute",
                    "name": "_pubsubTopicName",
                    "method": "pubsubTopicName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPubsubTopicName",
                    "validate": false,
                    "optional": false,
                    "original": "pubsub_topic_name"
                }
            ],
            "conflicts": [],
            "type": "StateNotificationConfig s",
            "original": "state_notification_config"
        },
        {
            "con": {
                "smart": "newManagement",
                "name": "Management'"
            },
            "arguments": [],
            "name": "Management",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_repair\" <$> TF.attribute",
                    "name": "_computedAutoRepair",
                    "method": "computedAutoRepair",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAutoRepair",
                    "validate": false,
                    "optional": false,
                    "original": "auto_repair"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_upgrade\" <$> TF.attribute",
                    "name": "_computedAutoUpgrade",
                    "method": "computedAutoUpgrade",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAutoUpgrade",
                    "validate": false,
                    "optional": false,
                    "original": "auto_upgrade"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Management s",
            "original": "management"
        },
        {
            "con": {
                "smart": "newInitializeParams",
                "name": "InitializeParams'"
            },
            "arguments": [],
            "name": "InitializeParams",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "_computedImage",
                    "method": "computedImage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImage",
                    "validate": false,
                    "optional": true,
                    "original": "image"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_computedSize",
                    "method": "computedSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSize",
                    "validate": false,
                    "optional": true,
                    "original": "size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "InitializeParams s",
            "original": "initialize_params"
        },
        {
            "con": {
                "smart": "newCacheKeyPolicy",
                "name": "CacheKeyPolicy'"
            },
            "arguments": [],
            "name": "CacheKeyPolicy",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"include_host\" <$> TF.attribute",
                    "name": "_computedIncludeHost",
                    "method": "computedIncludeHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIncludeHost",
                    "validate": false,
                    "optional": false,
                    "original": "include_host"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"include_protocol\" <$> TF.attribute",
                    "name": "_computedIncludeProtocol",
                    "method": "computedIncludeProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIncludeProtocol",
                    "validate": false,
                    "optional": false,
                    "original": "include_protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"include_query_string\" <$> TF.attribute",
                    "name": "_computedIncludeQueryString",
                    "method": "computedIncludeQueryString",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIncludeQueryString",
                    "validate": false,
                    "optional": false,
                    "original": "include_query_string"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_string_blacklist\" <$> TF.attribute",
                    "name": "_computedQueryStringBlacklist",
                    "method": "computedQueryStringBlacklist",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedQueryStringBlacklist",
                    "validate": false,
                    "optional": false,
                    "original": "query_string_blacklist"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query_string_whitelist\" <$> TF.attribute",
                    "name": "_computedQueryStringWhitelist",
                    "method": "computedQueryStringWhitelist",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedQueryStringWhitelist",
                    "validate": false,
                    "optional": false,
                    "original": "query_string_whitelist"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "CacheKeyPolicy s",
            "original": "cache_key_policy"
        },
        {
            "con": {
                "smart": "newMasterAuth",
                "name": "MasterAuth'"
            },
            "arguments": [],
            "name": "MasterAuth",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"client_certificate\" <$> TF.attribute",
                    "name": "_computedClientCertificate",
                    "method": "computedClientCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClientCertificate",
                    "validate": false,
                    "optional": false,
                    "original": "client_certificate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"client_certificate_config\" <$> TF.attribute",
                    "name": "_computedClientCertificateConfig",
                    "method": "computedClientCertificateConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ClientCertificateConfig s)]",
                    "class": "HasComputedClientCertificateConfig",
                    "validate": true,
                    "optional": false,
                    "original": "client_certificate_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"client_key\" <$> TF.attribute",
                    "name": "_computedClientKey",
                    "method": "computedClientKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClientKey",
                    "validate": false,
                    "optional": false,
                    "original": "client_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_ca_certificate\" <$> TF.attribute",
                    "name": "_computedClusterCaCertificate",
                    "method": "computedClusterCaCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClusterCaCertificate",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_ca_certificate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"password\" <$> TF.attribute",
                    "name": "_computedPassword",
                    "method": "computedPassword",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPassword",
                    "validate": false,
                    "optional": false,
                    "original": "password"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"username\" <$> TF.attribute",
                    "name": "_computedUsername",
                    "method": "computedUsername",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUsername",
                    "validate": false,
                    "optional": false,
                    "original": "username"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "MasterAuth s",
            "original": "master_auth"
        },
        {
            "con": {
                "smart": "newReference",
                "name": "Reference'"
            },
            "arguments": [],
            "name": "Reference",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The job ID, which must be unique within the project. The job ID is generated",
                        "by the server upon job submission or provided by the user as a means to",
                        "perform retries without creating duplicate jobs"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"job_id\" <$> TF.attribute",
                    "name": "_computedJobId",
                    "method": "computedJobId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedJobId",
                    "validate": false,
                    "optional": true,
                    "original": "job_id"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Reference s",
            "original": "reference"
        },
        {
            "con": {
                "smart": "newWebsite",
                "name": "Website'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"main_page_suffix\" <$> TF.attribute",
                    "name": "_mainPageSuffix",
                    "method": "mainPageSuffix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainPageSuffix",
                    "validate": false,
                    "optional": true,
                    "original": "main_page_suffix"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"not_found_page\" <$> TF.attribute",
                    "name": "_notFoundPage",
                    "method": "notFoundPage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNotFoundPage",
                    "validate": false,
                    "optional": true,
                    "original": "not_found_page"
                }
            ],
            "name": "Website",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Website s",
            "original": "website"
        },
        {
            "con": {
                "smart": "newEventNotificationConfig",
                "name": "EventNotificationConfig'"
            },
            "arguments": [
                {
                    "default": "_pubsubTopicName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pubsub_topic_name\" <$> TF.attribute",
                    "name": "_pubsubTopicName",
                    "method": "pubsubTopicName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPubsubTopicName",
                    "validate": false,
                    "optional": false,
                    "original": "pubsub_topic_name"
                }
            ],
            "name": "EventNotificationConfig",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_pubsubTopicName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pubsub_topic_name\" <$> TF.attribute",
                    "name": "_pubsubTopicName",
                    "method": "pubsubTopicName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPubsubTopicName",
                    "validate": false,
                    "optional": false,
                    "original": "pubsub_topic_name"
                }
            ],
            "conflicts": [],
            "type": "EventNotificationConfig s",
            "original": "event_notification_config"
        },
        {
            "con": {
                "smart": "newNodePool",
                "name": "NodePool'"
            },
            "arguments": [],
            "name": "NodePool",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscaling\" <$> TF.attribute",
                    "name": "_computedAutoscaling",
                    "method": "computedAutoscaling",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Autoscaling s)]",
                    "class": "HasComputedAutoscaling",
                    "validate": true,
                    "optional": false,
                    "original": "autoscaling"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_node_count\" <$> TF.attribute",
                    "name": "_computedInitialNodeCount",
                    "method": "computedInitialNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedInitialNodeCount",
                    "validate": false,
                    "optional": false,
                    "original": "initial_node_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_group_urls\" <$> TF.attribute",
                    "name": "_computedInstanceGroupUrls",
                    "method": "computedInstanceGroupUrls",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstanceGroupUrls",
                    "validate": false,
                    "optional": false,
                    "original": "instance_group_urls"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"management\" <$> TF.attribute",
                    "name": "_computedManagement",
                    "method": "computedManagement",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Management s)]",
                    "class": "HasComputedManagement",
                    "validate": true,
                    "optional": false,
                    "original": "management"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name_prefix\" <$> TF.attribute",
                    "name": "_computedNamePrefix",
                    "method": "computedNamePrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNamePrefix",
                    "validate": false,
                    "optional": false,
                    "original": "name_prefix"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_config\" <$> TF.attribute",
                    "name": "_computedNodeConfig",
                    "method": "computedNodeConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NodeConfig s)]",
                    "class": "HasComputedNodeConfig",
                    "validate": true,
                    "optional": false,
                    "original": "node_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_count\" <$> TF.attribute",
                    "name": "_computedNodeCount",
                    "method": "computedNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNodeCount",
                    "validate": false,
                    "optional": false,
                    "original": "node_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": false,
                    "original": "version"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "NodePool s",
            "original": "node_pool"
        },
        {
            "con": {
                "smart": "newMasterAuthorizedNetworksConfig",
                "name": "MasterAuthorizedNetworksConfig'"
            },
            "arguments": [],
            "name": "MasterAuthorizedNetworksConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks\" <$> TF.attribute",
                    "name": "_computedCidrBlocks",
                    "method": "computedCidrBlocks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (CidrBlocks s)]",
                    "class": "HasComputedCidrBlocks",
                    "validate": true,
                    "optional": false,
                    "original": "cidr_blocks"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "MasterAuthorizedNetworksConfig s",
            "original": "master_authorized_networks_config"
        },
        {
            "con": {
                "smart": "newServiceAccount",
                "name": "ServiceAccount'"
            },
            "arguments": [
                {
                    "default": "_scopes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"scopes\" <$> TF.attribute",
                    "name": "_scopes",
                    "method": "scopes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasScopes",
                    "validate": false,
                    "optional": false,
                    "original": "scopes"
                }
            ],
            "name": "ServiceAccount",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_computedEmail",
                    "method": "computedEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmail",
                    "validate": false,
                    "optional": true,
                    "original": "email"
                }
            ],
            "parameters": [
                {
                    "default": "_scopes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"scopes\" <$> TF.attribute",
                    "name": "_scopes",
                    "method": "scopes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasScopes",
                    "validate": false,
                    "optional": false,
                    "original": "scopes"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccount s",
            "original": "service_account"
        },
        {
            "con": {
                "smart": "newApis",
                "name": "Apis'"
            },
            "arguments": [],
            "name": "Apis",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"methods\" <$> TF.attribute",
                    "name": "_computedMethods",
                    "method": "computedMethods",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Methods s)]",
                    "class": "HasComputedMethods",
                    "validate": true,
                    "optional": false,
                    "original": "methods"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"syntax\" <$> TF.attribute",
                    "name": "_computedSyntax",
                    "method": "computedSyntax",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSyntax",
                    "validate": false,
                    "optional": false,
                    "original": "syntax"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": false,
                    "original": "version"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Apis s",
            "original": "apis"
        },
        {
            "con": {
                "smart": "newTaint",
                "name": "Taint'"
            },
            "arguments": [],
            "name": "Taint",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"effect\" <$> TF.attribute",
                    "name": "_computedEffect",
                    "method": "computedEffect",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEffect",
                    "validate": false,
                    "optional": false,
                    "original": "effect"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "_computedKey",
                    "method": "computedKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedKey",
                    "validate": false,
                    "optional": false,
                    "original": "key"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_computedValue",
                    "method": "computedValue",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedValue",
                    "validate": false,
                    "optional": false,
                    "original": "value"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Taint s",
            "original": "taint"
        },
        {
            "con": {
                "smart": "newTest",
                "name": "Test'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_host",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": false,
                    "original": "host"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "name": "Test",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_host",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": false,
                    "original": "host"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "conflicts": [],
            "type": "Test s",
            "original": "test"
        },
        {
            "con": {
                "smart": "newRule",
                "name": "Rule'"
            },
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "validate": false,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_match",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"match\" <$> TF.attribute",
                    "name": "_match",
                    "method": "match",
                    "conflicts": [],
                    "type": "TF.Attr s (Match s)",
                    "class": "HasMatch",
                    "validate": true,
                    "optional": false,
                    "original": "match"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preview\" <$> TF.attribute",
                    "name": "_preview",
                    "method": "preview",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPreview",
                    "validate": false,
                    "optional": true,
                    "original": "preview"
                },
                {
                    "default": "_priority",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": false,
                    "original": "priority"
                }
            ],
            "name": "Rule",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "validate": false,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "_match",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"match\" <$> TF.attribute",
                    "name": "_match",
                    "method": "match",
                    "conflicts": [],
                    "type": "TF.Attr s (Match s)",
                    "class": "HasMatch",
                    "validate": true,
                    "optional": false,
                    "original": "match"
                },
                {
                    "default": "_priority",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": false,
                    "original": "priority"
                }
            ],
            "conflicts": [],
            "type": "Rule s",
            "original": "rule"
        },
        {
            "con": {
                "smart": "newFeatureSettings",
                "name": "FeatureSettings'"
            },
            "arguments": [],
            "name": "FeatureSettings",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"split_health_checks\" <$> TF.attribute",
                    "name": "_computedSplitHealthChecks",
                    "method": "computedSplitHealthChecks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedSplitHealthChecks",
                    "validate": false,
                    "optional": false,
                    "original": "split_health_checks"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "FeatureSettings s",
            "original": "feature_settings"
        },
        {
            "con": {
                "smart": "newNetwork",
                "name": "Network'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": true,
                    "original": "address"
                },
                {
                    "default": "_source",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": false,
                    "original": "source"
                }
            ],
            "name": "Network",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external_address\" <$> TF.attribute",
                    "name": "_computedExternalAddress",
                    "method": "computedExternalAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedExternalAddress",
                    "validate": false,
                    "optional": false,
                    "original": "external_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"internal_address\" <$> TF.attribute",
                    "name": "_computedInternalAddress",
                    "method": "computedInternalAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInternalAddress",
                    "validate": false,
                    "optional": false,
                    "original": "internal_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [
                {
                    "default": "_source",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": false,
                    "original": "source"
                }
            ],
            "conflicts": [],
            "type": "Network s",
            "original": "network"
        },
        {
            "con": {
                "smart": "newBuild",
                "name": "Build'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"images\" <$> TF.attribute",
                    "name": "_images",
                    "method": "images",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasImages",
                    "validate": false,
                    "optional": true,
                    "original": "images"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"step\" <$> TF.attribute",
                    "name": "_step",
                    "method": "step",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Step s)]",
                    "class": "HasStep",
                    "validate": true,
                    "optional": true,
                    "original": "step"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                }
            ],
            "name": "Build",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Build s",
            "original": "build"
        },
        {
            "con": {
                "smart": "newAction",
                "name": "Action'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"storage_class\" <$> TF.attribute",
                    "name": "_storageClass",
                    "method": "storageClass",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStorageClass",
                    "validate": false,
                    "optional": true,
                    "original": "storage_class"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "name": "Action",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "Action s",
            "original": "action"
        },
        {
            "con": {
                "smart": "newLoggingConfig",
                "name": "LoggingConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. The per-package log levels for the driver. This may include 'root'",
                        "package name to configure rootLogger. Examples: 'com.google = FATAL', 'root",
                        "= INFO', 'org.apache = DEBUG'."
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"driver_log_levels\" <$> TF.attribute",
                    "name": "_driverLogLevels",
                    "method": "driverLogLevels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasDriverLogLevels",
                    "validate": false,
                    "optional": true,
                    "original": "driver_log_levels"
                }
            ],
            "name": "LoggingConfig",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "LoggingConfig s",
            "original": "logging_config"
        },
        {
            "con": {
                "smart": "newRawDisk",
                "name": "RawDisk'"
            },
            "arguments": [
                {
                    "default": "TF.value \"TAR\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"container_type\" <$> TF.attribute",
                    "name": "_containerType",
                    "method": "containerType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerType",
                    "validate": false,
                    "optional": true,
                    "original": "container_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"sha1\" <$> TF.attribute",
                    "name": "_sha1",
                    "method": "sha1",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSha1",
                    "validate": false,
                    "optional": true,
                    "original": "sha1"
                },
                {
                    "default": "_source",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": false,
                    "original": "source"
                }
            ],
            "name": "RawDisk",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_source",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": false,
                    "original": "source"
                }
            ],
            "conflicts": [],
            "type": "RawDisk s",
            "original": "raw_disk"
        },
        {
            "con": {
                "smart": "newIpConfiguration",
                "name": "IpConfiguration'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"authorized_networks\" <$> TF.attribute",
                    "name": "_authorizedNetworks",
                    "method": "authorizedNetworks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AuthorizedNetworks s)]",
                    "class": "HasAuthorizedNetworks",
                    "validate": true,
                    "optional": true,
                    "original": "authorized_networks"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"require_ssl\" <$> TF.attribute",
                    "name": "_requireSsl",
                    "method": "requireSsl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasRequireSsl",
                    "validate": false,
                    "optional": true,
                    "original": "require_ssl"
                }
            ],
            "name": "IpConfiguration",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ipv4_enabled\" <$> TF.attribute",
                    "name": "_computedIpv4Enabled",
                    "method": "computedIpv4Enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIpv4Enabled",
                    "validate": false,
                    "optional": true,
                    "original": "ipv4_enabled"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "IpConfiguration s",
            "original": "ip_configuration"
        },
        {
            "con": {
                "smart": "newLocationPreference",
                "name": "LocationPreference'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"follow_gae_application\" <$> TF.attribute",
                    "name": "_followGaeApplication",
                    "method": "followGaeApplication",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFollowGaeApplication",
                    "validate": false,
                    "optional": true,
                    "original": "follow_gae_application"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "name": "LocationPreference",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "LocationPreference s",
            "original": "location_preference"
        },
        {
            "con": {
                "smart": "newAllow",
                "name": "Allow'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"all\" <$> TF.attribute",
                    "name": "_all",
                    "method": "all",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_values",
                            "method": "values"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAll",
                    "validate": false,
                    "optional": true,
                    "original": "all"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "_values",
                    "method": "values",
                    "conflicts": [
                        {
                            "default": "TF.value P.False",
                            "name": "_all",
                            "method": "all"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasValues",
                    "validate": false,
                    "optional": true,
                    "original": "values"
                }
            ],
            "name": "Allow",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"all\" <$> TF.attribute",
                    "name": "_all",
                    "method": "all",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_values",
                            "method": "values"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAll",
                    "validate": false,
                    "optional": true,
                    "original": "all"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "_values",
                    "method": "values",
                    "conflicts": [
                        {
                            "default": "TF.value P.False",
                            "name": "_all",
                            "method": "all"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasValues",
                    "validate": false,
                    "optional": true,
                    "original": "values"
                }
            ],
            "type": "Allow s",
            "original": "allow"
        },
        {
            "con": {
                "smart": "newAutoHealingPolicies",
                "name": "AutoHealingPolicies'"
            },
            "arguments": [
                {
                    "default": "_healthCheck",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_check\" <$> TF.attribute",
                    "name": "_healthCheck",
                    "method": "healthCheck",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthCheck",
                    "validate": false,
                    "optional": false,
                    "original": "health_check"
                },
                {
                    "default": "_initialDelaySec",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_delay_sec\" <$> TF.attribute",
                    "name": "_initialDelaySec",
                    "method": "initialDelaySec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasInitialDelaySec",
                    "validate": false,
                    "optional": false,
                    "original": "initial_delay_sec"
                }
            ],
            "name": "AutoHealingPolicies",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_healthCheck",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_check\" <$> TF.attribute",
                    "name": "_healthCheck",
                    "method": "healthCheck",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthCheck",
                    "validate": false,
                    "optional": false,
                    "original": "health_check"
                },
                {
                    "default": "_initialDelaySec",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_delay_sec\" <$> TF.attribute",
                    "name": "_initialDelaySec",
                    "method": "initialDelaySec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasInitialDelaySec",
                    "validate": false,
                    "optional": false,
                    "original": "initial_delay_sec"
                }
            ],
            "conflicts": [],
            "type": "AutoHealingPolicies s",
            "original": "auto_healing_policies"
        },
        {
            "con": {
                "smart": "newMasterConfig",
                "name": "MasterConfig'"
            },
            "arguments": [],
            "name": "MasterConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_config\" <$> TF.attribute",
                    "name": "_computedDiskConfig",
                    "method": "computedDiskConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (DiskConfig s)",
                    "class": "HasComputedDiskConfig",
                    "validate": true,
                    "optional": true,
                    "original": "disk_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_names\" <$> TF.attribute",
                    "name": "_computedInstanceNames",
                    "method": "computedInstanceNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstanceNames",
                    "validate": false,
                    "optional": false,
                    "original": "instance_names"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_computedMachineType",
                    "method": "computedMachineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMachineType",
                    "validate": false,
                    "optional": true,
                    "original": "machine_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_instances\" <$> TF.attribute",
                    "name": "_computedNumInstances",
                    "method": "computedNumInstances",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNumInstances",
                    "validate": false,
                    "optional": true,
                    "original": "num_instances"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "MasterConfig s",
            "original": "master_config"
        },
        {
            "con": {
                "smart": "newBackupConfiguration",
                "name": "BackupConfiguration'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"binary_log_enabled\" <$> TF.attribute",
                    "name": "_binaryLogEnabled",
                    "method": "binaryLogEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasBinaryLogEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "binary_log_enabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "enabled"
                }
            ],
            "name": "BackupConfiguration",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start_time\" <$> TF.attribute",
                    "name": "_computedStartTime",
                    "method": "computedStartTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStartTime",
                    "validate": false,
                    "optional": true,
                    "original": "start_time"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "BackupConfiguration s",
            "original": "backup_configuration"
        },
        {
            "con": {
                "smart": "newGceClusterConfig",
                "name": "GceClusterConfig'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"internal_ip_only\" <$> TF.attribute",
                    "name": "_internalIpOnly",
                    "method": "internalIpOnly",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasInternalIpOnly",
                    "validate": false,
                    "optional": true,
                    "original": "internal_ip_only"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "validate": false,
                    "optional": true,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account\" <$> TF.attribute",
                    "name": "_serviceAccount",
                    "method": "serviceAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccount",
                    "validate": false,
                    "optional": true,
                    "original": "service_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_subnetwork",
                    "method": "subnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetwork",
                    "validate": false,
                    "optional": true,
                    "original": "subnetwork"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                }
            ],
            "name": "GceClusterConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [
                        "_subnetwork"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": true,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_scopes\" <$> TF.attribute",
                    "name": "_computedServiceAccountScopes",
                    "method": "computedServiceAccountScopes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedServiceAccountScopes",
                    "validate": false,
                    "optional": true,
                    "original": "service_account_scopes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "GceClusterConfig s",
            "original": "gce_cluster_config"
        },
        {
            "con": {
                "smart": "newHttpsHealthCheck",
                "name": "HttpsHealthCheck'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": true,
                    "original": "host"
                },
                {
                    "default": "TF.value 443",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_header\" <$> TF.attribute",
                    "name": "_proxyHeader",
                    "method": "proxyHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProxyHeader",
                    "validate": false,
                    "optional": true,
                    "original": "proxy_header"
                },
                {
                    "default": "TF.value \"/\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_path\" <$> TF.attribute",
                    "name": "_requestPath",
                    "method": "requestPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestPath",
                    "validate": false,
                    "optional": true,
                    "original": "request_path"
                }
            ],
            "name": "HttpsHealthCheck",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "HttpsHealthCheck s",
            "original": "https_health_check"
        },
        {
            "con": {
                "smart": "newInitializationAction",
                "name": "InitializationAction'"
            },
            "arguments": [
                {
                    "default": "_script",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"script\" <$> TF.attribute",
                    "name": "_script",
                    "method": "script",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasScript",
                    "validate": false,
                    "optional": false,
                    "original": "script"
                },
                {
                    "default": "TF.value 300",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"timeout_sec\" <$> TF.attribute",
                    "name": "_timeoutSec",
                    "method": "timeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "timeout_sec"
                }
            ],
            "name": "InitializationAction",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_script",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"script\" <$> TF.attribute",
                    "name": "_script",
                    "method": "script",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasScript",
                    "validate": false,
                    "optional": false,
                    "original": "script"
                }
            ],
            "conflicts": [],
            "type": "InitializationAction s",
            "original": "initialization_action"
        },
        {
            "con": {
                "smart": "newCidrBlocks",
                "name": "CidrBlocks'"
            },
            "arguments": [],
            "name": "CidrBlocks",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_block\" <$> TF.attribute",
                    "name": "_computedCidrBlock",
                    "method": "computedCidrBlock",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCidrBlock",
                    "validate": false,
                    "optional": false,
                    "original": "cidr_block"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_computedDisplayName",
                    "method": "computedDisplayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "CidrBlocks s",
            "original": "cidr_blocks"
        },
        {
            "con": {
                "smart": "newMqttConfig",
                "name": "MqttConfig'"
            },
            "arguments": [
                {
                    "default": "_mqttEnabledState",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mqtt_enabled_state\" <$> TF.attribute",
                    "name": "_mqttEnabledState",
                    "method": "mqttEnabledState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMqttEnabledState",
                    "validate": false,
                    "optional": false,
                    "original": "mqtt_enabled_state"
                }
            ],
            "name": "MqttConfig",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_mqttEnabledState",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mqtt_enabled_state\" <$> TF.attribute",
                    "name": "_mqttEnabledState",
                    "method": "mqttEnabledState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMqttEnabledState",
                    "validate": false,
                    "optional": false,
                    "original": "mqtt_enabled_state"
                }
            ],
            "conflicts": [],
            "type": "MqttConfig s",
            "original": "mqtt_config"
        },
        {
            "con": {
                "smart": "newBackend",
                "name": "Backend'"
            },
            "arguments": [],
            "name": "Backend",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"balancing_mode\" <$> TF.attribute",
                    "name": "_computedBalancingMode",
                    "method": "computedBalancingMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBalancingMode",
                    "validate": false,
                    "optional": false,
                    "original": "balancing_mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"capacity_scaler\" <$> TF.attribute",
                    "name": "_computedCapacityScaler",
                    "method": "computedCapacityScaler",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasComputedCapacityScaler",
                    "validate": false,
                    "optional": false,
                    "original": "capacity_scaler"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"group\" <$> TF.attribute",
                    "name": "_computedGroup",
                    "method": "computedGroup",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGroup",
                    "validate": false,
                    "optional": false,
                    "original": "group"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_connections\" <$> TF.attribute",
                    "name": "_computedMaxConnections",
                    "method": "computedMaxConnections",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxConnections",
                    "validate": false,
                    "optional": false,
                    "original": "max_connections"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_connections_per_instance\" <$> TF.attribute",
                    "name": "_computedMaxConnectionsPerInstance",
                    "method": "computedMaxConnectionsPerInstance",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxConnectionsPerInstance",
                    "validate": false,
                    "optional": false,
                    "original": "max_connections_per_instance"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_rate\" <$> TF.attribute",
                    "name": "_computedMaxRate",
                    "method": "computedMaxRate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxRate",
                    "validate": false,
                    "optional": false,
                    "original": "max_rate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_rate_per_instance\" <$> TF.attribute",
                    "name": "_computedMaxRatePerInstance",
                    "method": "computedMaxRatePerInstance",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasComputedMaxRatePerInstance",
                    "validate": false,
                    "optional": false,
                    "original": "max_rate_per_instance"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_utilization\" <$> TF.attribute",
                    "name": "_computedMaxUtilization",
                    "method": "computedMaxUtilization",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasComputedMaxUtilization",
                    "validate": false,
                    "optional": false,
                    "original": "max_utilization"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Backend s",
            "original": "backend"
        },
        {
            "con": {
                "smart": "newMethods",
                "name": "Methods'"
            },
            "arguments": [],
            "name": "Methods",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_type\" <$> TF.attribute",
                    "name": "_computedRequestType",
                    "method": "computedRequestType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRequestType",
                    "validate": false,
                    "optional": false,
                    "original": "request_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_type\" <$> TF.attribute",
                    "name": "_computedResponseType",
                    "method": "computedResponseType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedResponseType",
                    "validate": false,
                    "optional": false,
                    "original": "response_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"syntax\" <$> TF.attribute",
                    "name": "_computedSyntax",
                    "method": "computedSyntax",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSyntax",
                    "validate": false,
                    "optional": false,
                    "original": "syntax"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Methods s",
            "original": "methods"
        },
        {
            "con": {
                "smart": "newNetworkPolicyConfig",
                "name": "NetworkPolicyConfig'"
            },
            "arguments": [],
            "name": "NetworkPolicyConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_computedDisabled",
                    "method": "computedDisabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDisabled",
                    "validate": false,
                    "optional": false,
                    "original": "disabled"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "NetworkPolicyConfig s",
            "original": "network_policy_config"
        },
        {
            "con": {
                "smart": "newPathRule",
                "name": "PathRule'"
            },
            "arguments": [
                {
                    "default": "_paths",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"paths\" <$> TF.attribute",
                    "name": "_paths",
                    "method": "paths",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPaths",
                    "validate": false,
                    "optional": false,
                    "original": "paths"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "name": "PathRule",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_paths",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"paths\" <$> TF.attribute",
                    "name": "_paths",
                    "method": "paths",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPaths",
                    "validate": false,
                    "optional": false,
                    "original": "paths"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "conflicts": [],
            "type": "PathRule s",
            "original": "path_rule"
        },
        {
            "con": {
                "smart": "newMetric",
                "name": "Metric'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "name": "Metric",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "Metric s",
            "original": "metric"
        },
        {
            "con": {
                "smart": "newRollingUpdatePolicy",
                "name": "RollingUpdatePolicy'"
            },
            "arguments": [
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_surge_fixed\" <$> TF.attribute",
                    "name": "_maxSurgeFixed",
                    "method": "maxSurgeFixed",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_maxSurgePercent",
                            "method": "maxSurgePercent"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxSurgeFixed",
                    "validate": false,
                    "optional": true,
                    "original": "max_surge_fixed"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_surge_percent\" <$> TF.attribute",
                    "name": "_maxSurgePercent",
                    "method": "maxSurgePercent",
                    "conflicts": [
                        {
                            "default": "TF.value 0",
                            "name": "_maxSurgeFixed",
                            "method": "maxSurgeFixed"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxSurgePercent",
                    "validate": false,
                    "optional": true,
                    "original": "max_surge_percent"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_unavailable_fixed\" <$> TF.attribute",
                    "name": "_maxUnavailableFixed",
                    "method": "maxUnavailableFixed",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_maxUnavailablePercent",
                            "method": "maxUnavailablePercent"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxUnavailableFixed",
                    "validate": false,
                    "optional": true,
                    "original": "max_unavailable_fixed"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_unavailable_percent\" <$> TF.attribute",
                    "name": "_maxUnavailablePercent",
                    "method": "maxUnavailablePercent",
                    "conflicts": [
                        {
                            "default": "TF.value 0",
                            "name": "_maxUnavailableFixed",
                            "method": "maxUnavailableFixed"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxUnavailablePercent",
                    "validate": false,
                    "optional": true,
                    "original": "max_unavailable_percent"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_ready_sec\" <$> TF.attribute",
                    "name": "_minReadySec",
                    "method": "minReadySec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinReadySec",
                    "validate": false,
                    "optional": true,
                    "original": "min_ready_sec"
                },
                {
                    "default": "_minimalAction",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minimal_action\" <$> TF.attribute",
                    "name": "_minimalAction",
                    "method": "minimalAction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinimalAction",
                    "validate": false,
                    "optional": false,
                    "original": "minimal_action"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "name": "RollingUpdatePolicy",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_minimalAction",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"minimal_action\" <$> TF.attribute",
                    "name": "_minimalAction",
                    "method": "minimalAction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinimalAction",
                    "validate": false,
                    "optional": false,
                    "original": "minimal_action"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_surge_fixed\" <$> TF.attribute",
                    "name": "_maxSurgeFixed",
                    "method": "maxSurgeFixed",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_maxSurgePercent",
                            "method": "maxSurgePercent"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxSurgeFixed",
                    "validate": false,
                    "optional": true,
                    "original": "max_surge_fixed"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_surge_percent\" <$> TF.attribute",
                    "name": "_maxSurgePercent",
                    "method": "maxSurgePercent",
                    "conflicts": [
                        {
                            "default": "TF.value 0",
                            "name": "_maxSurgeFixed",
                            "method": "maxSurgeFixed"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxSurgePercent",
                    "validate": false,
                    "optional": true,
                    "original": "max_surge_percent"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_unavailable_fixed\" <$> TF.attribute",
                    "name": "_maxUnavailableFixed",
                    "method": "maxUnavailableFixed",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_maxUnavailablePercent",
                            "method": "maxUnavailablePercent"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxUnavailableFixed",
                    "validate": false,
                    "optional": true,
                    "original": "max_unavailable_fixed"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_unavailable_percent\" <$> TF.attribute",
                    "name": "_maxUnavailablePercent",
                    "method": "maxUnavailablePercent",
                    "conflicts": [
                        {
                            "default": "TF.value 0",
                            "name": "_maxUnavailableFixed",
                            "method": "maxUnavailableFixed"
                        }
                    ],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxUnavailablePercent",
                    "validate": false,
                    "optional": true,
                    "original": "max_unavailable_percent"
                }
            ],
            "type": "RollingUpdatePolicy s",
            "original": "rolling_update_policy"
        },
        {
            "con": {
                "smart": "newLifecycleRule",
                "name": "LifecycleRule'"
            },
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s (Action s)",
                    "class": "HasAction",
                    "validate": true,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "_condition",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"condition\" <$> TF.attribute",
                    "name": "_condition",
                    "method": "condition",
                    "conflicts": [],
                    "type": "TF.Attr s (Condition s)",
                    "class": "HasCondition",
                    "validate": true,
                    "optional": false,
                    "original": "condition"
                }
            ],
            "name": "LifecycleRule",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s (Action s)",
                    "class": "HasAction",
                    "validate": true,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "_condition",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"condition\" <$> TF.attribute",
                    "name": "_condition",
                    "method": "condition",
                    "conflicts": [],
                    "type": "TF.Attr s (Condition s)",
                    "class": "HasCondition",
                    "validate": true,
                    "optional": false,
                    "original": "condition"
                }
            ],
            "conflicts": [],
            "type": "LifecycleRule s",
            "original": "lifecycle_rule"
        },
        {
            "con": {
                "smart": "newReplicaConfiguration",
                "name": "ReplicaConfiguration'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ca_certificate\" <$> TF.attribute",
                    "name": "_caCertificate",
                    "method": "caCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCaCertificate",
                    "validate": false,
                    "optional": true,
                    "original": "ca_certificate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"client_certificate\" <$> TF.attribute",
                    "name": "_clientCertificate",
                    "method": "clientCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClientCertificate",
                    "validate": false,
                    "optional": true,
                    "original": "client_certificate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"client_key\" <$> TF.attribute",
                    "name": "_clientKey",
                    "method": "clientKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClientKey",
                    "validate": false,
                    "optional": true,
                    "original": "client_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"connect_retry_interval\" <$> TF.attribute",
                    "name": "_connectRetryInterval",
                    "method": "connectRetryInterval",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasConnectRetryInterval",
                    "validate": false,
                    "optional": true,
                    "original": "connect_retry_interval"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dump_file_path\" <$> TF.attribute",
                    "name": "_dumpFilePath",
                    "method": "dumpFilePath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDumpFilePath",
                    "validate": false,
                    "optional": true,
                    "original": "dump_file_path"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"failover_target\" <$> TF.attribute",
                    "name": "_failoverTarget",
                    "method": "failoverTarget",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasFailoverTarget",
                    "validate": false,
                    "optional": true,
                    "original": "failover_target"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"master_heartbeat_period\" <$> TF.attribute",
                    "name": "_masterHeartbeatPeriod",
                    "method": "masterHeartbeatPeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMasterHeartbeatPeriod",
                    "validate": false,
                    "optional": true,
                    "original": "master_heartbeat_period"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"password\" <$> TF.attribute",
                    "name": "_password",
                    "method": "password",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPassword",
                    "validate": false,
                    "optional": true,
                    "original": "password"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ssl_cipher\" <$> TF.attribute",
                    "name": "_sslCipher",
                    "method": "sslCipher",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCipher",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_cipher"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"username\" <$> TF.attribute",
                    "name": "_username",
                    "method": "username",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUsername",
                    "validate": false,
                    "optional": true,
                    "original": "username"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"verify_server_certificate\" <$> TF.attribute",
                    "name": "_verifyServerCertificate",
                    "method": "verifyServerCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasVerifyServerCertificate",
                    "validate": false,
                    "optional": true,
                    "original": "verify_server_certificate"
                }
            ],
            "name": "ReplicaConfiguration",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "ReplicaConfiguration s",
            "original": "replica_configuration"
        },
        {
            "con": {
                "smart": "newPysparkConfig",
                "name": "PysparkConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. HCFS URIs of archives to be extracted in the working directory of",
                        ".jar, .tar, .tar.gz, .tgz, and .zip"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"archive_uris\" <$> TF.attribute",
                    "name": "_archiveUris",
                    "method": "archiveUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasArchiveUris",
                    "validate": false,
                    "optional": true,
                    "original": "archive_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. The arguments to pass to the driver. Do not include arguments,",
                        "such as --conf, that can be set as job properties, since a collision may",
                        "occur that causes an incorrect job submission"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"args\" <$> TF.attribute",
                    "name": "_args",
                    "method": "args",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasArgs",
                    "validate": false,
                    "optional": true,
                    "original": "args"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. HCFS URIs of files to be copied to the working directory of Python",
                        "drivers and distributed tasks. Useful for naively parallel tasks"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"file_uris\" <$> TF.attribute",
                    "name": "_fileUris",
                    "method": "fileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python",
                        "driver and tasks"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"jar_file_uris\" <$> TF.attribute",
                    "name": "_jarFileUris",
                    "method": "jarFileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasJarFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "jar_file_uris"
                },
                {
                    "default": "_mainPythonFileUri",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Required. The HCFS URI of the main Python file to use as the driver. Must be",
                        "a .py file"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_python_file_uri\" <$> TF.attribute",
                    "name": "_mainPythonFileUri",
                    "method": "mainPythonFileUri",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainPythonFileUri",
                    "validate": false,
                    "optional": false,
                    "original": "main_python_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. A mapping of property names to values, used to configure PySpark.",
                        "Properties that conflict with values set by the Cloud Dataproc API may be",
                        "overwritten. Can include properties set in",
                        "/etc/spark/conf/spark-defaults.conf and classes in user code"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "_properties",
                    "method": "properties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasProperties",
                    "validate": false,
                    "optional": true,
                    "original": "properties"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. HCFS file URIs of Python files to pass to the PySpark framework.",
                        "Supported file types: .py, .egg, and .zip"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"python_file_uris\" <$> TF.attribute",
                    "name": "_pythonFileUris",
                    "method": "pythonFileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPythonFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "python_file_uris"
                }
            ],
            "name": "PysparkConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The runtime logging config of the job"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging_config\" <$> TF.attribute",
                    "name": "_computedLoggingConfig",
                    "method": "computedLoggingConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (LoggingConfig s)",
                    "class": "HasComputedLoggingConfig",
                    "validate": true,
                    "optional": true,
                    "original": "logging_config"
                }
            ],
            "parameters": [
                {
                    "default": "_mainPythonFileUri",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Required. The HCFS URI of the main Python file to use as the driver. Must be",
                        "a .py file"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_python_file_uri\" <$> TF.attribute",
                    "name": "_mainPythonFileUri",
                    "method": "mainPythonFileUri",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainPythonFileUri",
                    "validate": false,
                    "optional": false,
                    "original": "main_python_file_uri"
                }
            ],
            "conflicts": [],
            "type": "PysparkConfig s",
            "original": "pyspark_config"
        },
        {
            "con": {
                "smart": "newServerCaCert",
                "name": "ServerCaCert'"
            },
            "arguments": [],
            "name": "ServerCaCert",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cert\" <$> TF.attribute",
                    "name": "_computedCert",
                    "method": "computedCert",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCert",
                    "validate": false,
                    "optional": false,
                    "original": "cert"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"common_name\" <$> TF.attribute",
                    "name": "_computedCommonName",
                    "method": "computedCommonName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCommonName",
                    "validate": false,
                    "optional": false,
                    "original": "common_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"create_time\" <$> TF.attribute",
                    "name": "_computedCreateTime",
                    "method": "computedCreateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreateTime",
                    "validate": false,
                    "optional": false,
                    "original": "create_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expiration_time\" <$> TF.attribute",
                    "name": "_computedExpirationTime",
                    "method": "computedExpirationTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedExpirationTime",
                    "validate": false,
                    "optional": false,
                    "original": "expiration_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha1_fingerprint\" <$> TF.attribute",
                    "name": "_computedSha1Fingerprint",
                    "method": "computedSha1Fingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha1Fingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "sha1_fingerprint"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ServerCaCert s",
            "original": "server_ca_cert"
        },
        {
            "con": {
                "smart": "newClusterConfig",
                "name": "ClusterConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"initialization_action\" <$> TF.attribute",
                    "name": "_initializationAction",
                    "method": "initializationAction",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (InitializationAction s)]",
                    "class": "HasInitializationAction",
                    "validate": true,
                    "optional": true,
                    "original": "initialization_action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"staging_bucket\" <$> TF.attribute",
                    "name": "_stagingBucket",
                    "method": "stagingBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStagingBucket",
                    "validate": false,
                    "optional": true,
                    "original": "staging_bucket"
                }
            ],
            "name": "ClusterConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_computedBucket",
                    "method": "computedBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gce_cluster_config\" <$> TF.attribute",
                    "name": "_computedGceClusterConfig",
                    "method": "computedGceClusterConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (GceClusterConfig s)",
                    "class": "HasComputedGceClusterConfig",
                    "validate": true,
                    "optional": true,
                    "original": "gce_cluster_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_config\" <$> TF.attribute",
                    "name": "_computedMasterConfig",
                    "method": "computedMasterConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (MasterConfig s)",
                    "class": "HasComputedMasterConfig",
                    "validate": true,
                    "optional": true,
                    "original": "master_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preemptible_worker_config\" <$> TF.attribute",
                    "name": "_computedPreemptibleWorkerConfig",
                    "method": "computedPreemptibleWorkerConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (PreemptibleWorkerConfig s)",
                    "class": "HasComputedPreemptibleWorkerConfig",
                    "validate": true,
                    "optional": true,
                    "original": "preemptible_worker_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"software_config\" <$> TF.attribute",
                    "name": "_computedSoftwareConfig",
                    "method": "computedSoftwareConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (SoftwareConfig s)",
                    "class": "HasComputedSoftwareConfig",
                    "validate": true,
                    "optional": true,
                    "original": "software_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"worker_config\" <$> TF.attribute",
                    "name": "_computedWorkerConfig",
                    "method": "computedWorkerConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (WorkerConfig s)",
                    "class": "HasComputedWorkerConfig",
                    "validate": true,
                    "optional": true,
                    "original": "worker_config"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ClusterConfig s",
            "original": "cluster_config"
        },
        {
            "con": {
                "smart": "newHorizontalPodAutoscaling",
                "name": "HorizontalPodAutoscaling'"
            },
            "arguments": [],
            "name": "HorizontalPodAutoscaling",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_computedDisabled",
                    "method": "computedDisabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDisabled",
                    "validate": false,
                    "optional": false,
                    "original": "disabled"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "HorizontalPodAutoscaling s",
            "original": "horizontal_pod_autoscaling"
        },
        {
            "con": {
                "smart": "newTriggerTemplate",
                "name": "TriggerTemplate'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"branch_name\" <$> TF.attribute",
                    "name": "_branchName",
                    "method": "branchName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBranchName",
                    "validate": false,
                    "optional": true,
                    "original": "branch_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"commit_sha\" <$> TF.attribute",
                    "name": "_commitSha",
                    "method": "commitSha",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCommitSha",
                    "validate": false,
                    "optional": true,
                    "original": "commit_sha"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dir\" <$> TF.attribute",
                    "name": "_dir",
                    "method": "dir",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDir",
                    "validate": false,
                    "optional": true,
                    "original": "dir"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"repo_name\" <$> TF.attribute",
                    "name": "_repoName",
                    "method": "repoName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRepoName",
                    "validate": false,
                    "optional": true,
                    "original": "repo_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tag_name\" <$> TF.attribute",
                    "name": "_tagName",
                    "method": "tagName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTagName",
                    "validate": false,
                    "optional": true,
                    "original": "tag_name"
                }
            ],
            "name": "TriggerTemplate",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "TriggerTemplate s",
            "original": "trigger_template"
        },
        {
            "con": {
                "smart": "newVersion",
                "name": "Version'"
            },
            "arguments": [
                {
                    "default": "_instanceTemplate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_template\" <$> TF.attribute",
                    "name": "_instanceTemplate",
                    "method": "instanceTemplate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceTemplate",
                    "validate": false,
                    "optional": false,
                    "original": "instance_template"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_size\" <$> TF.attribute",
                    "name": "_targetSize",
                    "method": "targetSize",
                    "conflicts": [],
                    "type": "TF.Attr s (TargetSize s)",
                    "class": "HasTargetSize",
                    "validate": true,
                    "optional": true,
                    "original": "target_size"
                }
            ],
            "name": "Version",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_instanceTemplate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_template\" <$> TF.attribute",
                    "name": "_instanceTemplate",
                    "method": "instanceTemplate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceTemplate",
                    "validate": false,
                    "optional": false,
                    "original": "instance_template"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "Version s",
            "original": "version"
        },
        {
            "con": {
                "smart": "newVersioning",
                "name": "Versioning'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "validate": false,
                    "optional": true,
                    "original": "enabled"
                }
            ],
            "name": "Versioning",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Versioning s",
            "original": "versioning"
        },
        {
            "con": {
                "smart": "newSoftwareConfig",
                "name": "SoftwareConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"override_properties\" <$> TF.attribute",
                    "name": "_overrideProperties",
                    "method": "overrideProperties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasOverrideProperties",
                    "validate": false,
                    "optional": true,
                    "original": "override_properties"
                }
            ],
            "name": "SoftwareConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image_version\" <$> TF.attribute",
                    "name": "_computedImageVersion",
                    "method": "computedImageVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImageVersion",
                    "validate": false,
                    "optional": true,
                    "original": "image_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "_computedProperties",
                    "method": "computedProperties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedProperties",
                    "validate": false,
                    "optional": false,
                    "original": "properties"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "SoftwareConfig s",
            "original": "software_config"
        },
        {
            "con": {
                "smart": "newInstances",
                "name": "Instances'"
            },
            "arguments": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_status",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                }
            ],
            "name": "Instances",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"named_ports\" <$> TF.attribute",
                    "name": "_computedNamedPorts",
                    "method": "computedNamedPorts",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NamedPorts s)]",
                    "class": "HasComputedNamedPorts",
                    "validate": true,
                    "optional": false,
                    "original": "named_ports"
                }
            ],
            "parameters": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_status",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                }
            ],
            "conflicts": [],
            "type": "Instances s",
            "original": "instances"
        },
        {
            "con": {
                "smart": "newStep",
                "name": "Step'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"args\" <$> TF.attribute",
                    "name": "_args",
                    "method": "args",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasArgs",
                    "validate": false,
                    "optional": true,
                    "original": "args"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                }
            ],
            "name": "Step",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Step s",
            "original": "step"
        },
        {
            "con": {
                "smart": "newMaintenancePolicy",
                "name": "MaintenancePolicy'"
            },
            "arguments": [],
            "name": "MaintenancePolicy",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"daily_maintenance_window\" <$> TF.attribute",
                    "name": "_computedDailyMaintenanceWindow",
                    "method": "computedDailyMaintenanceWindow",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (DailyMaintenanceWindow s)]",
                    "class": "HasComputedDailyMaintenanceWindow",
                    "validate": true,
                    "optional": false,
                    "original": "daily_maintenance_window"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "MaintenancePolicy s",
            "original": "maintenance_policy"
        },
        {
            "con": {
                "smart": "newUrlDispatchRule",
                "name": "UrlDispatchRule'"
            },
            "arguments": [],
            "name": "UrlDispatchRule",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "_computedDomain",
                    "method": "computedDomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomain",
                    "validate": false,
                    "optional": false,
                    "original": "domain"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_computedPath",
                    "method": "computedPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_computedService",
                    "method": "computedService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "UrlDispatchRule s",
            "original": "url_dispatch_rule"
        },
        {
            "con": {
                "smart": "newSourceImageEncryptionKey",
                "name": "SourceImageEncryptionKey'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"raw_key\" <$> TF.attribute",
                    "name": "_rawKey",
                    "method": "rawKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRawKey",
                    "validate": false,
                    "optional": true,
                    "original": "raw_key"
                }
            ],
            "name": "SourceImageEncryptionKey",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha256\" <$> TF.attribute",
                    "name": "_computedSha256",
                    "method": "computedSha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha256",
                    "validate": false,
                    "optional": false,
                    "original": "sha256"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "SourceImageEncryptionKey s",
            "original": "source_image_encryption_key"
        },
        {
            "con": {
                "smart": "newCors",
                "name": "Cors'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_age_seconds\" <$> TF.attribute",
                    "name": "_maxAgeSeconds",
                    "method": "maxAgeSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxAgeSeconds",
                    "validate": false,
                    "optional": true,
                    "original": "max_age_seconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"method\" <$> TF.attribute",
                    "name": "_method",
                    "method": "method",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMethod",
                    "validate": false,
                    "optional": true,
                    "original": "method"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"origin\" <$> TF.attribute",
                    "name": "_origin",
                    "method": "origin",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasOrigin",
                    "validate": false,
                    "optional": true,
                    "original": "origin"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_header\" <$> TF.attribute",
                    "name": "_responseHeader",
                    "method": "responseHeader",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasResponseHeader",
                    "validate": false,
                    "optional": true,
                    "original": "response_header"
                }
            ],
            "name": "Cors",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Cors s",
            "original": "cors"
        },
        {
            "con": {
                "smart": "newView",
                "name": "View'"
            },
            "arguments": [
                {
                    "default": "_query",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query\" <$> TF.attribute",
                    "name": "_query",
                    "method": "query",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQuery",
                    "validate": false,
                    "optional": false,
                    "original": "query"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"use_legacy_sql\" <$> TF.attribute",
                    "name": "_useLegacySql",
                    "method": "useLegacySql",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUseLegacySql",
                    "validate": false,
                    "optional": true,
                    "original": "use_legacy_sql"
                }
            ],
            "name": "View",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_query",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"query\" <$> TF.attribute",
                    "name": "_query",
                    "method": "query",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQuery",
                    "validate": false,
                    "optional": false,
                    "original": "query"
                }
            ],
            "conflicts": [],
            "type": "View s",
            "original": "view"
        },
        {
            "con": {
                "smart": "newHttpLoadBalancing",
                "name": "HttpLoadBalancing'"
            },
            "arguments": [],
            "name": "HttpLoadBalancing",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_computedDisabled",
                    "method": "computedDisabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDisabled",
                    "validate": false,
                    "optional": false,
                    "original": "disabled"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "HttpLoadBalancing s",
            "original": "http_load_balancing"
        },
        {
            "con": {
                "smart": "newNodeConfig",
                "name": "NodeConfig'"
            },
            "arguments": [],
            "name": "NodeConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_size_gb\" <$> TF.attribute",
                    "name": "_computedDiskSizeGb",
                    "method": "computedDiskSizeGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDiskSizeGb",
                    "validate": false,
                    "optional": false,
                    "original": "disk_size_gb"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_type\" <$> TF.attribute",
                    "name": "_computedDiskType",
                    "method": "computedDiskType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskType",
                    "validate": false,
                    "optional": false,
                    "original": "disk_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"guest_accelerator\" <$> TF.attribute",
                    "name": "_computedGuestAccelerator",
                    "method": "computedGuestAccelerator",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (GuestAccelerator s)]",
                    "class": "HasComputedGuestAccelerator",
                    "validate": true,
                    "optional": false,
                    "original": "guest_accelerator"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"image_type\" <$> TF.attribute",
                    "name": "_computedImageType",
                    "method": "computedImageType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImageType",
                    "validate": false,
                    "optional": false,
                    "original": "image_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_computedLabels",
                    "method": "computedLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedLabels",
                    "validate": false,
                    "optional": false,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"local_ssd_count\" <$> TF.attribute",
                    "name": "_computedLocalSsdCount",
                    "method": "computedLocalSsdCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedLocalSsdCount",
                    "validate": false,
                    "optional": false,
                    "original": "local_ssd_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_computedMachineType",
                    "method": "computedMachineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMachineType",
                    "validate": false,
                    "optional": false,
                    "original": "machine_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_computedMetadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "validate": false,
                    "optional": false,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_cpu_platform\" <$> TF.attribute",
                    "name": "_computedMinCpuPlatform",
                    "method": "computedMinCpuPlatform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinCpuPlatform",
                    "validate": false,
                    "optional": false,
                    "original": "min_cpu_platform"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"oauth_scopes\" <$> TF.attribute",
                    "name": "_computedOauthScopes",
                    "method": "computedOauthScopes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedOauthScopes",
                    "validate": false,
                    "optional": false,
                    "original": "oauth_scopes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"preemptible\" <$> TF.attribute",
                    "name": "_computedPreemptible",
                    "method": "computedPreemptible",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPreemptible",
                    "validate": false,
                    "optional": false,
                    "original": "preemptible"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service_account\" <$> TF.attribute",
                    "name": "_computedServiceAccount",
                    "method": "computedServiceAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServiceAccount",
                    "validate": false,
                    "optional": false,
                    "original": "service_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_computedTags",
                    "method": "computedTags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedTags",
                    "validate": false,
                    "optional": false,
                    "original": "tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"taint\" <$> TF.attribute",
                    "name": "_computedTaint",
                    "method": "computedTaint",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Taint s)]",
                    "class": "HasComputedTaint",
                    "validate": true,
                    "optional": false,
                    "original": "taint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"workload_metadata_config\" <$> TF.attribute",
                    "name": "_computedWorkloadMetadataConfig",
                    "method": "computedWorkloadMetadataConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (WorkloadMetadataConfig s)]",
                    "class": "HasComputedWorkloadMetadataConfig",
                    "validate": true,
                    "optional": false,
                    "original": "workload_metadata_config"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "NodeConfig s",
            "original": "node_config"
        },
        {
            "con": {
                "smart": "newTcpHealthCheck",
                "name": "TcpHealthCheck'"
            },
            "arguments": [
                {
                    "default": "TF.value 80",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_header\" <$> TF.attribute",
                    "name": "_proxyHeader",
                    "method": "proxyHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProxyHeader",
                    "validate": false,
                    "optional": true,
                    "original": "proxy_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request\" <$> TF.attribute",
                    "name": "_request",
                    "method": "request",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequest",
                    "validate": false,
                    "optional": true,
                    "original": "request"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "_response",
                    "method": "response",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponse",
                    "validate": false,
                    "optional": true,
                    "original": "response"
                }
            ],
            "name": "TcpHealthCheck",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "TcpHealthCheck s",
            "original": "tcp_health_check"
        },
        {
            "con": {
                "smart": "newSparksqlConfig",
                "name": "SparksqlConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"jar_file_uris\" <$> TF.attribute",
                    "name": "_jarFileUris",
                    "method": "jarFileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasJarFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "jar_file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "_properties",
                    "method": "properties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasProperties",
                    "validate": false,
                    "optional": true,
                    "original": "properties"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_file_uri\" <$> TF.attribute",
                    "name": "_queryFileUri",
                    "method": "queryFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryList",
                            "method": "queryList"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQueryFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "query_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_list\" <$> TF.attribute",
                    "name": "_queryList",
                    "method": "queryList",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryFileUri",
                            "method": "queryFileUri"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasQueryList",
                    "validate": false,
                    "optional": true,
                    "original": "query_list"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"script_variables\" <$> TF.attribute",
                    "name": "_scriptVariables",
                    "method": "scriptVariables",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasScriptVariables",
                    "validate": false,
                    "optional": true,
                    "original": "script_variables"
                }
            ],
            "name": "SparksqlConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The runtime logging config of the job"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging_config\" <$> TF.attribute",
                    "name": "_computedLoggingConfig",
                    "method": "computedLoggingConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (LoggingConfig s)",
                    "class": "HasComputedLoggingConfig",
                    "validate": true,
                    "optional": true,
                    "original": "logging_config"
                }
            ],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_file_uri\" <$> TF.attribute",
                    "name": "_queryFileUri",
                    "method": "queryFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryList",
                            "method": "queryList"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQueryFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "query_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_list\" <$> TF.attribute",
                    "name": "_queryList",
                    "method": "queryList",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryFileUri",
                            "method": "queryFileUri"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasQueryList",
                    "validate": false,
                    "optional": true,
                    "original": "query_list"
                }
            ],
            "type": "SparksqlConfig s",
            "original": "sparksql_config"
        },
        {
            "con": {
                "smart": "newWorkloadMetadataConfig",
                "name": "WorkloadMetadataConfig'"
            },
            "arguments": [],
            "name": "WorkloadMetadataConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_metadata\" <$> TF.attribute",
                    "name": "_computedNodeMetadata",
                    "method": "computedNodeMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeMetadata",
                    "validate": false,
                    "optional": false,
                    "original": "node_metadata"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "WorkloadMetadataConfig s",
            "original": "workload_metadata_config"
        },
        {
            "con": {
                "smart": "newEndpoints",
                "name": "Endpoints'"
            },
            "arguments": [],
            "name": "Endpoints",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_computedAddress",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "Endpoints s",
            "original": "endpoints"
        },
        {
            "con": {
                "smart": "newGuestAccelerator",
                "name": "GuestAccelerator'"
            },
            "arguments": [],
            "name": "GuestAccelerator",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"count\" <$> TF.attribute",
                    "name": "_computedCount",
                    "method": "computedCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedCount",
                    "validate": false,
                    "optional": false,
                    "original": "count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "GuestAccelerator s",
            "original": "guest_accelerator"
        },
        {
            "con": {
                "smart": "newAliasIpRange",
                "name": "AliasIpRange'"
            },
            "arguments": [
                {
                    "default": "_ipCidrRange",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_cidr_range\" <$> TF.attribute",
                    "name": "_ipCidrRange",
                    "method": "ipCidrRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpCidrRange",
                    "validate": false,
                    "optional": false,
                    "original": "ip_cidr_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork_range_name\" <$> TF.attribute",
                    "name": "_subnetworkRangeName",
                    "method": "subnetworkRangeName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetworkRangeName",
                    "validate": false,
                    "optional": true,
                    "original": "subnetwork_range_name"
                }
            ],
            "name": "AliasIpRange",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_ipCidrRange",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_cidr_range\" <$> TF.attribute",
                    "name": "_ipCidrRange",
                    "method": "ipCidrRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpCidrRange",
                    "validate": false,
                    "optional": false,
                    "original": "ip_cidr_range"
                }
            ],
            "conflicts": [],
            "type": "AliasIpRange s",
            "original": "alias_ip_range"
        },
        {
            "con": {
                "smart": "newHadoopConfig",
                "name": "HadoopConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"archive_uris\" <$> TF.attribute",
                    "name": "_archiveUris",
                    "method": "archiveUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasArchiveUris",
                    "validate": false,
                    "optional": true,
                    "original": "archive_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"args\" <$> TF.attribute",
                    "name": "_args",
                    "method": "args",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasArgs",
                    "validate": false,
                    "optional": true,
                    "original": "args"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"file_uris\" <$> TF.attribute",
                    "name": "_fileUris",
                    "method": "fileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"jar_file_uris\" <$> TF.attribute",
                    "name": "_jarFileUris",
                    "method": "jarFileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasJarFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "jar_file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_class\" <$> TF.attribute",
                    "name": "_mainClass",
                    "method": "mainClass",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainJarFileUri",
                            "method": "mainJarFileUri"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainClass",
                    "validate": false,
                    "optional": true,
                    "original": "main_class"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_jar_file_uri\" <$> TF.attribute",
                    "name": "_mainJarFileUri",
                    "method": "mainJarFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainClass",
                            "method": "mainClass"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainJarFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "main_jar_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "_properties",
                    "method": "properties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasProperties",
                    "validate": false,
                    "optional": true,
                    "original": "properties"
                }
            ],
            "name": "HadoopConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The runtime logging config of the job"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging_config\" <$> TF.attribute",
                    "name": "_computedLoggingConfig",
                    "method": "computedLoggingConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (LoggingConfig s)",
                    "class": "HasComputedLoggingConfig",
                    "validate": true,
                    "optional": true,
                    "original": "logging_config"
                }
            ],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_class\" <$> TF.attribute",
                    "name": "_mainClass",
                    "method": "mainClass",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainJarFileUri",
                            "method": "mainJarFileUri"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainClass",
                    "validate": false,
                    "optional": true,
                    "original": "main_class"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_jar_file_uri\" <$> TF.attribute",
                    "name": "_mainJarFileUri",
                    "method": "mainJarFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainClass",
                            "method": "mainClass"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainJarFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "main_jar_file_uri"
                }
            ],
            "type": "HadoopConfig s",
            "original": "hadoop_config"
        },
        {
            "con": {
                "smart": "newIpAddress",
                "name": "IpAddress'"
            },
            "arguments": [],
            "name": "IpAddress",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "_computedIpAddress",
                    "method": "computedIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpAddress",
                    "validate": false,
                    "optional": false,
                    "original": "ip_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"time_to_retire\" <$> TF.attribute",
                    "name": "_computedTimeToRetire",
                    "method": "computedTimeToRetire",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTimeToRetire",
                    "validate": false,
                    "optional": true,
                    "original": "time_to_retire"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "IpAddress s",
            "original": "ip_address"
        },
        {
            "con": {
                "smart": "newPodSecurityPolicyConfig",
                "name": "PodSecurityPolicyConfig'"
            },
            "arguments": [],
            "name": "PodSecurityPolicyConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_computedEnabled",
                    "method": "computedEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnabled",
                    "validate": false,
                    "optional": false,
                    "original": "enabled"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "PodSecurityPolicyConfig s",
            "original": "pod_security_policy_config"
        },
        {
            "con": {
                "smart": "newAppEngine",
                "name": "AppEngine'"
            },
            "arguments": [],
            "name": "AppEngine",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auth_domain\" <$> TF.attribute",
                    "name": "_computedAuthDomain",
                    "method": "computedAuthDomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAuthDomain",
                    "validate": false,
                    "optional": false,
                    "original": "auth_domain"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"code_bucket\" <$> TF.attribute",
                    "name": "_computedCodeBucket",
                    "method": "computedCodeBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCodeBucket",
                    "validate": false,
                    "optional": false,
                    "original": "code_bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_bucket\" <$> TF.attribute",
                    "name": "_computedDefaultBucket",
                    "method": "computedDefaultBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultBucket",
                    "validate": false,
                    "optional": false,
                    "original": "default_bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_hostname\" <$> TF.attribute",
                    "name": "_computedDefaultHostname",
                    "method": "computedDefaultHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultHostname",
                    "validate": false,
                    "optional": false,
                    "original": "default_hostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"feature_settings\" <$> TF.attribute",
                    "name": "_computedFeatureSettings",
                    "method": "computedFeatureSettings",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (FeatureSettings s)]",
                    "class": "HasComputedFeatureSettings",
                    "validate": true,
                    "optional": false,
                    "original": "feature_settings"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gcr_domain\" <$> TF.attribute",
                    "name": "_computedGcrDomain",
                    "method": "computedGcrDomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGcrDomain",
                    "validate": false,
                    "optional": false,
                    "original": "gcr_domain"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"location_id\" <$> TF.attribute",
                    "name": "_computedLocationId",
                    "method": "computedLocationId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLocationId",
                    "validate": false,
                    "optional": false,
                    "original": "location_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serving_status\" <$> TF.attribute",
                    "name": "_computedServingStatus",
                    "method": "computedServingStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServingStatus",
                    "validate": false,
                    "optional": false,
                    "original": "serving_status"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_dispatch_rule\" <$> TF.attribute",
                    "name": "_computedUrlDispatchRule",
                    "method": "computedUrlDispatchRule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (UrlDispatchRule s)]",
                    "class": "HasComputedUrlDispatchRule",
                    "validate": true,
                    "optional": false,
                    "original": "url_dispatch_rule"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "AppEngine s",
            "original": "app_engine"
        },
        {
            "con": {
                "smart": "newTimePartitioning",
                "name": "TimePartitioning'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expiration_ms\" <$> TF.attribute",
                    "name": "_expirationMs",
                    "method": "expirationMs",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasExpirationMs",
                    "validate": false,
                    "optional": true,
                    "original": "expiration_ms"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"field\" <$> TF.attribute",
                    "name": "_field",
                    "method": "field",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasField",
                    "validate": false,
                    "optional": true,
                    "original": "field"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "name": "TimePartitioning",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "TimePartitioning s",
            "original": "time_partitioning"
        },
        {
            "con": {
                "smart": "newScheduling",
                "name": "Scheduling'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Maximum number of times per hour a driver may be restarted as a result of",
                        "driver terminating with non-zero code before job is reported failed."
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"max_failures_per_hour\" <$> TF.attribute",
                    "name": "_maxFailuresPerHour",
                    "method": "maxFailuresPerHour",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxFailuresPerHour",
                    "validate": false,
                    "optional": true,
                    "original": "max_failures_per_hour"
                }
            ],
            "name": "Scheduling",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Scheduling s",
            "original": "scheduling"
        },
        {
            "con": {
                "smart": "newBooleanPolicy",
                "name": "BooleanPolicy'"
            },
            "arguments": [
                {
                    "default": "_enforced",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enforced\" <$> TF.attribute",
                    "name": "_enforced",
                    "method": "enforced",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnforced",
                    "validate": false,
                    "optional": false,
                    "original": "enforced"
                }
            ],
            "name": "BooleanPolicy",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_enforced",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enforced\" <$> TF.attribute",
                    "name": "_enforced",
                    "method": "enforced",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnforced",
                    "validate": false,
                    "optional": false,
                    "original": "enforced"
                }
            ],
            "conflicts": [],
            "type": "BooleanPolicy s",
            "original": "boolean_policy"
        },
        {
            "con": {
                "smart": "newMatch",
                "name": "Match'"
            },
            "arguments": [
                {
                    "default": "_config",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"config\" <$> TF.attribute",
                    "name": "_config",
                    "method": "config",
                    "conflicts": [],
                    "type": "TF.Attr s (Config s)",
                    "class": "HasConfig",
                    "validate": true,
                    "optional": false,
                    "original": "config"
                },
                {
                    "default": "_versionedExpr",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"versioned_expr\" <$> TF.attribute",
                    "name": "_versionedExpr",
                    "method": "versionedExpr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVersionedExpr",
                    "validate": false,
                    "optional": false,
                    "original": "versioned_expr"
                }
            ],
            "name": "Match",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_config",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"config\" <$> TF.attribute",
                    "name": "_config",
                    "method": "config",
                    "conflicts": [],
                    "type": "TF.Attr s (Config s)",
                    "class": "HasConfig",
                    "validate": true,
                    "optional": false,
                    "original": "config"
                },
                {
                    "default": "_versionedExpr",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"versioned_expr\" <$> TF.attribute",
                    "name": "_versionedExpr",
                    "method": "versionedExpr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVersionedExpr",
                    "validate": false,
                    "optional": false,
                    "original": "versioned_expr"
                }
            ],
            "conflicts": [],
            "type": "Match s",
            "original": "match"
        },
        {
            "con": {
                "smart": "newPushConfig",
                "name": "PushConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attributes\" <$> TF.attribute",
                    "name": "_attributes",
                    "method": "attributes",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasAttributes",
                    "validate": false,
                    "optional": true,
                    "original": "attributes"
                },
                {
                    "default": "_pushEndpoint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"push_endpoint\" <$> TF.attribute",
                    "name": "_pushEndpoint",
                    "method": "pushEndpoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPushEndpoint",
                    "validate": false,
                    "optional": false,
                    "original": "push_endpoint"
                }
            ],
            "name": "PushConfig",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_pushEndpoint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"push_endpoint\" <$> TF.attribute",
                    "name": "_pushEndpoint",
                    "method": "pushEndpoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPushEndpoint",
                    "validate": false,
                    "optional": false,
                    "original": "push_endpoint"
                }
            ],
            "conflicts": [],
            "type": "PushConfig s",
            "original": "push_config"
        },
        {
            "con": {
                "smart": "newWorkerConfig",
                "name": "WorkerConfig'"
            },
            "arguments": [],
            "name": "WorkerConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_config\" <$> TF.attribute",
                    "name": "_computedDiskConfig",
                    "method": "computedDiskConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (DiskConfig s)",
                    "class": "HasComputedDiskConfig",
                    "validate": true,
                    "optional": true,
                    "original": "disk_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_names\" <$> TF.attribute",
                    "name": "_computedInstanceNames",
                    "method": "computedInstanceNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstanceNames",
                    "validate": false,
                    "optional": false,
                    "original": "instance_names"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_computedMachineType",
                    "method": "computedMachineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMachineType",
                    "validate": false,
                    "optional": true,
                    "original": "machine_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_instances\" <$> TF.attribute",
                    "name": "_computedNumInstances",
                    "method": "computedNumInstances",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNumInstances",
                    "validate": false,
                    "optional": true,
                    "original": "num_instances"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "WorkerConfig s",
            "original": "worker_config"
        },
        {
            "con": {
                "smart": "newCpuUtilization",
                "name": "CpuUtilization'"
            },
            "arguments": [
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "name": "CpuUtilization",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "conflicts": [],
            "type": "CpuUtilization s",
            "original": "cpu_utilization"
        },
        {
            "con": {
                "smart": "newPigConfig",
                "name": "PigConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"continue_on_failure\" <$> TF.attribute",
                    "name": "_continueOnFailure",
                    "method": "continueOnFailure",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasContinueOnFailure",
                    "validate": false,
                    "optional": true,
                    "original": "continue_on_failure"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"jar_file_uris\" <$> TF.attribute",
                    "name": "_jarFileUris",
                    "method": "jarFileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasJarFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "jar_file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "_properties",
                    "method": "properties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasProperties",
                    "validate": false,
                    "optional": true,
                    "original": "properties"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_file_uri\" <$> TF.attribute",
                    "name": "_queryFileUri",
                    "method": "queryFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryList",
                            "method": "queryList"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQueryFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "query_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_list\" <$> TF.attribute",
                    "name": "_queryList",
                    "method": "queryList",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryFileUri",
                            "method": "queryFileUri"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasQueryList",
                    "validate": false,
                    "optional": true,
                    "original": "query_list"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"script_variables\" <$> TF.attribute",
                    "name": "_scriptVariables",
                    "method": "scriptVariables",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasScriptVariables",
                    "validate": false,
                    "optional": true,
                    "original": "script_variables"
                }
            ],
            "name": "PigConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The runtime logging config of the job"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging_config\" <$> TF.attribute",
                    "name": "_computedLoggingConfig",
                    "method": "computedLoggingConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (LoggingConfig s)",
                    "class": "HasComputedLoggingConfig",
                    "validate": true,
                    "optional": true,
                    "original": "logging_config"
                }
            ],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_file_uri\" <$> TF.attribute",
                    "name": "_queryFileUri",
                    "method": "queryFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryList",
                            "method": "queryList"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQueryFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "query_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query_list\" <$> TF.attribute",
                    "name": "_queryList",
                    "method": "queryList",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_queryFileUri",
                            "method": "queryFileUri"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasQueryList",
                    "validate": false,
                    "optional": true,
                    "original": "query_list"
                }
            ],
            "type": "PigConfig s",
            "original": "pig_config"
        },
        {
            "con": {
                "smart": "newCondition",
                "name": "Condition'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"age\" <$> TF.attribute",
                    "name": "_age",
                    "method": "age",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAge",
                    "validate": false,
                    "optional": true,
                    "original": "age"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_before\" <$> TF.attribute",
                    "name": "_createdBefore",
                    "method": "createdBefore",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCreatedBefore",
                    "validate": false,
                    "optional": true,
                    "original": "created_before"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_live\" <$> TF.attribute",
                    "name": "_isLive",
                    "method": "isLive",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIsLive",
                    "validate": false,
                    "optional": true,
                    "original": "is_live"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"matches_storage_class\" <$> TF.attribute",
                    "name": "_matchesStorageClass",
                    "method": "matchesStorageClass",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasMatchesStorageClass",
                    "validate": false,
                    "optional": true,
                    "original": "matches_storage_class"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_newer_versions\" <$> TF.attribute",
                    "name": "_numNewerVersions",
                    "method": "numNewerVersions",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasNumNewerVersions",
                    "validate": false,
                    "optional": true,
                    "original": "num_newer_versions"
                }
            ],
            "name": "Condition",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "Condition s",
            "original": "condition"
        },
        {
            "con": {
                "smart": "newPublicKeyCertificate",
                "name": "PublicKeyCertificate'"
            },
            "arguments": [
                {
                    "default": "_certificate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"certificate\" <$> TF.attribute",
                    "name": "_certificate",
                    "method": "certificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificate",
                    "validate": false,
                    "optional": false,
                    "original": "certificate"
                },
                {
                    "default": "_format",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": false,
                    "original": "format"
                }
            ],
            "name": "PublicKeyCertificate",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_certificate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"certificate\" <$> TF.attribute",
                    "name": "_certificate",
                    "method": "certificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificate",
                    "validate": false,
                    "optional": false,
                    "original": "certificate"
                },
                {
                    "default": "_format",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": false,
                    "original": "format"
                }
            ],
            "conflicts": [],
            "type": "PublicKeyCertificate s",
            "original": "public_key_certificate"
        },
        {
            "con": {
                "smart": "newTargetSize",
                "name": "TargetSize'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fixed\" <$> TF.attribute",
                    "name": "_fixed",
                    "method": "fixed",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFixed",
                    "validate": false,
                    "optional": true,
                    "original": "fixed"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"percent\" <$> TF.attribute",
                    "name": "_percent",
                    "method": "percent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPercent",
                    "validate": false,
                    "optional": true,
                    "original": "percent"
                }
            ],
            "name": "TargetSize",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "TargetSize s",
            "original": "target_size"
        },
        {
            "con": {
                "smart": "newLogging",
                "name": "Logging'"
            },
            "arguments": [
                {
                    "default": "_logBucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"log_bucket\" <$> TF.attribute",
                    "name": "_logBucket",
                    "method": "logBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLogBucket",
                    "validate": false,
                    "optional": false,
                    "original": "log_bucket"
                }
            ],
            "name": "Logging",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"log_object_prefix\" <$> TF.attribute",
                    "name": "_computedLogObjectPrefix",
                    "method": "computedLogObjectPrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLogObjectPrefix",
                    "validate": false,
                    "optional": true,
                    "original": "log_object_prefix"
                }
            ],
            "parameters": [
                {
                    "default": "_logBucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"log_bucket\" <$> TF.attribute",
                    "name": "_logBucket",
                    "method": "logBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLogBucket",
                    "validate": false,
                    "optional": false,
                    "original": "log_bucket"
                }
            ],
            "conflicts": [],
            "type": "Logging s",
            "original": "logging"
        },
        {
            "con": {
                "smart": "newSparkConfig",
                "name": "SparkConfig'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"archive_uris\" <$> TF.attribute",
                    "name": "_archiveUris",
                    "method": "archiveUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasArchiveUris",
                    "validate": false,
                    "optional": true,
                    "original": "archive_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"args\" <$> TF.attribute",
                    "name": "_args",
                    "method": "args",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasArgs",
                    "validate": false,
                    "optional": true,
                    "original": "args"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"file_uris\" <$> TF.attribute",
                    "name": "_fileUris",
                    "method": "fileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"jar_file_uris\" <$> TF.attribute",
                    "name": "_jarFileUris",
                    "method": "jarFileUris",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasJarFileUris",
                    "validate": false,
                    "optional": true,
                    "original": "jar_file_uris"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_class\" <$> TF.attribute",
                    "name": "_mainClass",
                    "method": "mainClass",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainJarFileUri",
                            "method": "mainJarFileUri"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainClass",
                    "validate": false,
                    "optional": true,
                    "original": "main_class"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_jar_file_uri\" <$> TF.attribute",
                    "name": "_mainJarFileUri",
                    "method": "mainJarFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainClass",
                            "method": "mainClass"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainJarFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "main_jar_file_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "_properties",
                    "method": "properties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasProperties",
                    "validate": false,
                    "optional": true,
                    "original": "properties"
                }
            ],
            "name": "SparkConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The runtime logging config of the job"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging_config\" <$> TF.attribute",
                    "name": "_computedLoggingConfig",
                    "method": "computedLoggingConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (LoggingConfig s)",
                    "class": "HasComputedLoggingConfig",
                    "validate": true,
                    "optional": true,
                    "original": "logging_config"
                }
            ],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_class\" <$> TF.attribute",
                    "name": "_mainClass",
                    "method": "mainClass",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainJarFileUri",
                            "method": "mainJarFileUri"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainClass",
                    "validate": false,
                    "optional": true,
                    "original": "main_class"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"main_jar_file_uri\" <$> TF.attribute",
                    "name": "_mainJarFileUri",
                    "method": "mainJarFileUri",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_mainClass",
                            "method": "mainClass"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMainJarFileUri",
                    "validate": false,
                    "optional": true,
                    "original": "main_jar_file_uri"
                }
            ],
            "type": "SparkConfig s",
            "original": "spark_config"
        },
        {
            "con": {
                "smart": "newDeny",
                "name": "Deny'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"all\" <$> TF.attribute",
                    "name": "_all",
                    "method": "all",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_values",
                            "method": "values"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAll",
                    "validate": false,
                    "optional": true,
                    "original": "all"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "_values",
                    "method": "values",
                    "conflicts": [
                        {
                            "default": "TF.value P.False",
                            "name": "_all",
                            "method": "all"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasValues",
                    "validate": false,
                    "optional": true,
                    "original": "values"
                }
            ],
            "name": "Deny",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"all\" <$> TF.attribute",
                    "name": "_all",
                    "method": "all",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_values",
                            "method": "values"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAll",
                    "validate": false,
                    "optional": true,
                    "original": "all"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"values\" <$> TF.attribute",
                    "name": "_values",
                    "method": "values",
                    "conflicts": [
                        {
                            "default": "TF.value P.False",
                            "name": "_all",
                            "method": "all"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasValues",
                    "validate": false,
                    "optional": true,
                    "original": "values"
                }
            ],
            "type": "Deny s",
            "original": "deny"
        },
        {
            "con": {
                "smart": "newNamedPorts",
                "name": "NamedPorts'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": false,
                    "original": "port"
                }
            ],
            "name": "NamedPorts",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": false,
                    "original": "port"
                }
            ],
            "conflicts": [],
            "type": "NamedPorts s",
            "original": "named_ports"
        },
        {
            "con": {
                "smart": "newCdnPolicy",
                "name": "CdnPolicy'"
            },
            "arguments": [],
            "name": "CdnPolicy",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_key_policy\" <$> TF.attribute",
                    "name": "_computedCacheKeyPolicy",
                    "method": "computedCacheKeyPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (CacheKeyPolicy s)]",
                    "class": "HasComputedCacheKeyPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "cache_key_policy"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "CdnPolicy s",
            "original": "cdn_policy"
        },
        {
            "con": {
                "smart": "newPathMatcher",
                "name": "PathMatcher'"
            },
            "arguments": [
                {
                    "default": "_defaultService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_service\" <$> TF.attribute",
                    "name": "_defaultService",
                    "method": "defaultService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultService",
                    "validate": false,
                    "optional": false,
                    "original": "default_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path_rule\" <$> TF.attribute",
                    "name": "_pathRule",
                    "method": "pathRule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PathRule s)]",
                    "class": "HasPathRule",
                    "validate": true,
                    "optional": true,
                    "original": "path_rule"
                }
            ],
            "name": "PathMatcher",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_defaultService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_service\" <$> TF.attribute",
                    "name": "_defaultService",
                    "method": "defaultService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultService",
                    "validate": false,
                    "optional": false,
                    "original": "default_service"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "PathMatcher s",
            "original": "path_matcher"
        },
        {
            "con": {
                "smart": "newClientCertificateConfig",
                "name": "ClientCertificateConfig'"
            },
            "arguments": [],
            "name": "ClientCertificateConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"issue_client_certificate\" <$> TF.attribute",
                    "name": "_computedIssueClientCertificate",
                    "method": "computedIssueClientCertificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIssueClientCertificate",
                    "validate": false,
                    "optional": false,
                    "original": "issue_client_certificate"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ClientCertificateConfig s",
            "original": "client_certificate_config"
        },
        {
            "con": {
                "smart": "newSslHealthCheck",
                "name": "SslHealthCheck'"
            },
            "arguments": [
                {
                    "default": "TF.value 443",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_header\" <$> TF.attribute",
                    "name": "_proxyHeader",
                    "method": "proxyHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProxyHeader",
                    "validate": false,
                    "optional": true,
                    "original": "proxy_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request\" <$> TF.attribute",
                    "name": "_request",
                    "method": "request",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequest",
                    "validate": false,
                    "optional": true,
                    "original": "request"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "_response",
                    "method": "response",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponse",
                    "validate": false,
                    "optional": true,
                    "original": "response"
                }
            ],
            "name": "SslHealthCheck",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "SslHealthCheck s",
            "original": "ssl_health_check"
        },
        {
            "con": {
                "smart": "newMaintenanceWindow",
                "name": "MaintenanceWindow'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"day\" <$> TF.attribute",
                    "name": "_day",
                    "method": "day",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDay",
                    "validate": false,
                    "optional": true,
                    "original": "day"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hour\" <$> TF.attribute",
                    "name": "_hour",
                    "method": "hour",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasHour",
                    "validate": false,
                    "optional": true,
                    "original": "hour"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_track\" <$> TF.attribute",
                    "name": "_updateTrack",
                    "method": "updateTrack",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUpdateTrack",
                    "validate": false,
                    "optional": true,
                    "original": "update_track"
                }
            ],
            "name": "MaintenanceWindow",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "MaintenanceWindow s",
            "original": "maintenance_window"
        },
        {
            "con": {
                "smart": "newAdvertisedIpRanges",
                "name": "AdvertisedIpRanges'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"range\" <$> TF.attribute",
                    "name": "_range",
                    "method": "range",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRange",
                    "validate": false,
                    "optional": true,
                    "original": "range"
                }
            ],
            "name": "AdvertisedIpRanges",
            "threaded": true,
            "attributes": [],
            "parameters": [],
            "conflicts": [],
            "type": "AdvertisedIpRanges s",
            "original": "advertised_ip_ranges"
        },
        {
            "con": {
                "smart": "newAddonsConfig",
                "name": "AddonsConfig'"
            },
            "arguments": [],
            "name": "AddonsConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"horizontal_pod_autoscaling\" <$> TF.attribute",
                    "name": "_computedHorizontalPodAutoscaling",
                    "method": "computedHorizontalPodAutoscaling",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (HorizontalPodAutoscaling s)]",
                    "class": "HasComputedHorizontalPodAutoscaling",
                    "validate": true,
                    "optional": false,
                    "original": "horizontal_pod_autoscaling"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_load_balancing\" <$> TF.attribute",
                    "name": "_computedHttpLoadBalancing",
                    "method": "computedHttpLoadBalancing",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (HttpLoadBalancing s)]",
                    "class": "HasComputedHttpLoadBalancing",
                    "validate": true,
                    "optional": false,
                    "original": "http_load_balancing"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"kubernetes_dashboard\" <$> TF.attribute",
                    "name": "_computedKubernetesDashboard",
                    "method": "computedKubernetesDashboard",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (KubernetesDashboard s)]",
                    "class": "HasComputedKubernetesDashboard",
                    "validate": true,
                    "optional": false,
                    "original": "kubernetes_dashboard"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_policy_config\" <$> TF.attribute",
                    "name": "_computedNetworkPolicyConfig",
                    "method": "computedNetworkPolicyConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NetworkPolicyConfig s)]",
                    "class": "HasComputedNetworkPolicyConfig",
                    "validate": true,
                    "optional": false,
                    "original": "network_policy_config"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "AddonsConfig s",
            "original": "addons_config"
        },
        {
            "con": {
                "smart": "newScratchDisk",
                "name": "ScratchDisk'"
            },
            "arguments": [],
            "name": "ScratchDisk",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"interface\" <$> TF.attribute",
                    "name": "_computedInterface",
                    "method": "computedInterface",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInterface",
                    "validate": false,
                    "optional": true,
                    "original": "interface"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ScratchDisk s",
            "original": "scratch_disk"
        },
        {
            "con": {
                "smart": "newSourceSnapshotEncryptionKey",
                "name": "SourceSnapshotEncryptionKey'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"raw_key\" <$> TF.attribute",
                    "name": "_rawKey",
                    "method": "rawKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRawKey",
                    "validate": false,
                    "optional": true,
                    "original": "raw_key"
                }
            ],
            "name": "SourceSnapshotEncryptionKey",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sha256\" <$> TF.attribute",
                    "name": "_computedSha256",
                    "method": "computedSha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSha256",
                    "validate": false,
                    "optional": false,
                    "original": "sha256"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "SourceSnapshotEncryptionKey s",
            "original": "source_snapshot_encryption_key"
        },
        {
            "con": {
                "smart": "newAccessConfig",
                "name": "AccessConfig'"
            },
            "arguments": [],
            "name": "AccessConfig",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"assigned_nat_ip\" <$> TF.attribute",
                    "name": "_computedAssignedNatIp",
                    "method": "computedAssignedNatIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAssignedNatIp",
                    "validate": false,
                    "optional": false,
                    "original": "assigned_nat_ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"nat_ip\" <$> TF.attribute",
                    "name": "_computedNatIp",
                    "method": "computedNatIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNatIp",
                    "validate": false,
                    "optional": true,
                    "original": "nat_ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_tier\" <$> TF.attribute",
                    "name": "_computedNetworkTier",
                    "method": "computedNetworkTier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetworkTier",
                    "validate": false,
                    "optional": true,
                    "original": "network_tier"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "AccessConfig s",
            "original": "access_config"
        },
        {
            "con": {
                "smart": "newIpAllocationPolicy",
                "name": "IpAllocationPolicy'"
            },
            "arguments": [],
            "name": "IpAllocationPolicy",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_secondary_range_name\" <$> TF.attribute",
                    "name": "_computedClusterSecondaryRangeName",
                    "method": "computedClusterSecondaryRangeName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClusterSecondaryRangeName",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_secondary_range_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services_secondary_range_name\" <$> TF.attribute",
                    "name": "_computedServicesSecondaryRangeName",
                    "method": "computedServicesSecondaryRangeName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServicesSecondaryRangeName",
                    "validate": false,
                    "optional": false,
                    "original": "services_secondary_range_name"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "IpAllocationPolicy s",
            "original": "ip_allocation_policy"
        },
        {
            "con": {
                "smart": "newKubernetesDashboard",
                "name": "KubernetesDashboard'"
            },
            "arguments": [],
            "name": "KubernetesDashboard",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_computedDisabled",
                    "method": "computedDisabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDisabled",
                    "validate": false,
                    "optional": false,
                    "original": "disabled"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "KubernetesDashboard s",
            "original": "kubernetes_dashboard"
        },
        {
            "con": {
                "smart": "newPlacement",
                "name": "Placement'"
            },
            "arguments": [
                {
                    "default": "_clusterName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the cluster where the job will be submitted"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"cluster_name\" <$> TF.attribute",
                    "name": "_clusterName",
                    "method": "clusterName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClusterName",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_name"
                }
            ],
            "name": "Placement",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Output-only. A cluster UUID generated by the Cloud Dataproc service when the",
                        "job is submitted"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_uuid\" <$> TF.attribute",
                    "name": "_computedClusterUuid",
                    "method": "computedClusterUuid",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClusterUuid",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_uuid"
                }
            ],
            "parameters": [
                {
                    "default": "_clusterName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the cluster where the job will be submitted"
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"cluster_name\" <$> TF.attribute",
                    "name": "_clusterName",
                    "method": "clusterName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClusterName",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_name"
                }
            ],
            "conflicts": [],
            "type": "Placement s",
            "original": "placement"
        },
        {
            "con": {
                "smart": "newHostRule",
                "name": "HostRule'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_hosts",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hosts\" <$> TF.attribute",
                    "name": "_hosts",
                    "method": "hosts",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasHosts",
                    "validate": false,
                    "optional": false,
                    "original": "hosts"
                },
                {
                    "default": "_pathMatcher",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path_matcher\" <$> TF.attribute",
                    "name": "_pathMatcher",
                    "method": "pathMatcher",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPathMatcher",
                    "validate": false,
                    "optional": false,
                    "original": "path_matcher"
                }
            ],
            "name": "HostRule",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_hosts",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"hosts\" <$> TF.attribute",
                    "name": "_hosts",
                    "method": "hosts",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasHosts",
                    "validate": false,
                    "optional": false,
                    "original": "hosts"
                },
                {
                    "default": "_pathMatcher",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path_matcher\" <$> TF.attribute",
                    "name": "_pathMatcher",
                    "method": "pathMatcher",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPathMatcher",
                    "validate": false,
                    "optional": false,
                    "original": "path_matcher"
                }
            ],
            "conflicts": [],
            "type": "HostRule s",
            "original": "host_rule"
        },
        {
            "con": {
                "smart": "newNetworkPolicy",
                "name": "NetworkPolicy'"
            },
            "arguments": [],
            "name": "NetworkPolicy",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "_computedEnabled",
                    "method": "computedEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnabled",
                    "validate": false,
                    "optional": false,
                    "original": "enabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"provider\" <$> TF.attribute",
                    "name": "_computedProvider",
                    "method": "computedProvider",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProvider",
                    "validate": false,
                    "optional": false,
                    "original": "provider"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "NetworkPolicy s",
            "original": "network_policy"
        },
        {
            "con": {
                "smart": "newBinding",
                "name": "Binding'"
            },
            "arguments": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "Binding",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "Binding s",
            "original": "binding"
        }
    ],
    "dataSources": [
        {
            "con": {
                "smart": "activeFolderData",
                "name": "ActiveFolderData'"
            },
            "arguments": [
                {
                    "default": "_displayName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                }
            ],
            "name": "ActiveFolderData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [
                {
                    "default": "_displayName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                }
            ],
            "conflicts": [],
            "type": "ActiveFolderData s",
            "original": "google_active_folder"
        },
        {
            "con": {
                "smart": "billingAccountData",
                "name": "BillingAccountData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"billing_account\" <$> TF.attribute",
                    "name": "_billingAccount",
                    "method": "billingAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBillingAccount",
                    "validate": false,
                    "optional": true,
                    "original": "billing_account"
                }
            ],
            "name": "BillingAccountData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_computedDisplayName",
                    "method": "computedDisplayName",
                    "conflicts": [
                        "_billingAccount"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDisplayName",
                    "validate": false,
                    "optional": true,
                    "original": "display_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"open\" <$> TF.attribute",
                    "name": "_computedOpen",
                    "method": "computedOpen",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedOpen",
                    "validate": false,
                    "optional": true,
                    "original": "open"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_ids\" <$> TF.attribute",
                    "name": "_computedProjectIds",
                    "method": "computedProjectIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedProjectIds",
                    "validate": false,
                    "optional": false,
                    "original": "project_ids"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "BillingAccountData s",
            "original": "google_billing_account"
        },
        {
            "con": {
                "smart": "clientConfigData",
                "name": "ClientConfigData'"
            },
            "arguments": [],
            "name": "ClientConfigData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"access_token\" <$> TF.attribute",
                    "name": "_computedAccessToken",
                    "method": "computedAccessToken",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAccessToken",
                    "validate": false,
                    "optional": false,
                    "original": "access_token"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": false,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": false,
                    "original": "region"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ClientConfigData s",
            "original": "google_client_config"
        },
        {
            "con": {
                "smart": "cloudfunctionsFunctionData",
                "name": "CloudfunctionsFunctionData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "name": "CloudfunctionsFunctionData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"available_memory_mb\" <$> TF.attribute",
                    "name": "_computedAvailableMemoryMb",
                    "method": "computedAvailableMemoryMb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedAvailableMemoryMb",
                    "validate": false,
                    "optional": false,
                    "original": "available_memory_mb"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"entry_point\" <$> TF.attribute",
                    "name": "_computedEntryPoint",
                    "method": "computedEntryPoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEntryPoint",
                    "validate": false,
                    "optional": false,
                    "original": "entry_point"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"https_trigger_url\" <$> TF.attribute",
                    "name": "_computedHttpsTriggerUrl",
                    "method": "computedHttpsTriggerUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttpsTriggerUrl",
                    "validate": false,
                    "optional": false,
                    "original": "https_trigger_url"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_computedLabels",
                    "method": "computedLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedLabels",
                    "validate": false,
                    "optional": false,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_on_failure\" <$> TF.attribute",
                    "name": "_computedRetryOnFailure",
                    "method": "computedRetryOnFailure",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedRetryOnFailure",
                    "validate": false,
                    "optional": false,
                    "original": "retry_on_failure"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_archive_bucket\" <$> TF.attribute",
                    "name": "_computedSourceArchiveBucket",
                    "method": "computedSourceArchiveBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceArchiveBucket",
                    "validate": false,
                    "optional": false,
                    "original": "source_archive_bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_archive_object\" <$> TF.attribute",
                    "name": "_computedSourceArchiveObject",
                    "method": "computedSourceArchiveObject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceArchiveObject",
                    "validate": false,
                    "optional": false,
                    "original": "source_archive_object"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "_computedTimeout",
                    "method": "computedTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTimeout",
                    "validate": false,
                    "optional": false,
                    "original": "timeout"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"trigger_bucket\" <$> TF.attribute",
                    "name": "_computedTriggerBucket",
                    "method": "computedTriggerBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTriggerBucket",
                    "validate": false,
                    "optional": false,
                    "original": "trigger_bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"trigger_http\" <$> TF.attribute",
                    "name": "_computedTriggerHttp",
                    "method": "computedTriggerHttp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedTriggerHttp",
                    "validate": false,
                    "optional": false,
                    "original": "trigger_http"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"trigger_topic\" <$> TF.attribute",
                    "name": "_computedTriggerTopic",
                    "method": "computedTriggerTopic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTriggerTopic",
                    "validate": false,
                    "optional": false,
                    "original": "trigger_topic"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "CloudfunctionsFunctionData s",
            "original": "google_cloudfunctions_function"
        },
        {
            "con": {
                "smart": "computeAddressData",
                "name": "ComputeAddressData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeAddressData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_computedAddress",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_computedStatus",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeAddressData s",
            "original": "google_compute_address"
        },
        {
            "con": {
                "smart": "computeBackendServiceData",
                "name": "ComputeBackendServiceData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "name": "ComputeBackendServiceData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend\" <$> TF.attribute",
                    "name": "_computedBackend",
                    "method": "computedBackend",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Backend s)]",
                    "class": "HasComputedBackend",
                    "validate": true,
                    "optional": false,
                    "original": "backend"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cdn_policy\" <$> TF.attribute",
                    "name": "_computedCdnPolicy",
                    "method": "computedCdnPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (CdnPolicy s)]",
                    "class": "HasComputedCdnPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "cdn_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"connection_draining_timeout_sec\" <$> TF.attribute",
                    "name": "_computedConnectionDrainingTimeoutSec",
                    "method": "computedConnectionDrainingTimeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedConnectionDrainingTimeoutSec",
                    "validate": false,
                    "optional": false,
                    "original": "connection_draining_timeout_sec"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"custom_request_headers\" <$> TF.attribute",
                    "name": "_computedCustomRequestHeaders",
                    "method": "computedCustomRequestHeaders",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCustomRequestHeaders",
                    "validate": false,
                    "optional": false,
                    "original": "custom_request_headers"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_cdn\" <$> TF.attribute",
                    "name": "_computedEnableCdn",
                    "method": "computedEnableCdn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableCdn",
                    "validate": false,
                    "optional": false,
                    "original": "enable_cdn"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_checks\" <$> TF.attribute",
                    "name": "_computedHealthChecks",
                    "method": "computedHealthChecks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedHealthChecks",
                    "validate": false,
                    "optional": false,
                    "original": "health_checks"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"iap\" <$> TF.attribute",
                    "name": "_computedIap",
                    "method": "computedIap",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Iap s)]",
                    "class": "HasComputedIap",
                    "validate": true,
                    "optional": false,
                    "original": "iap"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_name\" <$> TF.attribute",
                    "name": "_computedPortName",
                    "method": "computedPortName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPortName",
                    "validate": false,
                    "optional": false,
                    "original": "port_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "_computedProtocol",
                    "method": "computedProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProtocol",
                    "validate": false,
                    "optional": false,
                    "original": "protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": false,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_policy\" <$> TF.attribute",
                    "name": "_computedSecurityPolicy",
                    "method": "computedSecurityPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSecurityPolicy",
                    "validate": false,
                    "optional": false,
                    "original": "security_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"session_affinity\" <$> TF.attribute",
                    "name": "_computedSessionAffinity",
                    "method": "computedSessionAffinity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSessionAffinity",
                    "validate": false,
                    "optional": false,
                    "original": "session_affinity"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout_sec\" <$> TF.attribute",
                    "name": "_computedTimeoutSec",
                    "method": "computedTimeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTimeoutSec",
                    "validate": false,
                    "optional": false,
                    "original": "timeout_sec"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeBackendServiceData s",
            "original": "google_compute_backend_service"
        },
        {
            "con": {
                "smart": "computeDefaultServiceAccountData",
                "name": "ComputeDefaultServiceAccountData'"
            },
            "arguments": [],
            "name": "ComputeDefaultServiceAccountData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_computedEmail",
                    "method": "computedEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ComputeDefaultServiceAccountData s",
            "original": "google_compute_default_service_account"
        },
        {
            "con": {
                "smart": "computeForwardingRuleData",
                "name": "ComputeForwardingRuleData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeForwardingRuleData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend_service\" <$> TF.attribute",
                    "name": "_computedBackendService",
                    "method": "computedBackendService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBackendService",
                    "validate": false,
                    "optional": false,
                    "original": "backend_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "_computedIpAddress",
                    "method": "computedIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpAddress",
                    "validate": false,
                    "optional": false,
                    "original": "ip_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_protocol\" <$> TF.attribute",
                    "name": "_computedIpProtocol",
                    "method": "computedIpProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpProtocol",
                    "validate": false,
                    "optional": false,
                    "original": "ip_protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"load_balancing_scheme\" <$> TF.attribute",
                    "name": "_computedLoadBalancingScheme",
                    "method": "computedLoadBalancingScheme",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLoadBalancingScheme",
                    "validate": false,
                    "optional": false,
                    "original": "load_balancing_scheme"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_range\" <$> TF.attribute",
                    "name": "_computedPortRange",
                    "method": "computedPortRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPortRange",
                    "validate": false,
                    "optional": false,
                    "original": "port_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ports\" <$> TF.attribute",
                    "name": "_computedPorts",
                    "method": "computedPorts",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedPorts",
                    "validate": false,
                    "optional": false,
                    "original": "ports"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_computedSubnetwork",
                    "method": "computedSubnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_computedTarget",
                    "method": "computedTarget",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeForwardingRuleData s",
            "original": "google_compute_forwarding_rule"
        },
        {
            "con": {
                "smart": "computeGlobalAddressData",
                "name": "ComputeGlobalAddressData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeGlobalAddressData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_computedAddress",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_computedStatus",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeGlobalAddressData s",
            "original": "google_compute_global_address"
        },
        {
            "con": {
                "smart": "computeImageData",
                "name": "ComputeImageData'"
            },
            "arguments": [],
            "name": "ComputeImageData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"archive_size_bytes\" <$> TF.attribute",
                    "name": "_computedArchiveSizeBytes",
                    "method": "computedArchiveSizeBytes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedArchiveSizeBytes",
                    "validate": false,
                    "optional": false,
                    "original": "archive_size_bytes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_size_gb\" <$> TF.attribute",
                    "name": "_computedDiskSizeGb",
                    "method": "computedDiskSizeGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDiskSizeGb",
                    "validate": false,
                    "optional": false,
                    "original": "disk_size_gb"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"family\" <$> TF.attribute",
                    "name": "_computedFamily",
                    "method": "computedFamily",
                    "conflicts": [
                        "_name"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFamily",
                    "validate": false,
                    "optional": true,
                    "original": "family"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"image_encryption_key_sha256\" <$> TF.attribute",
                    "name": "_computedImageEncryptionKeySha256",
                    "method": "computedImageEncryptionKeySha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImageEncryptionKeySha256",
                    "validate": false,
                    "optional": false,
                    "original": "image_encryption_key_sha256"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"image_id\" <$> TF.attribute",
                    "name": "_computedImageId",
                    "method": "computedImageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImageId",
                    "validate": false,
                    "optional": false,
                    "original": "image_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_computedLabels",
                    "method": "computedLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedLabels",
                    "validate": false,
                    "optional": false,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"licenses\" <$> TF.attribute",
                    "name": "_computedLicenses",
                    "method": "computedLicenses",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedLicenses",
                    "validate": false,
                    "optional": false,
                    "original": "licenses"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [
                        "_family'"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_disk\" <$> TF.attribute",
                    "name": "_computedSourceDisk",
                    "method": "computedSourceDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceDisk",
                    "validate": false,
                    "optional": false,
                    "original": "source_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_disk_encryption_key_sha256\" <$> TF.attribute",
                    "name": "_computedSourceDiskEncryptionKeySha256",
                    "method": "computedSourceDiskEncryptionKeySha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceDiskEncryptionKeySha256",
                    "validate": false,
                    "optional": false,
                    "original": "source_disk_encryption_key_sha256"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_disk_id\" <$> TF.attribute",
                    "name": "_computedSourceDiskId",
                    "method": "computedSourceDiskId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceDiskId",
                    "validate": false,
                    "optional": false,
                    "original": "source_disk_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_image_id\" <$> TF.attribute",
                    "name": "_computedSourceImageId",
                    "method": "computedSourceImageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceImageId",
                    "validate": false,
                    "optional": false,
                    "original": "source_image_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_computedStatus",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "validate": false,
                    "optional": false,
                    "original": "status"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ComputeImageData s",
            "original": "google_compute_image"
        },
        {
            "con": {
                "smart": "computeInstanceGroupData",
                "name": "ComputeInstanceGroupData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                }
            ],
            "name": "ComputeInstanceGroupData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instances\" <$> TF.attribute",
                    "name": "_computedInstances",
                    "method": "computedInstances",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstances",
                    "validate": false,
                    "optional": false,
                    "original": "instances"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"named_port\" <$> TF.attribute",
                    "name": "_computedNamedPort",
                    "method": "computedNamedPort",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NamedPort s)]",
                    "class": "HasComputedNamedPort",
                    "validate": true,
                    "optional": false,
                    "original": "named_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [
                        "_name",
                        "_zone"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": true,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_computedSize",
                    "method": "computedSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSize",
                    "validate": false,
                    "optional": false,
                    "original": "size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [
                        "_selfLink"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ComputeInstanceGroupData s",
            "original": "google_compute_instance_group"
        },
        {
            "con": {
                "smart": "computeLbIpRangesData",
                "name": "ComputeLbIpRangesData'"
            },
            "arguments": [],
            "name": "ComputeLbIpRangesData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_ssl_tcp_internal\" <$> TF.attribute",
                    "name": "_computedHttpSslTcpInternal",
                    "method": "computedHttpSslTcpInternal",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedHttpSslTcpInternal",
                    "validate": false,
                    "optional": false,
                    "original": "http_ssl_tcp_internal"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ComputeLbIpRangesData s",
            "original": "google_compute_lb_ip_ranges"
        },
        {
            "con": {
                "smart": "computeNetworkData",
                "name": "ComputeNetworkData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "name": "ComputeNetworkData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway_ipv4\" <$> TF.attribute",
                    "name": "_computedGatewayIpv4",
                    "method": "computedGatewayIpv4",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGatewayIpv4",
                    "validate": false,
                    "optional": false,
                    "original": "gateway_ipv4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnetworks_self_links\" <$> TF.attribute",
                    "name": "_computedSubnetworksSelfLinks",
                    "method": "computedSubnetworksSelfLinks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedSubnetworksSelfLinks",
                    "validate": false,
                    "optional": false,
                    "original": "subnetworks_self_links"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeNetworkData s",
            "original": "google_compute_network"
        },
        {
            "con": {
                "smart": "computeRegionInstanceGroupData",
                "name": "ComputeRegionInstanceGroupData'"
            },
            "arguments": [],
            "name": "ComputeRegionInstanceGroupData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instances\" <$> TF.attribute",
                    "name": "_computedInstances",
                    "method": "computedInstances",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Instances s)]",
                    "class": "HasComputedInstances",
                    "validate": true,
                    "optional": false,
                    "original": "instances"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": true,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_computedSize",
                    "method": "computedSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSize",
                    "validate": false,
                    "optional": false,
                    "original": "size"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ComputeRegionInstanceGroupData s",
            "original": "google_compute_region_instance_group"
        },
        {
            "con": {
                "smart": "computeRegionsData",
                "name": "ComputeRegionsData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": true,
                    "original": "status"
                }
            ],
            "name": "ComputeRegionsData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"names\" <$> TF.attribute",
                    "name": "_computedNames",
                    "method": "computedNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNames",
                    "validate": false,
                    "optional": false,
                    "original": "names"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ComputeRegionsData s",
            "original": "google_compute_regions"
        },
        {
            "con": {
                "smart": "computeSslPolicyData",
                "name": "ComputeSslPolicyData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "name": "ComputeSslPolicyData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"custom_features\" <$> TF.attribute",
                    "name": "_computedCustomFeatures",
                    "method": "computedCustomFeatures",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCustomFeatures",
                    "validate": false,
                    "optional": false,
                    "original": "custom_features"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled_features\" <$> TF.attribute",
                    "name": "_computedEnabledFeatures",
                    "method": "computedEnabledFeatures",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedEnabledFeatures",
                    "validate": false,
                    "optional": false,
                    "original": "enabled_features"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "_computedMinTlsVersion",
                    "method": "computedMinTlsVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinTlsVersion",
                    "validate": false,
                    "optional": false,
                    "original": "min_tls_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"profile\" <$> TF.attribute",
                    "name": "_computedProfile",
                    "method": "computedProfile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProfile",
                    "validate": false,
                    "optional": false,
                    "original": "profile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeSslPolicyData s",
            "original": "google_compute_ssl_policy"
        },
        {
            "con": {
                "smart": "computeSubnetworkData",
                "name": "ComputeSubnetworkData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeSubnetworkData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway_address\" <$> TF.attribute",
                    "name": "_computedGatewayAddress",
                    "method": "computedGatewayAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGatewayAddress",
                    "validate": false,
                    "optional": false,
                    "original": "gateway_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_cidr_range\" <$> TF.attribute",
                    "name": "_computedIpCidrRange",
                    "method": "computedIpCidrRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpCidrRange",
                    "validate": false,
                    "optional": false,
                    "original": "ip_cidr_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_ip_google_access\" <$> TF.attribute",
                    "name": "_computedPrivateIpGoogleAccess",
                    "method": "computedPrivateIpGoogleAccess",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPrivateIpGoogleAccess",
                    "validate": false,
                    "optional": false,
                    "original": "private_ip_google_access"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"secondary_ip_range\" <$> TF.attribute",
                    "name": "_computedSecondaryIpRange",
                    "method": "computedSecondaryIpRange",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (SecondaryIpRange s)]",
                    "class": "HasComputedSecondaryIpRange",
                    "validate": true,
                    "optional": false,
                    "original": "secondary_ip_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeSubnetworkData s",
            "original": "google_compute_subnetwork"
        },
        {
            "con": {
                "smart": "computeVpnGatewayData",
                "name": "ComputeVpnGatewayData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeVpnGatewayData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeVpnGatewayData s",
            "original": "google_compute_vpn_gateway"
        },
        {
            "con": {
                "smart": "computeZonesData",
                "name": "ComputeZonesData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": true,
                    "original": "status"
                }
            ],
            "name": "ComputeZonesData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"names\" <$> TF.attribute",
                    "name": "_computedNames",
                    "method": "computedNames",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNames",
                    "validate": false,
                    "optional": false,
                    "original": "names"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ComputeZonesData s",
            "original": "google_compute_zones"
        },
        {
            "con": {
                "smart": "containerClusterData",
                "name": "ContainerClusterData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "name": "ContainerClusterData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"additional_zones\" <$> TF.attribute",
                    "name": "_computedAdditionalZones",
                    "method": "computedAdditionalZones",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedAdditionalZones",
                    "validate": false,
                    "optional": false,
                    "original": "additional_zones"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"addons_config\" <$> TF.attribute",
                    "name": "_computedAddonsConfig",
                    "method": "computedAddonsConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AddonsConfig s)]",
                    "class": "HasComputedAddonsConfig",
                    "validate": true,
                    "optional": false,
                    "original": "addons_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_ipv4_cidr\" <$> TF.attribute",
                    "name": "_computedClusterIpv4Cidr",
                    "method": "computedClusterIpv4Cidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClusterIpv4Cidr",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_ipv4_cidr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_kubernetes_alpha\" <$> TF.attribute",
                    "name": "_computedEnableKubernetesAlpha",
                    "method": "computedEnableKubernetesAlpha",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableKubernetesAlpha",
                    "validate": false,
                    "optional": false,
                    "original": "enable_kubernetes_alpha"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_legacy_abac\" <$> TF.attribute",
                    "name": "_computedEnableLegacyAbac",
                    "method": "computedEnableLegacyAbac",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableLegacyAbac",
                    "validate": false,
                    "optional": false,
                    "original": "enable_legacy_abac"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"endpoint\" <$> TF.attribute",
                    "name": "_computedEndpoint",
                    "method": "computedEndpoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEndpoint",
                    "validate": false,
                    "optional": false,
                    "original": "endpoint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial_node_count\" <$> TF.attribute",
                    "name": "_computedInitialNodeCount",
                    "method": "computedInitialNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedInitialNodeCount",
                    "validate": false,
                    "optional": false,
                    "original": "initial_node_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_group_urls\" <$> TF.attribute",
                    "name": "_computedInstanceGroupUrls",
                    "method": "computedInstanceGroupUrls",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstanceGroupUrls",
                    "validate": false,
                    "optional": false,
                    "original": "instance_group_urls"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_allocation_policy\" <$> TF.attribute",
                    "name": "_computedIpAllocationPolicy",
                    "method": "computedIpAllocationPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (IpAllocationPolicy s)]",
                    "class": "HasComputedIpAllocationPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "ip_allocation_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging_service\" <$> TF.attribute",
                    "name": "_computedLoggingService",
                    "method": "computedLoggingService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLoggingService",
                    "validate": false,
                    "optional": false,
                    "original": "logging_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"maintenance_policy\" <$> TF.attribute",
                    "name": "_computedMaintenancePolicy",
                    "method": "computedMaintenancePolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (MaintenancePolicy s)]",
                    "class": "HasComputedMaintenancePolicy",
                    "validate": true,
                    "optional": false,
                    "original": "maintenance_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_auth\" <$> TF.attribute",
                    "name": "_computedMasterAuth",
                    "method": "computedMasterAuth",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (MasterAuth s)]",
                    "class": "HasComputedMasterAuth",
                    "validate": true,
                    "optional": false,
                    "original": "master_auth"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_authorized_networks_config\" <$> TF.attribute",
                    "name": "_computedMasterAuthorizedNetworksConfig",
                    "method": "computedMasterAuthorizedNetworksConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (MasterAuthorizedNetworksConfig s)]",
                    "class": "HasComputedMasterAuthorizedNetworksConfig",
                    "validate": true,
                    "optional": false,
                    "original": "master_authorized_networks_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_ipv4_cidr_block\" <$> TF.attribute",
                    "name": "_computedMasterIpv4CidrBlock",
                    "method": "computedMasterIpv4CidrBlock",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMasterIpv4CidrBlock",
                    "validate": false,
                    "optional": false,
                    "original": "master_ipv4_cidr_block"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_version\" <$> TF.attribute",
                    "name": "_computedMasterVersion",
                    "method": "computedMasterVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMasterVersion",
                    "validate": false,
                    "optional": false,
                    "original": "master_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_master_version\" <$> TF.attribute",
                    "name": "_computedMinMasterVersion",
                    "method": "computedMinMasterVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinMasterVersion",
                    "validate": false,
                    "optional": false,
                    "original": "min_master_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"monitoring_service\" <$> TF.attribute",
                    "name": "_computedMonitoringService",
                    "method": "computedMonitoringService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMonitoringService",
                    "validate": false,
                    "optional": false,
                    "original": "monitoring_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_policy\" <$> TF.attribute",
                    "name": "_computedNetworkPolicy",
                    "method": "computedNetworkPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NetworkPolicy s)]",
                    "class": "HasComputedNetworkPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "network_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_config\" <$> TF.attribute",
                    "name": "_computedNodeConfig",
                    "method": "computedNodeConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NodeConfig s)]",
                    "class": "HasComputedNodeConfig",
                    "validate": true,
                    "optional": false,
                    "original": "node_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_pool\" <$> TF.attribute",
                    "name": "_computedNodePool",
                    "method": "computedNodePool",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NodePool s)]",
                    "class": "HasComputedNodePool",
                    "validate": true,
                    "optional": false,
                    "original": "node_pool"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_version\" <$> TF.attribute",
                    "name": "_computedNodeVersion",
                    "method": "computedNodeVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeVersion",
                    "validate": false,
                    "optional": false,
                    "original": "node_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pod_security_policy_config\" <$> TF.attribute",
                    "name": "_computedPodSecurityPolicyConfig",
                    "method": "computedPodSecurityPolicyConfig",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PodSecurityPolicyConfig s)]",
                    "class": "HasComputedPodSecurityPolicyConfig",
                    "validate": true,
                    "optional": false,
                    "original": "pod_security_policy_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_cluster\" <$> TF.attribute",
                    "name": "_computedPrivateCluster",
                    "method": "computedPrivateCluster",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedPrivateCluster",
                    "validate": false,
                    "optional": false,
                    "original": "private_cluster"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"remove_default_node_pool\" <$> TF.attribute",
                    "name": "_computedRemoveDefaultNodePool",
                    "method": "computedRemoveDefaultNodePool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedRemoveDefaultNodePool",
                    "validate": false,
                    "optional": false,
                    "original": "remove_default_node_pool"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resource_labels\" <$> TF.attribute",
                    "name": "_computedResourceLabels",
                    "method": "computedResourceLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedResourceLabels",
                    "validate": false,
                    "optional": false,
                    "original": "resource_labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_computedSubnetwork",
                    "method": "computedSubnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ContainerClusterData s",
            "original": "google_container_cluster"
        },
        {
            "con": {
                "smart": "containerEngineVersionsData",
                "name": "ContainerEngineVersionsData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "name": "ContainerEngineVersionsData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_cluster_version\" <$> TF.attribute",
                    "name": "_computedDefaultClusterVersion",
                    "method": "computedDefaultClusterVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultClusterVersion",
                    "validate": false,
                    "optional": false,
                    "original": "default_cluster_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"latest_master_version\" <$> TF.attribute",
                    "name": "_computedLatestMasterVersion",
                    "method": "computedLatestMasterVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLatestMasterVersion",
                    "validate": false,
                    "optional": false,
                    "original": "latest_master_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"latest_node_version\" <$> TF.attribute",
                    "name": "_computedLatestNodeVersion",
                    "method": "computedLatestNodeVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLatestNodeVersion",
                    "validate": false,
                    "optional": false,
                    "original": "latest_node_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"valid_master_versions\" <$> TF.attribute",
                    "name": "_computedValidMasterVersions",
                    "method": "computedValidMasterVersions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedValidMasterVersions",
                    "validate": false,
                    "optional": false,
                    "original": "valid_master_versions"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"valid_node_versions\" <$> TF.attribute",
                    "name": "_computedValidNodeVersions",
                    "method": "computedValidNodeVersions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedValidNodeVersions",
                    "validate": false,
                    "optional": false,
                    "original": "valid_node_versions"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ContainerEngineVersionsData s",
            "original": "google_container_engine_versions"
        },
        {
            "con": {
                "smart": "containerRegistryImageData",
                "name": "ContainerRegistryImageData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"digest\" <$> TF.attribute",
                    "name": "_digest",
                    "method": "digest",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDigest",
                    "validate": false,
                    "optional": true,
                    "original": "digest"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tag\" <$> TF.attribute",
                    "name": "_tag",
                    "method": "tag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTag",
                    "validate": false,
                    "optional": true,
                    "original": "tag"
                }
            ],
            "name": "ContainerRegistryImageData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"image_url\" <$> TF.attribute",
                    "name": "_computedImageUrl",
                    "method": "computedImageUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImageUrl",
                    "validate": false,
                    "optional": false,
                    "original": "image_url"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ContainerRegistryImageData s",
            "original": "google_container_registry_image"
        },
        {
            "con": {
                "smart": "containerRegistryRepositoryData",
                "name": "ContainerRegistryRepositoryData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "name": "ContainerRegistryRepositoryData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"repository_url\" <$> TF.attribute",
                    "name": "_computedRepositoryUrl",
                    "method": "computedRepositoryUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRepositoryUrl",
                    "validate": false,
                    "optional": false,
                    "original": "repository_url"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ContainerRegistryRepositoryData s",
            "original": "google_container_registry_repository"
        },
        {
            "con": {
                "smart": "dnsManagedZoneData",
                "name": "DnsManagedZoneData'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "name": "DnsManagedZoneData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": false,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns_name\" <$> TF.attribute",
                    "name": "_computedDnsName",
                    "method": "computedDnsName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDnsName",
                    "validate": false,
                    "optional": false,
                    "original": "dns_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name_servers\" <$> TF.attribute",
                    "name": "_computedNameServers",
                    "method": "computedNameServers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNameServers",
                    "validate": false,
                    "optional": false,
                    "original": "name_servers"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "DnsManagedZoneData s",
            "original": "google_dns_managed_zone"
        },
        {
            "con": {
                "smart": "folderData",
                "name": "FolderData'"
            },
            "arguments": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lookup_organization\" <$> TF.attribute",
                    "name": "_lookupOrganization",
                    "method": "lookupOrganization",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasLookupOrganization",
                    "validate": false,
                    "optional": true,
                    "original": "lookup_organization"
                }
            ],
            "name": "FolderData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"create_time\" <$> TF.attribute",
                    "name": "_computedCreateTime",
                    "method": "computedCreateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreateTime",
                    "validate": false,
                    "optional": false,
                    "original": "create_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_computedDisplayName",
                    "method": "computedDisplayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lifecycle_state\" <$> TF.attribute",
                    "name": "_computedLifecycleState",
                    "method": "computedLifecycleState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLifecycleState",
                    "validate": false,
                    "optional": false,
                    "original": "lifecycle_state"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"organization\" <$> TF.attribute",
                    "name": "_computedOrganization",
                    "method": "computedOrganization",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOrganization",
                    "validate": false,
                    "optional": false,
                    "original": "organization"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_computedParent",
                    "method": "computedParent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                }
            ],
            "parameters": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                }
            ],
            "conflicts": [],
            "type": "FolderData s",
            "original": "google_folder"
        },
        {
            "con": {
                "smart": "iamPolicyData",
                "name": "IamPolicyData'"
            },
            "arguments": [
                {
                    "default": "_binding",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"binding\" <$> TF.attribute",
                    "name": "_binding",
                    "method": "binding",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Binding s)]",
                    "class": "HasBinding",
                    "validate": true,
                    "optional": false,
                    "original": "binding"
                }
            ],
            "name": "IamPolicyData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_computedPolicyData",
                    "method": "computedPolicyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "parameters": [
                {
                    "default": "_binding",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"binding\" <$> TF.attribute",
                    "name": "_binding",
                    "method": "binding",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Binding s)]",
                    "class": "HasBinding",
                    "validate": true,
                    "optional": false,
                    "original": "binding"
                }
            ],
            "conflicts": [],
            "type": "IamPolicyData s",
            "original": "google_iam_policy"
        },
        {
            "con": {
                "smart": "kmsSecretData",
                "name": "KmsSecretData'"
            },
            "arguments": [
                {
                    "default": "_ciphertext",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ciphertext\" <$> TF.attribute",
                    "name": "_ciphertext",
                    "method": "ciphertext",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCiphertext",
                    "validate": false,
                    "optional": false,
                    "original": "ciphertext"
                },
                {
                    "default": "_cryptoKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"crypto_key\" <$> TF.attribute",
                    "name": "_cryptoKey",
                    "method": "cryptoKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCryptoKey",
                    "validate": false,
                    "optional": false,
                    "original": "crypto_key"
                }
            ],
            "name": "KmsSecretData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"plaintext\" <$> TF.attribute",
                    "name": "_computedPlaintext",
                    "method": "computedPlaintext",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPlaintext",
                    "validate": false,
                    "optional": false,
                    "original": "plaintext"
                }
            ],
            "parameters": [
                {
                    "default": "_ciphertext",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ciphertext\" <$> TF.attribute",
                    "name": "_ciphertext",
                    "method": "ciphertext",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCiphertext",
                    "validate": false,
                    "optional": false,
                    "original": "ciphertext"
                },
                {
                    "default": "_cryptoKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"crypto_key\" <$> TF.attribute",
                    "name": "_cryptoKey",
                    "method": "cryptoKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCryptoKey",
                    "validate": false,
                    "optional": false,
                    "original": "crypto_key"
                }
            ],
            "conflicts": [],
            "type": "KmsSecretData s",
            "original": "google_kms_secret"
        },
        {
            "con": {
                "smart": "netblockIpRangesData",
                "name": "NetblockIpRangesData'"
            },
            "arguments": [],
            "name": "NetblockIpRangesData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks\" <$> TF.attribute",
                    "name": "_computedCidrBlocks",
                    "method": "computedCidrBlocks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCidrBlocks",
                    "validate": false,
                    "optional": false,
                    "original": "cidr_blocks"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks_ipv4\" <$> TF.attribute",
                    "name": "_computedCidrBlocksIpv4",
                    "method": "computedCidrBlocksIpv4",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCidrBlocksIpv4",
                    "validate": false,
                    "optional": false,
                    "original": "cidr_blocks_ipv4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks_ipv6\" <$> TF.attribute",
                    "name": "_computedCidrBlocksIpv6",
                    "method": "computedCidrBlocksIpv6",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCidrBlocksIpv6",
                    "validate": false,
                    "optional": false,
                    "original": "cidr_blocks_ipv6"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "NetblockIpRangesData s",
            "original": "google_netblock_ip_ranges"
        },
        {
            "con": {
                "smart": "organizationData",
                "name": "OrganizationData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"organization\" <$> TF.attribute",
                    "name": "_organization",
                    "method": "organization",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrganization",
                    "validate": false,
                    "optional": true,
                    "original": "organization"
                }
            ],
            "name": "OrganizationData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"create_time\" <$> TF.attribute",
                    "name": "_computedCreateTime",
                    "method": "computedCreateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreateTime",
                    "validate": false,
                    "optional": false,
                    "original": "create_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"directory_customer_id\" <$> TF.attribute",
                    "name": "_computedDirectoryCustomerId",
                    "method": "computedDirectoryCustomerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDirectoryCustomerId",
                    "validate": false,
                    "optional": false,
                    "original": "directory_customer_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "_computedDomain",
                    "method": "computedDomain",
                    "conflicts": [
                        "_organization"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomain",
                    "validate": false,
                    "optional": true,
                    "original": "domain"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lifecycle_state\" <$> TF.attribute",
                    "name": "_computedLifecycleState",
                    "method": "computedLifecycleState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLifecycleState",
                    "validate": false,
                    "optional": false,
                    "original": "lifecycle_state"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "OrganizationData s",
            "original": "google_organization"
        },
        {
            "con": {
                "smart": "projectData",
                "name": "ProjectData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "_projectId",
                    "method": "projectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "validate": false,
                    "optional": true,
                    "original": "project_id"
                }
            ],
            "name": "ProjectData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"app_engine\" <$> TF.attribute",
                    "name": "_computedAppEngine",
                    "method": "computedAppEngine",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AppEngine s)]",
                    "class": "HasComputedAppEngine",
                    "validate": true,
                    "optional": false,
                    "original": "app_engine"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_create_network\" <$> TF.attribute",
                    "name": "_computedAutoCreateNetwork",
                    "method": "computedAutoCreateNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAutoCreateNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "auto_create_network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"billing_account\" <$> TF.attribute",
                    "name": "_computedBillingAccount",
                    "method": "computedBillingAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedBillingAccount",
                    "validate": false,
                    "optional": false,
                    "original": "billing_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"folder_id\" <$> TF.attribute",
                    "name": "_computedFolderId",
                    "method": "computedFolderId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFolderId",
                    "validate": false,
                    "optional": false,
                    "original": "folder_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_computedLabels",
                    "method": "computedLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedLabels",
                    "validate": false,
                    "optional": false,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"number\" <$> TF.attribute",
                    "name": "_computedNumber",
                    "method": "computedNumber",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNumber",
                    "validate": false,
                    "optional": false,
                    "original": "number"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_computedOrgId",
                    "method": "computedOrgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_computedPolicyData",
                    "method": "computedPolicyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_etag\" <$> TF.attribute",
                    "name": "_computedPolicyEtag",
                    "method": "computedPolicyEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolicyEtag",
                    "validate": false,
                    "optional": false,
                    "original": "policy_etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"skip_delete\" <$> TF.attribute",
                    "name": "_computedSkipDelete",
                    "method": "computedSkipDelete",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedSkipDelete",
                    "validate": false,
                    "optional": false,
                    "original": "skip_delete"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "ProjectData s",
            "original": "google_project"
        },
        {
            "con": {
                "smart": "serviceAccountData",
                "name": "ServiceAccountData'"
            },
            "arguments": [
                {
                    "default": "_accountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"account_id\" <$> TF.attribute",
                    "name": "_accountId",
                    "method": "accountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "account_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "name": "ServiceAccountData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_computedDisplayName",
                    "method": "computedDisplayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_computedEmail",
                    "method": "computedEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unique_id\" <$> TF.attribute",
                    "name": "_computedUniqueId",
                    "method": "computedUniqueId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUniqueId",
                    "validate": false,
                    "optional": false,
                    "original": "unique_id"
                }
            ],
            "parameters": [
                {
                    "default": "_accountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"account_id\" <$> TF.attribute",
                    "name": "_accountId",
                    "method": "accountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "account_id"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccountData s",
            "original": "google_service_account"
        },
        {
            "con": {
                "smart": "serviceAccountKeyData",
                "name": "ServiceAccountKeyData'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.value \"TYPE_X509_PEM_FILE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public_key_type\" <$> TF.attribute",
                    "name": "_publicKeyType",
                    "method": "publicKeyType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPublicKeyType",
                    "validate": false,
                    "optional": true,
                    "original": "public_key_type"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "name": "ServiceAccountKeyData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"key_algorithm\" <$> TF.attribute",
                    "name": "_computedKeyAlgorithm",
                    "method": "computedKeyAlgorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedKeyAlgorithm",
                    "validate": false,
                    "optional": false,
                    "original": "key_algorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "_computedPublicKey",
                    "method": "computedPublicKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPublicKey",
                    "validate": false,
                    "optional": false,
                    "original": "public_key"
                }
            ],
            "parameters": [
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccountKeyData s",
            "original": "google_service_account_key"
        },
        {
            "con": {
                "smart": "storageObjectSignedUrlData",
                "name": "StorageObjectSignedUrlData'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_md5\" <$> TF.attribute",
                    "name": "_contentMd5",
                    "method": "contentMd5",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentMd5",
                    "validate": false,
                    "optional": true,
                    "original": "content_md5"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "_contentType",
                    "method": "contentType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentType",
                    "validate": false,
                    "optional": true,
                    "original": "content_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"credentials\" <$> TF.attribute",
                    "name": "_credentials",
                    "method": "credentials",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCredentials",
                    "validate": false,
                    "optional": true,
                    "original": "credentials"
                },
                {
                    "default": "TF.value \"1h\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"duration\" <$> TF.attribute",
                    "name": "_duration",
                    "method": "duration",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDuration",
                    "validate": false,
                    "optional": true,
                    "original": "duration"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"extension_headers\" <$> TF.attribute",
                    "name": "_extensionHeaders",
                    "method": "extensionHeaders",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasExtensionHeaders",
                    "validate": false,
                    "optional": true,
                    "original": "extension_headers"
                },
                {
                    "default": "TF.value \"GET\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_method\" <$> TF.attribute",
                    "name": "_httpMethod",
                    "method": "httpMethod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHttpMethod",
                    "validate": false,
                    "optional": true,
                    "original": "http_method"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                }
            ],
            "name": "StorageObjectSignedUrlData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"signed_url\" <$> TF.attribute",
                    "name": "_computedSignedUrl",
                    "method": "computedSignedUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSignedUrl",
                    "validate": false,
                    "optional": false,
                    "original": "signed_url"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                }
            ],
            "conflicts": [],
            "type": "StorageObjectSignedUrlData s",
            "original": "google_storage_object_signed_url"
        },
        {
            "con": {
                "smart": "storageProjectServiceAccountData",
                "name": "StorageProjectServiceAccountData'"
            },
            "arguments": [],
            "name": "StorageProjectServiceAccountData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "StorageProjectServiceAccountData s",
            "original": "google_storage_project_service_account"
        }
    ],
    "resources": [
        {
            "con": {
                "smart": "bigqueryDatasetResource",
                "name": "BigqueryDatasetResource'"
            },
            "arguments": [
                {
                    "default": "_datasetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dataset_id\" <$> TF.attribute",
                    "name": "_datasetId",
                    "method": "datasetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatasetId",
                    "validate": false,
                    "optional": false,
                    "original": "dataset_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_table_expiration_ms\" <$> TF.attribute",
                    "name": "_defaultTableExpirationMs",
                    "method": "defaultTableExpirationMs",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDefaultTableExpirationMs",
                    "validate": false,
                    "optional": true,
                    "original": "default_table_expiration_ms"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"friendly_name\" <$> TF.attribute",
                    "name": "_friendlyName",
                    "method": "friendlyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFriendlyName",
                    "validate": false,
                    "optional": true,
                    "original": "friendly_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "TF.value \"US\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"location\" <$> TF.attribute",
                    "name": "_location",
                    "method": "location",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLocation",
                    "validate": false,
                    "optional": true,
                    "original": "location"
                }
            ],
            "name": "BigqueryDatasetResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_time\" <$> TF.attribute",
                    "name": "_computedCreationTime",
                    "method": "computedCreationTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedCreationTime",
                    "validate": false,
                    "optional": false,
                    "original": "creation_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_modified_time\" <$> TF.attribute",
                    "name": "_computedLastModifiedTime",
                    "method": "computedLastModifiedTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedLastModifiedTime",
                    "validate": false,
                    "optional": false,
                    "original": "last_modified_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_datasetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dataset_id\" <$> TF.attribute",
                    "name": "_datasetId",
                    "method": "datasetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatasetId",
                    "validate": false,
                    "optional": false,
                    "original": "dataset_id"
                }
            ],
            "conflicts": [],
            "type": "BigqueryDatasetResource s",
            "original": "google_bigquery_dataset"
        },
        {
            "con": {
                "smart": "bigqueryTableResource",
                "name": "BigqueryTableResource'"
            },
            "arguments": [
                {
                    "default": "_datasetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dataset_id\" <$> TF.attribute",
                    "name": "_datasetId",
                    "method": "datasetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatasetId",
                    "validate": false,
                    "optional": false,
                    "original": "dataset_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"friendly_name\" <$> TF.attribute",
                    "name": "_friendlyName",
                    "method": "friendlyName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFriendlyName",
                    "validate": false,
                    "optional": true,
                    "original": "friendly_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_tableId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"table_id\" <$> TF.attribute",
                    "name": "_tableId",
                    "method": "tableId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTableId",
                    "validate": false,
                    "optional": false,
                    "original": "table_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"time_partitioning\" <$> TF.attribute",
                    "name": "_timePartitioning",
                    "method": "timePartitioning",
                    "conflicts": [],
                    "type": "TF.Attr s (TimePartitioning s)",
                    "class": "HasTimePartitioning",
                    "validate": true,
                    "optional": true,
                    "original": "time_partitioning"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"view\" <$> TF.attribute",
                    "name": "_view",
                    "method": "view",
                    "conflicts": [],
                    "type": "TF.Attr s (View s)",
                    "class": "HasView",
                    "validate": true,
                    "optional": true,
                    "original": "view"
                }
            ],
            "name": "BigqueryTableResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_time\" <$> TF.attribute",
                    "name": "_computedCreationTime",
                    "method": "computedCreationTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedCreationTime",
                    "validate": false,
                    "optional": false,
                    "original": "creation_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expiration_time\" <$> TF.attribute",
                    "name": "_computedExpirationTime",
                    "method": "computedExpirationTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedExpirationTime",
                    "validate": false,
                    "optional": true,
                    "original": "expiration_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_modified_time\" <$> TF.attribute",
                    "name": "_computedLastModifiedTime",
                    "method": "computedLastModifiedTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedLastModifiedTime",
                    "validate": false,
                    "optional": false,
                    "original": "last_modified_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"location\" <$> TF.attribute",
                    "name": "_computedLocation",
                    "method": "computedLocation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLocation",
                    "validate": false,
                    "optional": false,
                    "original": "location"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_bytes\" <$> TF.attribute",
                    "name": "_computedNumBytes",
                    "method": "computedNumBytes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNumBytes",
                    "validate": false,
                    "optional": false,
                    "original": "num_bytes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_long_term_bytes\" <$> TF.attribute",
                    "name": "_computedNumLongTermBytes",
                    "method": "computedNumLongTermBytes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNumLongTermBytes",
                    "validate": false,
                    "optional": false,
                    "original": "num_long_term_bytes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_rows\" <$> TF.attribute",
                    "name": "_computedNumRows",
                    "method": "computedNumRows",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNumRows",
                    "validate": false,
                    "optional": false,
                    "original": "num_rows"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"schema\" <$> TF.attribute",
                    "name": "_computedSchema",
                    "method": "computedSchema",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSchema",
                    "validate": false,
                    "optional": true,
                    "original": "schema"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_computedType",
                    "method": "computedType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "parameters": [
                {
                    "default": "_datasetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dataset_id\" <$> TF.attribute",
                    "name": "_datasetId",
                    "method": "datasetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatasetId",
                    "validate": false,
                    "optional": false,
                    "original": "dataset_id"
                },
                {
                    "default": "_tableId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"table_id\" <$> TF.attribute",
                    "name": "_tableId",
                    "method": "tableId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTableId",
                    "validate": false,
                    "optional": false,
                    "original": "table_id"
                }
            ],
            "conflicts": [],
            "type": "BigqueryTableResource s",
            "original": "google_bigquery_table"
        },
        {
            "con": {
                "smart": "bigtableInstanceResource",
                "name": "BigtableInstanceResource'"
            },
            "arguments": [
                {
                    "default": "_clusterId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cluster_id\" <$> TF.attribute",
                    "name": "_clusterId",
                    "method": "clusterId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClusterId",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_id"
                },
                {
                    "default": "TF.value \"PRODUCTION\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_type\" <$> TF.attribute",
                    "name": "_instanceType",
                    "method": "instanceType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceType",
                    "validate": false,
                    "optional": true,
                    "original": "instance_type"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"num_nodes\" <$> TF.attribute",
                    "name": "_numNodes",
                    "method": "numNodes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasNumNodes",
                    "validate": false,
                    "optional": true,
                    "original": "num_nodes"
                },
                {
                    "default": "TF.value \"SSD\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"storage_type\" <$> TF.attribute",
                    "name": "_storageType",
                    "method": "storageType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStorageType",
                    "validate": false,
                    "optional": true,
                    "original": "storage_type"
                }
            ],
            "name": "BigtableInstanceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_computedDisplayName",
                    "method": "computedDisplayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDisplayName",
                    "validate": false,
                    "optional": true,
                    "original": "display_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_clusterId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cluster_id\" <$> TF.attribute",
                    "name": "_clusterId",
                    "method": "clusterId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasClusterId",
                    "validate": false,
                    "optional": false,
                    "original": "cluster_id"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "BigtableInstanceResource s",
            "original": "google_bigtable_instance"
        },
        {
            "con": {
                "smart": "bigtableTableResource",
                "name": "BigtableTableResource'"
            },
            "arguments": [
                {
                    "default": "_instanceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_name\" <$> TF.attribute",
                    "name": "_instanceName",
                    "method": "instanceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceName",
                    "validate": false,
                    "optional": false,
                    "original": "instance_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"split_keys\" <$> TF.attribute",
                    "name": "_splitKeys",
                    "method": "splitKeys",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSplitKeys",
                    "validate": false,
                    "optional": true,
                    "original": "split_keys"
                }
            ],
            "name": "BigtableTableResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_instanceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_name\" <$> TF.attribute",
                    "name": "_instanceName",
                    "method": "instanceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceName",
                    "validate": false,
                    "optional": false,
                    "original": "instance_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "BigtableTableResource s",
            "original": "google_bigtable_table"
        },
        {
            "con": {
                "smart": "cloudbuildTriggerResource",
                "name": "CloudbuildTriggerResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Contents of the build template."
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"build\" <$> TF.attribute",
                    "name": "_build",
                    "method": "build",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_filename",
                            "method": "filename"
                        }
                    ],
                    "type": "TF.Attr s (Build s)",
                    "class": "HasBuild",
                    "validate": true,
                    "optional": true,
                    "original": "build"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"filename\" <$> TF.attribute",
                    "name": "_filename",
                    "method": "filename",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_build",
                            "method": "build"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilename",
                    "validate": false,
                    "optional": true,
                    "original": "filename"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"substitutions\" <$> TF.attribute",
                    "name": "_substitutions",
                    "method": "substitutions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasSubstitutions",
                    "validate": false,
                    "optional": true,
                    "original": "substitutions"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"trigger_template\" <$> TF.attribute",
                    "name": "_triggerTemplate",
                    "method": "triggerTemplate",
                    "conflicts": [],
                    "type": "TF.Attr s (TriggerTemplate s)",
                    "class": "HasTriggerTemplate",
                    "validate": true,
                    "optional": true,
                    "original": "trigger_template"
                }
            ],
            "name": "CloudbuildTriggerResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Contents of the build template."
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"build\" <$> TF.attribute",
                    "name": "_build",
                    "method": "build",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_filename",
                            "method": "filename"
                        }
                    ],
                    "type": "TF.Attr s (Build s)",
                    "class": "HasBuild",
                    "validate": true,
                    "optional": true,
                    "original": "build"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"filename\" <$> TF.attribute",
                    "name": "_filename",
                    "method": "filename",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_build",
                            "method": "build"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilename",
                    "validate": false,
                    "optional": true,
                    "original": "filename"
                }
            ],
            "type": "CloudbuildTriggerResource s",
            "original": "google_cloudbuild_trigger"
        },
        {
            "con": {
                "smart": "cloudfunctionsFunctionResource",
                "name": "CloudfunctionsFunctionResource'"
            },
            "arguments": [
                {
                    "default": "TF.value 256",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"available_memory_mb\" <$> TF.attribute",
                    "name": "_availableMemoryMb",
                    "method": "availableMemoryMb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAvailableMemoryMb",
                    "validate": false,
                    "optional": true,
                    "original": "available_memory_mb"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"entry_point\" <$> TF.attribute",
                    "name": "_entryPoint",
                    "method": "entryPoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEntryPoint",
                    "validate": false,
                    "optional": true,
                    "original": "entry_point"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_on_failure\" <$> TF.attribute",
                    "name": "_retryOnFailure",
                    "method": "retryOnFailure",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerHttp",
                            "method": "triggerHttp"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasRetryOnFailure",
                    "validate": false,
                    "optional": true,
                    "original": "retry_on_failure"
                },
                {
                    "default": "_sourceArchiveBucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_archive_bucket\" <$> TF.attribute",
                    "name": "_sourceArchiveBucket",
                    "method": "sourceArchiveBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceArchiveBucket",
                    "validate": false,
                    "optional": false,
                    "original": "source_archive_bucket"
                },
                {
                    "default": "_sourceArchiveObject",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_archive_object\" <$> TF.attribute",
                    "name": "_sourceArchiveObject",
                    "method": "sourceArchiveObject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceArchiveObject",
                    "validate": false,
                    "optional": false,
                    "original": "source_archive_object"
                },
                {
                    "default": "TF.value 60",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "_timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "timeout"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"trigger_bucket\" <$> TF.attribute",
                    "name": "_triggerBucket",
                    "method": "triggerBucket",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerTopic",
                            "method": "triggerTopic"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_triggerHttp",
                            "method": "triggerHttp"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTriggerBucket",
                    "validate": false,
                    "optional": true,
                    "original": "trigger_bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"trigger_http\" <$> TF.attribute",
                    "name": "_triggerHttp",
                    "method": "triggerHttp",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerBucket",
                            "method": "triggerBucket"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_triggerTopic",
                            "method": "triggerTopic"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_retryOnFailure",
                            "method": "retryOnFailure"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasTriggerHttp",
                    "validate": false,
                    "optional": true,
                    "original": "trigger_http"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"trigger_topic\" <$> TF.attribute",
                    "name": "_triggerTopic",
                    "method": "triggerTopic",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerBucket",
                            "method": "triggerBucket"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_triggerHttp",
                            "method": "triggerHttp"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTriggerTopic",
                    "validate": false,
                    "optional": true,
                    "original": "trigger_topic"
                }
            ],
            "name": "CloudfunctionsFunctionResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"https_trigger_url\" <$> TF.attribute",
                    "name": "_computedHttpsTriggerUrl",
                    "method": "computedHttpsTriggerUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttpsTriggerUrl",
                    "validate": false,
                    "optional": true,
                    "original": "https_trigger_url"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_sourceArchiveBucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_archive_bucket\" <$> TF.attribute",
                    "name": "_sourceArchiveBucket",
                    "method": "sourceArchiveBucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceArchiveBucket",
                    "validate": false,
                    "optional": false,
                    "original": "source_archive_bucket"
                },
                {
                    "default": "_sourceArchiveObject",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_archive_object\" <$> TF.attribute",
                    "name": "_sourceArchiveObject",
                    "method": "sourceArchiveObject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceArchiveObject",
                    "validate": false,
                    "optional": false,
                    "original": "source_archive_object"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"retry_on_failure\" <$> TF.attribute",
                    "name": "_retryOnFailure",
                    "method": "retryOnFailure",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerHttp",
                            "method": "triggerHttp"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasRetryOnFailure",
                    "validate": false,
                    "optional": true,
                    "original": "retry_on_failure"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"trigger_bucket\" <$> TF.attribute",
                    "name": "_triggerBucket",
                    "method": "triggerBucket",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerTopic",
                            "method": "triggerTopic"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_triggerHttp",
                            "method": "triggerHttp"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTriggerBucket",
                    "validate": false,
                    "optional": true,
                    "original": "trigger_bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"trigger_http\" <$> TF.attribute",
                    "name": "_triggerHttp",
                    "method": "triggerHttp",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerBucket",
                            "method": "triggerBucket"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_triggerTopic",
                            "method": "triggerTopic"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_retryOnFailure",
                            "method": "retryOnFailure"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasTriggerHttp",
                    "validate": false,
                    "optional": true,
                    "original": "trigger_http"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"trigger_topic\" <$> TF.attribute",
                    "name": "_triggerTopic",
                    "method": "triggerTopic",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_triggerBucket",
                            "method": "triggerBucket"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_triggerHttp",
                            "method": "triggerHttp"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTriggerTopic",
                    "validate": false,
                    "optional": true,
                    "original": "trigger_topic"
                }
            ],
            "type": "CloudfunctionsFunctionResource s",
            "original": "google_cloudfunctions_function"
        },
        {
            "con": {
                "smart": "cloudiotRegistryResource",
                "name": "CloudiotRegistryResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"credentials\" <$> TF.attribute",
                    "name": "_credentials",
                    "method": "credentials",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Credentials s)]",
                    "class": "HasCredentials",
                    "validate": true,
                    "optional": true,
                    "original": "credentials"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"event_notification_config\" <$> TF.attribute",
                    "name": "_eventNotificationConfig",
                    "method": "eventNotificationConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (EventNotificationConfig s))",
                    "class": "HasEventNotificationConfig",
                    "validate": true,
                    "optional": true,
                    "original": "event_notification_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_config\" <$> TF.attribute",
                    "name": "_httpConfig",
                    "method": "httpConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (HttpConfig s))",
                    "class": "HasHttpConfig",
                    "validate": true,
                    "optional": true,
                    "original": "http_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mqtt_config\" <$> TF.attribute",
                    "name": "_mqttConfig",
                    "method": "mqttConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (MqttConfig s))",
                    "class": "HasMqttConfig",
                    "validate": true,
                    "optional": true,
                    "original": "mqtt_config"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"state_notification_config\" <$> TF.attribute",
                    "name": "_stateNotificationConfig",
                    "method": "stateNotificationConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (StateNotificationConfig s))",
                    "class": "HasStateNotificationConfig",
                    "validate": true,
                    "optional": true,
                    "original": "state_notification_config"
                }
            ],
            "name": "CloudiotRegistryResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "CloudiotRegistryResource s",
            "original": "google_cloudiot_registry"
        },
        {
            "con": {
                "smart": "computeAddressResource",
                "name": "ComputeAddressResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"EXTERNAL\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address_type\" <$> TF.attribute",
                    "name": "_addressType",
                    "method": "addressType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddressType",
                    "validate": false,
                    "optional": true,
                    "original": "address_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeAddressResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_computedAddress",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "validate": false,
                    "optional": true,
                    "original": "address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_tier\" <$> TF.attribute",
                    "name": "_computedNetworkTier",
                    "method": "computedNetworkTier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetworkTier",
                    "validate": false,
                    "optional": true,
                    "original": "network_tier"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_computedSubnetwork",
                    "method": "computedSubnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetwork",
                    "validate": false,
                    "optional": true,
                    "original": "subnetwork"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"users\" <$> TF.attribute",
                    "name": "_computedUsers",
                    "method": "computedUsers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedUsers",
                    "validate": false,
                    "optional": false,
                    "original": "users"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeAddressResource s",
            "original": "google_compute_address"
        },
        {
            "con": {
                "smart": "computeAutoscalerResource",
                "name": "ComputeAutoscalerResource'"
            },
            "arguments": [
                {
                    "default": "_autoscalingPolicy",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscaling_policy\" <$> TF.attribute",
                    "name": "_autoscalingPolicy",
                    "method": "autoscalingPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (AutoscalingPolicy s)",
                    "class": "HasAutoscalingPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "autoscaling_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "name": "ComputeAutoscalerResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_autoscalingPolicy",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscaling_policy\" <$> TF.attribute",
                    "name": "_autoscalingPolicy",
                    "method": "autoscalingPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (AutoscalingPolicy s)",
                    "class": "HasAutoscalingPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "autoscaling_policy"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "conflicts": [],
            "type": "ComputeAutoscalerResource s",
            "original": "google_compute_autoscaler"
        },
        {
            "con": {
                "smart": "computeBackendBucketResource",
                "name": "ComputeBackendBucketResource'"
            },
            "arguments": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_cdn\" <$> TF.attribute",
                    "name": "_enableCdn",
                    "method": "enableCdn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableCdn",
                    "validate": false,
                    "optional": true,
                    "original": "enable_cdn"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeBackendBucketResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeBackendBucketResource s",
            "original": "google_compute_backend_bucket"
        },
        {
            "con": {
                "smart": "computeBackendServiceResource",
                "name": "ComputeBackendServiceResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend\" <$> TF.attribute",
                    "name": "_backend",
                    "method": "backend",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Backend s)]",
                    "class": "HasBackend",
                    "validate": true,
                    "optional": true,
                    "original": "backend"
                },
                {
                    "default": "TF.value 300",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"connection_draining_timeout_sec\" <$> TF.attribute",
                    "name": "_connectionDrainingTimeoutSec",
                    "method": "connectionDrainingTimeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasConnectionDrainingTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "connection_draining_timeout_sec"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"custom_request_headers\" <$> TF.attribute",
                    "name": "_customRequestHeaders",
                    "method": "customRequestHeaders",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasCustomRequestHeaders",
                    "validate": false,
                    "optional": true,
                    "original": "custom_request_headers"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_cdn\" <$> TF.attribute",
                    "name": "_enableCdn",
                    "method": "enableCdn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableCdn",
                    "validate": false,
                    "optional": true,
                    "original": "enable_cdn"
                },
                {
                    "default": "_healthChecks",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_checks\" <$> TF.attribute",
                    "name": "_healthChecks",
                    "method": "healthChecks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthChecks",
                    "validate": false,
                    "optional": false,
                    "original": "health_checks"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"iap\" <$> TF.attribute",
                    "name": "_iap",
                    "method": "iap",
                    "conflicts": [],
                    "type": "TF.Attr s (Iap s)",
                    "class": "HasIap",
                    "validate": true,
                    "optional": true,
                    "original": "iap"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_policy\" <$> TF.attribute",
                    "name": "_securityPolicy",
                    "method": "securityPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecurityPolicy",
                    "validate": false,
                    "optional": true,
                    "original": "security_policy"
                }
            ],
            "name": "ComputeBackendServiceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cdn_policy\" <$> TF.attribute",
                    "name": "_computedCdnPolicy",
                    "method": "computedCdnPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (CdnPolicy s)",
                    "class": "HasComputedCdnPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "cdn_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_name\" <$> TF.attribute",
                    "name": "_computedPortName",
                    "method": "computedPortName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPortName",
                    "validate": false,
                    "optional": true,
                    "original": "port_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "_computedProtocol",
                    "method": "computedProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProtocol",
                    "validate": false,
                    "optional": true,
                    "original": "protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"session_affinity\" <$> TF.attribute",
                    "name": "_computedSessionAffinity",
                    "method": "computedSessionAffinity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSessionAffinity",
                    "validate": false,
                    "optional": true,
                    "original": "session_affinity"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout_sec\" <$> TF.attribute",
                    "name": "_computedTimeoutSec",
                    "method": "computedTimeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "timeout_sec"
                }
            ],
            "parameters": [
                {
                    "default": "_healthChecks",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_checks\" <$> TF.attribute",
                    "name": "_healthChecks",
                    "method": "healthChecks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthChecks",
                    "validate": false,
                    "optional": false,
                    "original": "health_checks"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeBackendServiceResource s",
            "original": "google_compute_backend_service"
        },
        {
            "con": {
                "smart": "computeDiskResource",
                "name": "ComputeDiskResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_encryption_key\" <$> TF.attribute",
                    "name": "_diskEncryptionKey",
                    "method": "diskEncryptionKey",
                    "conflicts": [],
                    "type": "TF.Attr s (DiskEncryptionKey s)",
                    "class": "HasDiskEncryptionKey",
                    "validate": true,
                    "optional": true,
                    "original": "disk_encryption_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image\" <$> TF.attribute",
                    "name": "_image",
                    "method": "image",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImage",
                    "validate": false,
                    "optional": true,
                    "original": "image"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"snapshot\" <$> TF.attribute",
                    "name": "_snapshot",
                    "method": "snapshot",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSnapshot",
                    "validate": false,
                    "optional": true,
                    "original": "snapshot"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_image_encryption_key\" <$> TF.attribute",
                    "name": "_sourceImageEncryptionKey",
                    "method": "sourceImageEncryptionKey",
                    "conflicts": [],
                    "type": "TF.Attr s (SourceImageEncryptionKey s)",
                    "class": "HasSourceImageEncryptionKey",
                    "validate": true,
                    "optional": true,
                    "original": "source_image_encryption_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_snapshot_encryption_key\" <$> TF.attribute",
                    "name": "_sourceSnapshotEncryptionKey",
                    "method": "sourceSnapshotEncryptionKey",
                    "conflicts": [],
                    "type": "TF.Attr s (SourceSnapshotEncryptionKey s)",
                    "class": "HasSourceSnapshotEncryptionKey",
                    "validate": true,
                    "optional": true,
                    "original": "source_snapshot_encryption_key"
                },
                {
                    "default": "TF.value \"pd-standard\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "name": "ComputeDiskResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_attach_timestamp\" <$> TF.attribute",
                    "name": "_computedLastAttachTimestamp",
                    "method": "computedLastAttachTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLastAttachTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "last_attach_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_detach_timestamp\" <$> TF.attribute",
                    "name": "_computedLastDetachTimestamp",
                    "method": "computedLastDetachTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLastDetachTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "last_detach_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_computedSize",
                    "method": "computedSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSize",
                    "validate": false,
                    "optional": true,
                    "original": "size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_image_id\" <$> TF.attribute",
                    "name": "_computedSourceImageId",
                    "method": "computedSourceImageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceImageId",
                    "validate": false,
                    "optional": false,
                    "original": "source_image_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_snapshot_id\" <$> TF.attribute",
                    "name": "_computedSourceSnapshotId",
                    "method": "computedSourceSnapshotId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceSnapshotId",
                    "validate": false,
                    "optional": false,
                    "original": "source_snapshot_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"users\" <$> TF.attribute",
                    "name": "_computedUsers",
                    "method": "computedUsers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedUsers",
                    "validate": false,
                    "optional": false,
                    "original": "users"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeDiskResource s",
            "original": "google_compute_disk"
        },
        {
            "con": {
                "smart": "computeFirewallResource",
                "name": "ComputeFirewallResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow\" <$> TF.attribute",
                    "name": "_allow",
                    "method": "allow",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_deny",
                            "method": "deny"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s (Allow s)]",
                    "class": "HasAllow",
                    "validate": true,
                    "optional": true,
                    "original": "allow"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"deny\" <$> TF.attribute",
                    "name": "_deny",
                    "method": "deny",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_allow",
                            "method": "allow"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s (Deny s)]",
                    "class": "HasDeny",
                    "validate": true,
                    "optional": true,
                    "original": "deny"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_disabled",
                    "method": "disabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisabled",
                    "validate": false,
                    "optional": true,
                    "original": "disabled"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.value 1000",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": true,
                    "original": "priority"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_service_accounts\" <$> TF.attribute",
                    "name": "_sourceServiceAccounts",
                    "method": "sourceServiceAccounts",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceTags",
                            "method": "sourceTags"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetTags",
                            "method": "targetTags"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceServiceAccounts",
                    "validate": false,
                    "optional": true,
                    "original": "source_service_accounts"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_tags\" <$> TF.attribute",
                    "name": "_sourceTags",
                    "method": "sourceTags",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceServiceAccounts",
                            "method": "sourceServiceAccounts"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetServiceAccounts",
                            "method": "targetServiceAccounts"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSourceTags",
                    "validate": false,
                    "optional": true,
                    "original": "source_tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"target_service_accounts\" <$> TF.attribute",
                    "name": "_targetServiceAccounts",
                    "method": "targetServiceAccounts",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceTags",
                            "method": "sourceTags"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetTags",
                            "method": "targetTags"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetServiceAccounts",
                    "validate": false,
                    "optional": true,
                    "original": "target_service_accounts"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_tags\" <$> TF.attribute",
                    "name": "_targetTags",
                    "method": "targetTags",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceServiceAccounts",
                            "method": "sourceServiceAccounts"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetServiceAccounts",
                            "method": "targetServiceAccounts"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTargetTags",
                    "validate": false,
                    "optional": true,
                    "original": "target_tags"
                }
            ],
            "name": "ComputeFirewallResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"destination_ranges\" <$> TF.attribute",
                    "name": "_computedDestinationRanges",
                    "method": "computedDestinationRanges",
                    "conflicts": [
                        "_sourceRanges",
                        "_sourceTags"
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedDestinationRanges",
                    "validate": false,
                    "optional": true,
                    "original": "destination_ranges"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"direction\" <$> TF.attribute",
                    "name": "_computedDirection",
                    "method": "computedDirection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDirection",
                    "validate": false,
                    "optional": true,
                    "original": "direction"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_ranges\" <$> TF.attribute",
                    "name": "_computedSourceRanges",
                    "method": "computedSourceRanges",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedSourceRanges",
                    "validate": false,
                    "optional": true,
                    "original": "source_ranges"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow\" <$> TF.attribute",
                    "name": "_allow",
                    "method": "allow",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_deny",
                            "method": "deny"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s (Allow s)]",
                    "class": "HasAllow",
                    "validate": true,
                    "optional": true,
                    "original": "allow"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"deny\" <$> TF.attribute",
                    "name": "_deny",
                    "method": "deny",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_allow",
                            "method": "allow"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s (Deny s)]",
                    "class": "HasDeny",
                    "validate": true,
                    "optional": true,
                    "original": "deny"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_service_accounts\" <$> TF.attribute",
                    "name": "_sourceServiceAccounts",
                    "method": "sourceServiceAccounts",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceTags",
                            "method": "sourceTags"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetTags",
                            "method": "targetTags"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceServiceAccounts",
                    "validate": false,
                    "optional": true,
                    "original": "source_service_accounts"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_tags\" <$> TF.attribute",
                    "name": "_sourceTags",
                    "method": "sourceTags",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceServiceAccounts",
                            "method": "sourceServiceAccounts"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetServiceAccounts",
                            "method": "targetServiceAccounts"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSourceTags",
                    "validate": false,
                    "optional": true,
                    "original": "source_tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"target_service_accounts\" <$> TF.attribute",
                    "name": "_targetServiceAccounts",
                    "method": "targetServiceAccounts",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceTags",
                            "method": "sourceTags"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetTags",
                            "method": "targetTags"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetServiceAccounts",
                    "validate": false,
                    "optional": true,
                    "original": "target_service_accounts"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_tags\" <$> TF.attribute",
                    "name": "_targetTags",
                    "method": "targetTags",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sourceServiceAccounts",
                            "method": "sourceServiceAccounts"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_targetServiceAccounts",
                            "method": "targetServiceAccounts"
                        }
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTargetTags",
                    "validate": false,
                    "optional": true,
                    "original": "target_tags"
                }
            ],
            "type": "ComputeFirewallResource s",
            "original": "google_compute_firewall"
        },
        {
            "con": {
                "smart": "computeForwardingRuleResource",
                "name": "ComputeForwardingRuleResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"backend_service\" <$> TF.attribute",
                    "name": "_backendService",
                    "method": "backendService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBackendService",
                    "validate": false,
                    "optional": true,
                    "original": "backend_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "_ipVersion",
                    "method": "ipVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpVersion",
                    "validate": false,
                    "optional": true,
                    "original": "ip_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "TF.value \"EXTERNAL\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"load_balancing_scheme\" <$> TF.attribute",
                    "name": "_loadBalancingScheme",
                    "method": "loadBalancingScheme",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLoadBalancingScheme",
                    "validate": false,
                    "optional": true,
                    "original": "load_balancing_scheme"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port_range\" <$> TF.attribute",
                    "name": "_portRange",
                    "method": "portRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPortRange",
                    "validate": false,
                    "optional": true,
                    "original": "port_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ports\" <$> TF.attribute",
                    "name": "_ports",
                    "method": "ports",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPorts",
                    "validate": false,
                    "optional": true,
                    "original": "ports"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_label\" <$> TF.attribute",
                    "name": "_serviceLabel",
                    "method": "serviceLabel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceLabel",
                    "validate": false,
                    "optional": true,
                    "original": "service_label"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": true,
                    "original": "target"
                }
            ],
            "name": "ComputeForwardingRuleResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "_computedIpAddress",
                    "method": "computedIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpAddress",
                    "validate": false,
                    "optional": true,
                    "original": "ip_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_protocol\" <$> TF.attribute",
                    "name": "_computedIpProtocol",
                    "method": "computedIpProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpProtocol",
                    "validate": false,
                    "optional": true,
                    "original": "ip_protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": true,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_tier\" <$> TF.attribute",
                    "name": "_computedNetworkTier",
                    "method": "computedNetworkTier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetworkTier",
                    "validate": false,
                    "optional": true,
                    "original": "network_tier"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service_name\" <$> TF.attribute",
                    "name": "_computedServiceName",
                    "method": "computedServiceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedServiceName",
                    "validate": false,
                    "optional": false,
                    "original": "service_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_computedSubnetwork",
                    "method": "computedSubnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetwork",
                    "validate": false,
                    "optional": true,
                    "original": "subnetwork"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeForwardingRuleResource s",
            "original": "google_compute_forwarding_rule"
        },
        {
            "con": {
                "smart": "computeGlobalAddressResource",
                "name": "ComputeGlobalAddressResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "_ipVersion",
                    "method": "ipVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpVersion",
                    "validate": false,
                    "optional": true,
                    "original": "ip_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeGlobalAddressResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_computedAddress",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeGlobalAddressResource s",
            "original": "google_compute_global_address"
        },
        {
            "con": {
                "smart": "computeGlobalForwardingRuleResource",
                "name": "ComputeGlobalForwardingRuleResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "_ipVersion",
                    "method": "ipVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpVersion",
                    "validate": false,
                    "optional": true,
                    "original": "ip_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port_range\" <$> TF.attribute",
                    "name": "_portRange",
                    "method": "portRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPortRange",
                    "validate": false,
                    "optional": true,
                    "original": "port_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "name": "ComputeGlobalForwardingRuleResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "_computedIpAddress",
                    "method": "computedIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpAddress",
                    "validate": false,
                    "optional": true,
                    "original": "ip_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_protocol\" <$> TF.attribute",
                    "name": "_computedIpProtocol",
                    "method": "computedIpProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpProtocol",
                    "validate": false,
                    "optional": true,
                    "original": "ip_protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "conflicts": [],
            "type": "ComputeGlobalForwardingRuleResource s",
            "original": "google_compute_global_forwarding_rule"
        },
        {
            "con": {
                "smart": "computeHealthCheckResource",
                "name": "ComputeHealthCheckResource'"
            },
            "arguments": [
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_interval_sec\" <$> TF.attribute",
                    "name": "_checkIntervalSec",
                    "method": "checkIntervalSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCheckIntervalSec",
                    "validate": false,
                    "optional": true,
                    "original": "check_interval_sec"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthy_threshold\" <$> TF.attribute",
                    "name": "_healthyThreshold",
                    "method": "healthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasHealthyThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "healthy_threshold"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_health_check\" <$> TF.attribute",
                    "name": "_httpHealthCheck",
                    "method": "httpHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_tcpHealthCheck",
                            "method": "tcpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sslHealthCheck",
                            "method": "sslHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpsHealthCheck",
                            "method": "httpsHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (HttpHealthCheck s)",
                    "class": "HasHttpHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "http_health_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"https_health_check\" <$> TF.attribute",
                    "name": "_httpsHealthCheck",
                    "method": "httpsHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_tcpHealthCheck",
                            "method": "tcpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpHealthCheck",
                            "method": "httpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sslHealthCheck",
                            "method": "sslHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (HttpsHealthCheck s)",
                    "class": "HasHttpsHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "https_health_check"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_health_check\" <$> TF.attribute",
                    "name": "_sslHealthCheck",
                    "method": "sslHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_tcpHealthCheck",
                            "method": "tcpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpHealthCheck",
                            "method": "httpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpsHealthCheck",
                            "method": "httpsHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (SslHealthCheck s)",
                    "class": "HasSslHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "ssl_health_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tcp_health_check\" <$> TF.attribute",
                    "name": "_tcpHealthCheck",
                    "method": "tcpHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_httpHealthCheck",
                            "method": "httpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sslHealthCheck",
                            "method": "sslHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpsHealthCheck",
                            "method": "httpsHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (TcpHealthCheck s)",
                    "class": "HasTcpHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "tcp_health_check"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout_sec\" <$> TF.attribute",
                    "name": "_timeoutSec",
                    "method": "timeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "timeout_sec"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unhealthy_threshold\" <$> TF.attribute",
                    "name": "_unhealthyThreshold",
                    "method": "unhealthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasUnhealthyThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "unhealthy_threshold"
                }
            ],
            "name": "ComputeHealthCheckResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_health_check\" <$> TF.attribute",
                    "name": "_httpHealthCheck",
                    "method": "httpHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_tcpHealthCheck",
                            "method": "tcpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sslHealthCheck",
                            "method": "sslHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpsHealthCheck",
                            "method": "httpsHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (HttpHealthCheck s)",
                    "class": "HasHttpHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "http_health_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"https_health_check\" <$> TF.attribute",
                    "name": "_httpsHealthCheck",
                    "method": "httpsHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_tcpHealthCheck",
                            "method": "tcpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpHealthCheck",
                            "method": "httpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sslHealthCheck",
                            "method": "sslHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (HttpsHealthCheck s)",
                    "class": "HasHttpsHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "https_health_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_health_check\" <$> TF.attribute",
                    "name": "_sslHealthCheck",
                    "method": "sslHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_tcpHealthCheck",
                            "method": "tcpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpHealthCheck",
                            "method": "httpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpsHealthCheck",
                            "method": "httpsHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (SslHealthCheck s)",
                    "class": "HasSslHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "ssl_health_check"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tcp_health_check\" <$> TF.attribute",
                    "name": "_tcpHealthCheck",
                    "method": "tcpHealthCheck",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_httpHealthCheck",
                            "method": "httpHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sslHealthCheck",
                            "method": "sslHealthCheck"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_httpsHealthCheck",
                            "method": "httpsHealthCheck"
                        }
                    ],
                    "type": "TF.Attr s (TcpHealthCheck s)",
                    "class": "HasTcpHealthCheck",
                    "validate": true,
                    "optional": true,
                    "original": "tcp_health_check"
                }
            ],
            "type": "ComputeHealthCheckResource s",
            "original": "google_compute_health_check"
        },
        {
            "con": {
                "smart": "computeHttpHealthCheckResource",
                "name": "ComputeHttpHealthCheckResource'"
            },
            "arguments": [
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_interval_sec\" <$> TF.attribute",
                    "name": "_checkIntervalSec",
                    "method": "checkIntervalSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCheckIntervalSec",
                    "validate": false,
                    "optional": true,
                    "original": "check_interval_sec"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthy_threshold\" <$> TF.attribute",
                    "name": "_healthyThreshold",
                    "method": "healthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasHealthyThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "healthy_threshold"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": true,
                    "original": "host"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value 80",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.value \"/\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_path\" <$> TF.attribute",
                    "name": "_requestPath",
                    "method": "requestPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestPath",
                    "validate": false,
                    "optional": true,
                    "original": "request_path"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout_sec\" <$> TF.attribute",
                    "name": "_timeoutSec",
                    "method": "timeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "timeout_sec"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unhealthy_threshold\" <$> TF.attribute",
                    "name": "_unhealthyThreshold",
                    "method": "unhealthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasUnhealthyThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "unhealthy_threshold"
                }
            ],
            "name": "ComputeHttpHealthCheckResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeHttpHealthCheckResource s",
            "original": "google_compute_http_health_check"
        },
        {
            "con": {
                "smart": "computeHttpsHealthCheckResource",
                "name": "ComputeHttpsHealthCheckResource'"
            },
            "arguments": [
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_interval_sec\" <$> TF.attribute",
                    "name": "_checkIntervalSec",
                    "method": "checkIntervalSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCheckIntervalSec",
                    "validate": false,
                    "optional": true,
                    "original": "check_interval_sec"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthy_threshold\" <$> TF.attribute",
                    "name": "_healthyThreshold",
                    "method": "healthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasHealthyThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "healthy_threshold"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": true,
                    "original": "host"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value 443",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.value \"/\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_path\" <$> TF.attribute",
                    "name": "_requestPath",
                    "method": "requestPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestPath",
                    "validate": false,
                    "optional": true,
                    "original": "request_path"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout_sec\" <$> TF.attribute",
                    "name": "_timeoutSec",
                    "method": "timeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "timeout_sec"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unhealthy_threshold\" <$> TF.attribute",
                    "name": "_unhealthyThreshold",
                    "method": "unhealthyThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasUnhealthyThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "unhealthy_threshold"
                }
            ],
            "name": "ComputeHttpsHealthCheckResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeHttpsHealthCheckResource s",
            "original": "google_compute_https_health_check"
        },
        {
            "con": {
                "smart": "computeImageResource",
                "name": "ComputeImageResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"family\" <$> TF.attribute",
                    "name": "_family'",
                    "method": "family'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFamily'",
                    "validate": false,
                    "optional": true,
                    "original": "family"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"raw_disk\" <$> TF.attribute",
                    "name": "_rawDisk",
                    "method": "rawDisk",
                    "conflicts": [],
                    "type": "TF.Attr s (RawDisk s)",
                    "class": "HasRawDisk",
                    "validate": true,
                    "optional": true,
                    "original": "raw_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_disk\" <$> TF.attribute",
                    "name": "_sourceDisk",
                    "method": "sourceDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceDisk",
                    "validate": false,
                    "optional": true,
                    "original": "source_disk"
                }
            ],
            "name": "ComputeImageResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"licenses\" <$> TF.attribute",
                    "name": "_computedLicenses",
                    "method": "computedLicenses",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedLicenses",
                    "validate": false,
                    "optional": true,
                    "original": "licenses"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeImageResource s",
            "original": "google_compute_image"
        },
        {
            "con": {
                "smart": "computeInstanceResource",
                "name": "ComputeInstanceResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow_stopping_for_update\" <$> TF.attribute",
                    "name": "_allowStoppingForUpdate",
                    "method": "allowStoppingForUpdate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAllowStoppingForUpdate",
                    "validate": false,
                    "optional": true,
                    "original": "allow_stopping_for_update"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attached_disk\" <$> TF.attribute",
                    "name": "_attachedDisk",
                    "method": "attachedDisk",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AttachedDisk s)]",
                    "class": "HasAttachedDisk",
                    "validate": true,
                    "optional": true,
                    "original": "attached_disk"
                },
                {
                    "default": "_bootDisk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"boot_disk\" <$> TF.attribute",
                    "name": "_bootDisk",
                    "method": "bootDisk",
                    "conflicts": [],
                    "type": "TF.Attr s (BootDisk s)",
                    "class": "HasBootDisk",
                    "validate": true,
                    "optional": false,
                    "original": "boot_disk"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"can_ip_forward\" <$> TF.attribute",
                    "name": "_canIpForward",
                    "method": "canIpForward",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasCanIpForward",
                    "validate": false,
                    "optional": true,
                    "original": "can_ip_forward"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deletion_protection\" <$> TF.attribute",
                    "name": "_deletionProtection",
                    "method": "deletionProtection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDeletionProtection",
                    "validate": false,
                    "optional": true,
                    "original": "deletion_protection"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "_disk",
                    "method": "disk",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Disk s)]",
                    "class": "HasDisk",
                    "validate": true,
                    "optional": true,
                    "original": "disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_machineType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_machineType",
                    "method": "machineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMachineType",
                    "validate": false,
                    "optional": false,
                    "original": "machine_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "validate": false,
                    "optional": true,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"metadata_startup_script\" <$> TF.attribute",
                    "name": "_metadataStartupScript",
                    "method": "metadataStartupScript",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetadataStartupScript",
                    "validate": false,
                    "optional": true,
                    "original": "metadata_startup_script"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_cpu_platform\" <$> TF.attribute",
                    "name": "_minCpuPlatform",
                    "method": "minCpuPlatform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinCpuPlatform",
                    "validate": false,
                    "optional": true,
                    "original": "min_cpu_platform"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Network s)]",
                    "class": "HasNetwork",
                    "validate": true,
                    "optional": true,
                    "original": "network"
                },
                {
                    "default": "_networkInterface",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_interface\" <$> TF.attribute",
                    "name": "_networkInterface",
                    "method": "networkInterface",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NetworkInterface s)]",
                    "class": "HasNetworkInterface",
                    "validate": true,
                    "optional": false,
                    "original": "network_interface"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"scratch_disk\" <$> TF.attribute",
                    "name": "_scratchDisk",
                    "method": "scratchDisk",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScratchDisk s)]",
                    "class": "HasScratchDisk",
                    "validate": true,
                    "optional": true,
                    "original": "scratch_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service_account\" <$> TF.attribute",
                    "name": "_serviceAccount",
                    "method": "serviceAccount",
                    "conflicts": [],
                    "type": "TF.Attr s (ServiceAccount s)",
                    "class": "HasServiceAccount",
                    "validate": true,
                    "optional": true,
                    "original": "service_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                }
            ],
            "name": "ComputeInstanceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cpu_platform\" <$> TF.attribute",
                    "name": "_computedCpuPlatform",
                    "method": "computedCpuPlatform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCpuPlatform",
                    "validate": false,
                    "optional": false,
                    "original": "cpu_platform"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"guest_accelerator\" <$> TF.attribute",
                    "name": "_computedGuestAccelerator",
                    "method": "computedGuestAccelerator",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (GuestAccelerator s)]",
                    "class": "HasComputedGuestAccelerator",
                    "validate": true,
                    "optional": true,
                    "original": "guest_accelerator"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "_computedInstanceId",
                    "method": "computedInstanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInstanceId",
                    "validate": false,
                    "optional": false,
                    "original": "instance_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata_fingerprint\" <$> TF.attribute",
                    "name": "_computedMetadataFingerprint",
                    "method": "computedMetadataFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMetadataFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "metadata_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scheduling\" <$> TF.attribute",
                    "name": "_computedScheduling",
                    "method": "computedScheduling",
                    "conflicts": [],
                    "type": "TF.Attr s (Scheduling s)",
                    "class": "HasComputedScheduling",
                    "validate": true,
                    "optional": true,
                    "original": "scheduling"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags_fingerprint\" <$> TF.attribute",
                    "name": "_computedTagsFingerprint",
                    "method": "computedTagsFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTagsFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "tags_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_bootDisk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"boot_disk\" <$> TF.attribute",
                    "name": "_bootDisk",
                    "method": "bootDisk",
                    "conflicts": [],
                    "type": "TF.Attr s (BootDisk s)",
                    "class": "HasBootDisk",
                    "validate": true,
                    "optional": false,
                    "original": "boot_disk"
                },
                {
                    "default": "_machineType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_machineType",
                    "method": "machineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMachineType",
                    "validate": false,
                    "optional": false,
                    "original": "machine_type"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_networkInterface",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_interface\" <$> TF.attribute",
                    "name": "_networkInterface",
                    "method": "networkInterface",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NetworkInterface s)]",
                    "class": "HasNetworkInterface",
                    "validate": true,
                    "optional": false,
                    "original": "network_interface"
                }
            ],
            "conflicts": [],
            "type": "ComputeInstanceResource s",
            "original": "google_compute_instance"
        },
        {
            "con": {
                "smart": "computeInstanceFromTemplateResource",
                "name": "ComputeInstanceFromTemplateResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_sourceInstanceTemplate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_instance_template\" <$> TF.attribute",
                    "name": "_sourceInstanceTemplate",
                    "method": "sourceInstanceTemplate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceInstanceTemplate",
                    "validate": false,
                    "optional": false,
                    "original": "source_instance_template"
                }
            ],
            "name": "ComputeInstanceFromTemplateResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allow_stopping_for_update\" <$> TF.attribute",
                    "name": "_computedAllowStoppingForUpdate",
                    "method": "computedAllowStoppingForUpdate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAllowStoppingForUpdate",
                    "validate": false,
                    "optional": true,
                    "original": "allow_stopping_for_update"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attached_disk\" <$> TF.attribute",
                    "name": "_computedAttachedDisk",
                    "method": "computedAttachedDisk",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AttachedDisk s)]",
                    "class": "HasComputedAttachedDisk",
                    "validate": true,
                    "optional": true,
                    "original": "attached_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"boot_disk\" <$> TF.attribute",
                    "name": "_computedBootDisk",
                    "method": "computedBootDisk",
                    "conflicts": [],
                    "type": "TF.Attr s (BootDisk s)",
                    "class": "HasComputedBootDisk",
                    "validate": true,
                    "optional": false,
                    "original": "boot_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"can_ip_forward\" <$> TF.attribute",
                    "name": "_computedCanIpForward",
                    "method": "computedCanIpForward",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedCanIpForward",
                    "validate": false,
                    "optional": true,
                    "original": "can_ip_forward"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cpu_platform\" <$> TF.attribute",
                    "name": "_computedCpuPlatform",
                    "method": "computedCpuPlatform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCpuPlatform",
                    "validate": false,
                    "optional": false,
                    "original": "cpu_platform"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deletion_protection\" <$> TF.attribute",
                    "name": "_computedDeletionProtection",
                    "method": "computedDeletionProtection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDeletionProtection",
                    "validate": false,
                    "optional": true,
                    "original": "deletion_protection"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_computedDescription",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"guest_accelerator\" <$> TF.attribute",
                    "name": "_computedGuestAccelerator",
                    "method": "computedGuestAccelerator",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (GuestAccelerator s)]",
                    "class": "HasComputedGuestAccelerator",
                    "validate": true,
                    "optional": true,
                    "original": "guest_accelerator"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "_computedInstanceId",
                    "method": "computedInstanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInstanceId",
                    "validate": false,
                    "optional": false,
                    "original": "instance_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_computedLabels",
                    "method": "computedLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_computedMachineType",
                    "method": "computedMachineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMachineType",
                    "validate": false,
                    "optional": false,
                    "original": "machine_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_computedMetadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "validate": false,
                    "optional": true,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata_fingerprint\" <$> TF.attribute",
                    "name": "_computedMetadataFingerprint",
                    "method": "computedMetadataFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMetadataFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "metadata_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"metadata_startup_script\" <$> TF.attribute",
                    "name": "_computedMetadataStartupScript",
                    "method": "computedMetadataStartupScript",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMetadataStartupScript",
                    "validate": false,
                    "optional": true,
                    "original": "metadata_startup_script"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_cpu_platform\" <$> TF.attribute",
                    "name": "_computedMinCpuPlatform",
                    "method": "computedMinCpuPlatform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMinCpuPlatform",
                    "validate": false,
                    "optional": true,
                    "original": "min_cpu_platform"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_interface\" <$> TF.attribute",
                    "name": "_computedNetworkInterface",
                    "method": "computedNetworkInterface",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NetworkInterface s)]",
                    "class": "HasComputedNetworkInterface",
                    "validate": true,
                    "optional": false,
                    "original": "network_interface"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scheduling\" <$> TF.attribute",
                    "name": "_computedScheduling",
                    "method": "computedScheduling",
                    "conflicts": [],
                    "type": "TF.Attr s (Scheduling s)",
                    "class": "HasComputedScheduling",
                    "validate": true,
                    "optional": true,
                    "original": "scheduling"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"scratch_disk\" <$> TF.attribute",
                    "name": "_computedScratchDisk",
                    "method": "computedScratchDisk",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ScratchDisk s)]",
                    "class": "HasComputedScratchDisk",
                    "validate": true,
                    "optional": true,
                    "original": "scratch_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"service_account\" <$> TF.attribute",
                    "name": "_computedServiceAccount",
                    "method": "computedServiceAccount",
                    "conflicts": [],
                    "type": "TF.Attr s (ServiceAccount s)",
                    "class": "HasComputedServiceAccount",
                    "validate": true,
                    "optional": true,
                    "original": "service_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_computedTags",
                    "method": "computedTags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags_fingerprint\" <$> TF.attribute",
                    "name": "_computedTagsFingerprint",
                    "method": "computedTagsFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTagsFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "tags_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_sourceInstanceTemplate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_instance_template\" <$> TF.attribute",
                    "name": "_sourceInstanceTemplate",
                    "method": "sourceInstanceTemplate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceInstanceTemplate",
                    "validate": false,
                    "optional": false,
                    "original": "source_instance_template"
                }
            ],
            "conflicts": [],
            "type": "ComputeInstanceFromTemplateResource s",
            "original": "google_compute_instance_from_template"
        },
        {
            "con": {
                "smart": "computeInstanceGroupResource",
                "name": "ComputeInstanceGroupResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"named_port\" <$> TF.attribute",
                    "name": "_namedPort",
                    "method": "namedPort",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NamedPort s)]",
                    "class": "HasNamedPort",
                    "validate": true,
                    "optional": true,
                    "original": "named_port"
                }
            ],
            "name": "ComputeInstanceGroupResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instances\" <$> TF.attribute",
                    "name": "_computedInstances",
                    "method": "computedInstances",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstances",
                    "validate": false,
                    "optional": true,
                    "original": "instances"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_computedNetwork",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetwork",
                    "validate": false,
                    "optional": true,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_computedSize",
                    "method": "computedSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSize",
                    "validate": false,
                    "optional": false,
                    "original": "size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeInstanceGroupResource s",
            "original": "google_compute_instance_group"
        },
        {
            "con": {
                "smart": "computeInstanceGroupManagerResource",
                "name": "ComputeInstanceGroupManagerResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_healing_policies\" <$> TF.attribute",
                    "name": "_autoHealingPolicies",
                    "method": "autoHealingPolicies",
                    "conflicts": [],
                    "type": "TF.Attr s (AutoHealingPolicies s)",
                    "class": "HasAutoHealingPolicies",
                    "validate": true,
                    "optional": true,
                    "original": "auto_healing_policies"
                },
                {
                    "default": "_baseInstanceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"base_instance_name\" <$> TF.attribute",
                    "name": "_baseInstanceName",
                    "method": "baseInstanceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBaseInstanceName",
                    "validate": false,
                    "optional": false,
                    "original": "base_instance_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_template\" <$> TF.attribute",
                    "name": "_instanceTemplate",
                    "method": "instanceTemplate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceTemplate",
                    "validate": false,
                    "optional": true,
                    "original": "instance_template"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"named_port\" <$> TF.attribute",
                    "name": "_namedPort",
                    "method": "namedPort",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NamedPort s)]",
                    "class": "HasNamedPort",
                    "validate": true,
                    "optional": true,
                    "original": "named_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rolling_update_policy\" <$> TF.attribute",
                    "name": "_rollingUpdatePolicy",
                    "method": "rollingUpdatePolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (RollingUpdatePolicy s)",
                    "class": "HasRollingUpdatePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "rolling_update_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_pools\" <$> TF.attribute",
                    "name": "_targetPools",
                    "method": "targetPools",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTargetPools",
                    "validate": false,
                    "optional": true,
                    "original": "target_pools"
                },
                {
                    "default": "TF.value \"RESTART\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_strategy\" <$> TF.attribute",
                    "name": "_updateStrategy",
                    "method": "updateStrategy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUpdateStrategy",
                    "validate": false,
                    "optional": true,
                    "original": "update_strategy"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"wait_for_instances\" <$> TF.attribute",
                    "name": "_waitForInstances",
                    "method": "waitForInstances",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasWaitForInstances",
                    "validate": false,
                    "optional": true,
                    "original": "wait_for_instances"
                }
            ],
            "name": "ComputeInstanceGroupManagerResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_group\" <$> TF.attribute",
                    "name": "_computedInstanceGroup",
                    "method": "computedInstanceGroup",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInstanceGroup",
                    "validate": false,
                    "optional": false,
                    "original": "instance_group"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_size\" <$> TF.attribute",
                    "name": "_computedTargetSize",
                    "method": "computedTargetSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTargetSize",
                    "validate": false,
                    "optional": true,
                    "original": "target_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Version s)]",
                    "class": "HasComputedVersion",
                    "validate": true,
                    "optional": true,
                    "original": "version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_baseInstanceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"base_instance_name\" <$> TF.attribute",
                    "name": "_baseInstanceName",
                    "method": "baseInstanceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBaseInstanceName",
                    "validate": false,
                    "optional": false,
                    "original": "base_instance_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeInstanceGroupManagerResource s",
            "original": "google_compute_instance_group_manager"
        },
        {
            "con": {
                "smart": "computeInstanceTemplateResource",
                "name": "ComputeInstanceTemplateResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"automatic_restart\" <$> TF.attribute",
                    "name": "_automaticRestart",
                    "method": "automaticRestart",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutomaticRestart",
                    "validate": false,
                    "optional": true,
                    "original": "automatic_restart"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"can_ip_forward\" <$> TF.attribute",
                    "name": "_canIpForward",
                    "method": "canIpForward",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasCanIpForward",
                    "validate": false,
                    "optional": true,
                    "original": "can_ip_forward"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_disk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "_disk",
                    "method": "disk",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Disk s)]",
                    "class": "HasDisk",
                    "validate": true,
                    "optional": false,
                    "original": "disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"guest_accelerator\" <$> TF.attribute",
                    "name": "_guestAccelerator",
                    "method": "guestAccelerator",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (GuestAccelerator s)]",
                    "class": "HasGuestAccelerator",
                    "validate": true,
                    "optional": true,
                    "original": "guest_accelerator"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_description\" <$> TF.attribute",
                    "name": "_instanceDescription",
                    "method": "instanceDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceDescription",
                    "validate": false,
                    "optional": true,
                    "original": "instance_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_machineType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_machineType",
                    "method": "machineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMachineType",
                    "validate": false,
                    "optional": false,
                    "original": "machine_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "validate": false,
                    "optional": true,
                    "original": "metadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"metadata_startup_script\" <$> TF.attribute",
                    "name": "_metadataStartupScript",
                    "method": "metadataStartupScript",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMetadataStartupScript",
                    "validate": false,
                    "optional": true,
                    "original": "metadata_startup_script"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"min_cpu_platform\" <$> TF.attribute",
                    "name": "_minCpuPlatform",
                    "method": "minCpuPlatform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinCpuPlatform",
                    "validate": false,
                    "optional": true,
                    "original": "min_cpu_platform"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_interface\" <$> TF.attribute",
                    "name": "_networkInterface",
                    "method": "networkInterface",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NetworkInterface s)]",
                    "class": "HasNetworkInterface",
                    "validate": true,
                    "optional": true,
                    "original": "network_interface"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"on_host_maintenance\" <$> TF.attribute",
                    "name": "_onHostMaintenance",
                    "method": "onHostMaintenance",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOnHostMaintenance",
                    "validate": false,
                    "optional": true,
                    "original": "on_host_maintenance"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account\" <$> TF.attribute",
                    "name": "_serviceAccount",
                    "method": "serviceAccount",
                    "conflicts": [],
                    "type": "TF.Attr s (ServiceAccount s)",
                    "class": "HasServiceAccount",
                    "validate": true,
                    "optional": true,
                    "original": "service_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                }
            ],
            "name": "ComputeInstanceTemplateResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata_fingerprint\" <$> TF.attribute",
                    "name": "_computedMetadataFingerprint",
                    "method": "computedMetadataFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMetadataFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "metadata_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [
                        "_namePrefix"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name_prefix\" <$> TF.attribute",
                    "name": "_computedNamePrefix",
                    "method": "computedNamePrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNamePrefix",
                    "validate": false,
                    "optional": true,
                    "original": "name_prefix"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"scheduling\" <$> TF.attribute",
                    "name": "_computedScheduling",
                    "method": "computedScheduling",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Scheduling s)]",
                    "class": "HasComputedScheduling",
                    "validate": true,
                    "optional": true,
                    "original": "scheduling"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags_fingerprint\" <$> TF.attribute",
                    "name": "_computedTagsFingerprint",
                    "method": "computedTagsFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTagsFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "tags_fingerprint"
                }
            ],
            "parameters": [
                {
                    "default": "_disk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "_disk",
                    "method": "disk",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Disk s)]",
                    "class": "HasDisk",
                    "validate": true,
                    "optional": false,
                    "original": "disk"
                },
                {
                    "default": "_machineType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"machine_type\" <$> TF.attribute",
                    "name": "_machineType",
                    "method": "machineType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMachineType",
                    "validate": false,
                    "optional": false,
                    "original": "machine_type"
                }
            ],
            "conflicts": [],
            "type": "ComputeInstanceTemplateResource s",
            "original": "google_compute_instance_template"
        },
        {
            "con": {
                "smart": "computeNetworkResource",
                "name": "ComputeNetworkResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"auto_create_subnetworks\" <$> TF.attribute",
                    "name": "_autoCreateSubnetworks",
                    "method": "autoCreateSubnetworks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoCreateSubnetworks",
                    "validate": false,
                    "optional": true,
                    "original": "auto_create_subnetworks"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeNetworkResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway_ipv4\" <$> TF.attribute",
                    "name": "_computedGatewayIpv4",
                    "method": "computedGatewayIpv4",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGatewayIpv4",
                    "validate": false,
                    "optional": false,
                    "original": "gateway_ipv4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"routing_mode\" <$> TF.attribute",
                    "name": "_computedRoutingMode",
                    "method": "computedRoutingMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRoutingMode",
                    "validate": false,
                    "optional": true,
                    "original": "routing_mode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeNetworkResource s",
            "original": "google_compute_network"
        },
        {
            "con": {
                "smart": "computeNetworkPeeringResource",
                "name": "ComputeNetworkPeeringResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"auto_create_routes\" <$> TF.attribute",
                    "name": "_autoCreateRoutes",
                    "method": "autoCreateRoutes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoCreateRoutes",
                    "validate": false,
                    "optional": true,
                    "original": "auto_create_routes"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "_peerNetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"peer_network\" <$> TF.attribute",
                    "name": "_peerNetwork",
                    "method": "peerNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "peer_network"
                }
            ],
            "name": "ComputeNetworkPeeringResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_computedState",
                    "method": "computedState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedState",
                    "validate": false,
                    "optional": false,
                    "original": "state"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"state_details\" <$> TF.attribute",
                    "name": "_computedStateDetails",
                    "method": "computedStateDetails",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStateDetails",
                    "validate": false,
                    "optional": false,
                    "original": "state_details"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "_peerNetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"peer_network\" <$> TF.attribute",
                    "name": "_peerNetwork",
                    "method": "peerNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "peer_network"
                }
            ],
            "conflicts": [],
            "type": "ComputeNetworkPeeringResource s",
            "original": "google_compute_network_peering"
        },
        {
            "con": {
                "smart": "computeProjectMetadataResource",
                "name": "ComputeProjectMetadataResource'"
            },
            "arguments": [
                {
                    "default": "_metadata",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "validate": false,
                    "optional": false,
                    "original": "metadata"
                }
            ],
            "name": "ComputeProjectMetadataResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_metadata",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "_metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "validate": false,
                    "optional": false,
                    "original": "metadata"
                }
            ],
            "conflicts": [],
            "type": "ComputeProjectMetadataResource s",
            "original": "google_compute_project_metadata"
        },
        {
            "con": {
                "smart": "computeProjectMetadataItemResource",
                "name": "ComputeProjectMetadataItemResource'"
            },
            "arguments": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "_key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "validate": false,
                    "optional": false,
                    "original": "key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "validate": false,
                    "optional": false,
                    "original": "value"
                }
            ],
            "name": "ComputeProjectMetadataItemResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_key",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key\" <$> TF.attribute",
                    "name": "_key",
                    "method": "key",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKey",
                    "validate": false,
                    "optional": false,
                    "original": "key"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "validate": false,
                    "optional": false,
                    "original": "value"
                }
            ],
            "conflicts": [],
            "type": "ComputeProjectMetadataItemResource s",
            "original": "google_compute_project_metadata_item"
        },
        {
            "con": {
                "smart": "computeRegionAutoscalerResource",
                "name": "ComputeRegionAutoscalerResource'"
            },
            "arguments": [
                {
                    "default": "_autoscalingPolicy",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscaling_policy\" <$> TF.attribute",
                    "name": "_autoscalingPolicy",
                    "method": "autoscalingPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (AutoscalingPolicy s)",
                    "class": "HasAutoscalingPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "autoscaling_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "name": "ComputeRegionAutoscalerResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_autoscalingPolicy",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscaling_policy\" <$> TF.attribute",
                    "name": "_autoscalingPolicy",
                    "method": "autoscalingPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (AutoscalingPolicy s)",
                    "class": "HasAutoscalingPolicy",
                    "validate": true,
                    "optional": false,
                    "original": "autoscaling_policy"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_target",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target\" <$> TF.attribute",
                    "name": "_target",
                    "method": "target",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTarget",
                    "validate": false,
                    "optional": false,
                    "original": "target"
                }
            ],
            "conflicts": [],
            "type": "ComputeRegionAutoscalerResource s",
            "original": "google_compute_region_autoscaler"
        },
        {
            "con": {
                "smart": "computeRegionBackendServiceResource",
                "name": "ComputeRegionBackendServiceResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend\" <$> TF.attribute",
                    "name": "_backend",
                    "method": "backend",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Backend s)]",
                    "class": "HasBackend",
                    "validate": true,
                    "optional": true,
                    "original": "backend"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"connection_draining_timeout_sec\" <$> TF.attribute",
                    "name": "_connectionDrainingTimeoutSec",
                    "method": "connectionDrainingTimeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasConnectionDrainingTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "connection_draining_timeout_sec"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_healthChecks",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_checks\" <$> TF.attribute",
                    "name": "_healthChecks",
                    "method": "healthChecks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthChecks",
                    "validate": false,
                    "optional": false,
                    "original": "health_checks"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeRegionBackendServiceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "_computedProtocol",
                    "method": "computedProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProtocol",
                    "validate": false,
                    "optional": true,
                    "original": "protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"session_affinity\" <$> TF.attribute",
                    "name": "_computedSessionAffinity",
                    "method": "computedSessionAffinity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSessionAffinity",
                    "validate": false,
                    "optional": true,
                    "original": "session_affinity"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout_sec\" <$> TF.attribute",
                    "name": "_computedTimeoutSec",
                    "method": "computedTimeoutSec",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTimeoutSec",
                    "validate": false,
                    "optional": true,
                    "original": "timeout_sec"
                }
            ],
            "parameters": [
                {
                    "default": "_healthChecks",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_checks\" <$> TF.attribute",
                    "name": "_healthChecks",
                    "method": "healthChecks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthChecks",
                    "validate": false,
                    "optional": false,
                    "original": "health_checks"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeRegionBackendServiceResource s",
            "original": "google_compute_region_backend_service"
        },
        {
            "con": {
                "smart": "computeRegionDiskResource",
                "name": "ComputeRegionDiskResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_encryption_key\" <$> TF.attribute",
                    "name": "_diskEncryptionKey",
                    "method": "diskEncryptionKey",
                    "conflicts": [],
                    "type": "TF.Attr s (DiskEncryptionKey s)",
                    "class": "HasDiskEncryptionKey",
                    "validate": true,
                    "optional": true,
                    "original": "disk_encryption_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_replicaZones",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"replica_zones\" <$> TF.attribute",
                    "name": "_replicaZones",
                    "method": "replicaZones",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasReplicaZones",
                    "validate": false,
                    "optional": false,
                    "original": "replica_zones"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"snapshot\" <$> TF.attribute",
                    "name": "_snapshot",
                    "method": "snapshot",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSnapshot",
                    "validate": false,
                    "optional": true,
                    "original": "snapshot"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_snapshot_encryption_key\" <$> TF.attribute",
                    "name": "_sourceSnapshotEncryptionKey",
                    "method": "sourceSnapshotEncryptionKey",
                    "conflicts": [],
                    "type": "TF.Attr s (SourceSnapshotEncryptionKey s)",
                    "class": "HasSourceSnapshotEncryptionKey",
                    "validate": true,
                    "optional": true,
                    "original": "source_snapshot_encryption_key"
                },
                {
                    "default": "TF.value \"pd-standard\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": true,
                    "original": "type"
                }
            ],
            "name": "ComputeRegionDiskResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_attach_timestamp\" <$> TF.attribute",
                    "name": "_computedLastAttachTimestamp",
                    "method": "computedLastAttachTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLastAttachTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "last_attach_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_detach_timestamp\" <$> TF.attribute",
                    "name": "_computedLastDetachTimestamp",
                    "method": "computedLastDetachTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLastDetachTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "last_detach_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_computedSize",
                    "method": "computedSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSize",
                    "validate": false,
                    "optional": true,
                    "original": "size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_snapshot_id\" <$> TF.attribute",
                    "name": "_computedSourceSnapshotId",
                    "method": "computedSourceSnapshotId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceSnapshotId",
                    "validate": false,
                    "optional": false,
                    "original": "source_snapshot_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"users\" <$> TF.attribute",
                    "name": "_computedUsers",
                    "method": "computedUsers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedUsers",
                    "validate": false,
                    "optional": false,
                    "original": "users"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_replicaZones",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"replica_zones\" <$> TF.attribute",
                    "name": "_replicaZones",
                    "method": "replicaZones",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasReplicaZones",
                    "validate": false,
                    "optional": false,
                    "original": "replica_zones"
                }
            ],
            "conflicts": [],
            "type": "ComputeRegionDiskResource s",
            "original": "google_compute_region_disk"
        },
        {
            "con": {
                "smart": "computeRegionInstanceGroupManagerResource",
                "name": "ComputeRegionInstanceGroupManagerResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_healing_policies\" <$> TF.attribute",
                    "name": "_autoHealingPolicies",
                    "method": "autoHealingPolicies",
                    "conflicts": [],
                    "type": "TF.Attr s (AutoHealingPolicies s)",
                    "class": "HasAutoHealingPolicies",
                    "validate": true,
                    "optional": true,
                    "original": "auto_healing_policies"
                },
                {
                    "default": "_baseInstanceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"base_instance_name\" <$> TF.attribute",
                    "name": "_baseInstanceName",
                    "method": "baseInstanceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBaseInstanceName",
                    "validate": false,
                    "optional": false,
                    "original": "base_instance_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_template\" <$> TF.attribute",
                    "name": "_instanceTemplate",
                    "method": "instanceTemplate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceTemplate",
                    "validate": false,
                    "optional": true,
                    "original": "instance_template"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"named_port\" <$> TF.attribute",
                    "name": "_namedPort",
                    "method": "namedPort",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NamedPort s)]",
                    "class": "HasNamedPort",
                    "validate": true,
                    "optional": true,
                    "original": "named_port"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": false,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rolling_update_policy\" <$> TF.attribute",
                    "name": "_rollingUpdatePolicy",
                    "method": "rollingUpdatePolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (RollingUpdatePolicy s)",
                    "class": "HasRollingUpdatePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "rolling_update_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_pools\" <$> TF.attribute",
                    "name": "_targetPools",
                    "method": "targetPools",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTargetPools",
                    "validate": false,
                    "optional": true,
                    "original": "target_pools"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_strategy\" <$> TF.attribute",
                    "name": "_updateStrategy",
                    "method": "updateStrategy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUpdateStrategy",
                    "validate": false,
                    "optional": true,
                    "original": "update_strategy"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"wait_for_instances\" <$> TF.attribute",
                    "name": "_waitForInstances",
                    "method": "waitForInstances",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasWaitForInstances",
                    "validate": false,
                    "optional": true,
                    "original": "wait_for_instances"
                }
            ],
            "name": "ComputeRegionInstanceGroupManagerResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"distribution_policy_zones\" <$> TF.attribute",
                    "name": "_computedDistributionPolicyZones",
                    "method": "computedDistributionPolicyZones",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedDistributionPolicyZones",
                    "validate": false,
                    "optional": true,
                    "original": "distribution_policy_zones"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_group\" <$> TF.attribute",
                    "name": "_computedInstanceGroup",
                    "method": "computedInstanceGroup",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInstanceGroup",
                    "validate": false,
                    "optional": false,
                    "original": "instance_group"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"target_size\" <$> TF.attribute",
                    "name": "_computedTargetSize",
                    "method": "computedTargetSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTargetSize",
                    "validate": false,
                    "optional": true,
                    "original": "target_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Version s)]",
                    "class": "HasComputedVersion",
                    "validate": true,
                    "optional": true,
                    "original": "version"
                }
            ],
            "parameters": [
                {
                    "default": "_baseInstanceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"base_instance_name\" <$> TF.attribute",
                    "name": "_baseInstanceName",
                    "method": "baseInstanceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBaseInstanceName",
                    "validate": false,
                    "optional": false,
                    "original": "base_instance_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": false,
                    "original": "region"
                }
            ],
            "conflicts": [],
            "type": "ComputeRegionInstanceGroupManagerResource s",
            "original": "google_compute_region_instance_group_manager"
        },
        {
            "con": {
                "smart": "computeRouteResource",
                "name": "ComputeRouteResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_destRange",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dest_range\" <$> TF.attribute",
                    "name": "_destRange",
                    "method": "destRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestRange",
                    "validate": false,
                    "optional": false,
                    "original": "dest_range"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop_gateway\" <$> TF.attribute",
                    "name": "_nextHopGateway",
                    "method": "nextHopGateway",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHopGateway",
                    "validate": false,
                    "optional": true,
                    "original": "next_hop_gateway"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop_instance\" <$> TF.attribute",
                    "name": "_nextHopInstance",
                    "method": "nextHopInstance",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHopInstance",
                    "validate": false,
                    "optional": true,
                    "original": "next_hop_instance"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop_instance_zone\" <$> TF.attribute",
                    "name": "_nextHopInstanceZone",
                    "method": "nextHopInstanceZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHopInstanceZone",
                    "validate": false,
                    "optional": true,
                    "original": "next_hop_instance_zone"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop_ip\" <$> TF.attribute",
                    "name": "_nextHopIp",
                    "method": "nextHopIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHopIp",
                    "validate": false,
                    "optional": true,
                    "original": "next_hop_ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop_vpn_tunnel\" <$> TF.attribute",
                    "name": "_nextHopVpnTunnel",
                    "method": "nextHopVpnTunnel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHopVpnTunnel",
                    "validate": false,
                    "optional": true,
                    "original": "next_hop_vpn_tunnel"
                },
                {
                    "default": "TF.value 1000",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": true,
                    "original": "priority"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "_tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasTags",
                    "validate": false,
                    "optional": true,
                    "original": "tags"
                }
            ],
            "name": "ComputeRouteResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"next_hop_network\" <$> TF.attribute",
                    "name": "_computedNextHopNetwork",
                    "method": "computedNextHopNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNextHopNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "next_hop_network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_destRange",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dest_range\" <$> TF.attribute",
                    "name": "_destRange",
                    "method": "destRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestRange",
                    "validate": false,
                    "optional": false,
                    "original": "dest_range"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "conflicts": [],
            "type": "ComputeRouteResource s",
            "original": "google_compute_route"
        },
        {
            "con": {
                "smart": "computeRouterResource",
                "name": "ComputeRouterResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bgp\" <$> TF.attribute",
                    "name": "_bgp",
                    "method": "bgp",
                    "conflicts": [],
                    "type": "TF.Attr s (Bgp s)",
                    "class": "HasBgp",
                    "validate": true,
                    "optional": true,
                    "original": "bgp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "name": "ComputeRouterResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "conflicts": [],
            "type": "ComputeRouterResource s",
            "original": "google_compute_router"
        },
        {
            "con": {
                "smart": "computeRouterInterfaceResource",
                "name": "ComputeRouterInterfaceResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_range\" <$> TF.attribute",
                    "name": "_ipRange",
                    "method": "ipRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpRange",
                    "validate": false,
                    "optional": true,
                    "original": "ip_range"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_router",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router\" <$> TF.attribute",
                    "name": "_router",
                    "method": "router",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouter",
                    "validate": false,
                    "optional": false,
                    "original": "router"
                },
                {
                    "default": "_vpnTunnel",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vpn_tunnel\" <$> TF.attribute",
                    "name": "_vpnTunnel",
                    "method": "vpnTunnel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVpnTunnel",
                    "validate": false,
                    "optional": false,
                    "original": "vpn_tunnel"
                }
            ],
            "name": "ComputeRouterInterfaceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_router",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router\" <$> TF.attribute",
                    "name": "_router",
                    "method": "router",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouter",
                    "validate": false,
                    "optional": false,
                    "original": "router"
                },
                {
                    "default": "_vpnTunnel",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vpn_tunnel\" <$> TF.attribute",
                    "name": "_vpnTunnel",
                    "method": "vpnTunnel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVpnTunnel",
                    "validate": false,
                    "optional": false,
                    "original": "vpn_tunnel"
                }
            ],
            "conflicts": [],
            "type": "ComputeRouterInterfaceResource s",
            "original": "google_compute_router_interface"
        },
        {
            "con": {
                "smart": "computeRouterPeerResource",
                "name": "ComputeRouterPeerResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"advertised_route_priority\" <$> TF.attribute",
                    "name": "_advertisedRoutePriority",
                    "method": "advertisedRoutePriority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasAdvertisedRoutePriority",
                    "validate": false,
                    "optional": true,
                    "original": "advertised_route_priority"
                },
                {
                    "default": "_interface",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"interface\" <$> TF.attribute",
                    "name": "_interface",
                    "method": "interface",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInterface",
                    "validate": false,
                    "optional": false,
                    "original": "interface"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_peerAsn",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"peer_asn\" <$> TF.attribute",
                    "name": "_peerAsn",
                    "method": "peerAsn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeerAsn",
                    "validate": false,
                    "optional": false,
                    "original": "peer_asn"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"peer_ip_address\" <$> TF.attribute",
                    "name": "_peerIpAddress",
                    "method": "peerIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerIpAddress",
                    "validate": false,
                    "optional": true,
                    "original": "peer_ip_address"
                },
                {
                    "default": "_router",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router\" <$> TF.attribute",
                    "name": "_router",
                    "method": "router",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouter",
                    "validate": false,
                    "optional": false,
                    "original": "router"
                }
            ],
            "name": "ComputeRouterPeerResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "_computedIpAddress",
                    "method": "computedIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpAddress",
                    "validate": false,
                    "optional": false,
                    "original": "ip_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "parameters": [
                {
                    "default": "_interface",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"interface\" <$> TF.attribute",
                    "name": "_interface",
                    "method": "interface",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInterface",
                    "validate": false,
                    "optional": false,
                    "original": "interface"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_peerAsn",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"peer_asn\" <$> TF.attribute",
                    "name": "_peerAsn",
                    "method": "peerAsn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeerAsn",
                    "validate": false,
                    "optional": false,
                    "original": "peer_asn"
                },
                {
                    "default": "_router",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router\" <$> TF.attribute",
                    "name": "_router",
                    "method": "router",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouter",
                    "validate": false,
                    "optional": false,
                    "original": "router"
                }
            ],
            "conflicts": [],
            "type": "ComputeRouterPeerResource s",
            "original": "google_compute_router_peer"
        },
        {
            "con": {
                "smart": "computeSecurityPolicyResource",
                "name": "ComputeSecurityPolicyResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "ComputeSecurityPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "_computedRule",
                    "method": "computedRule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Rule s)]",
                    "class": "HasComputedRule",
                    "validate": true,
                    "optional": true,
                    "original": "rule"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeSecurityPolicyResource s",
            "original": "google_compute_security_policy"
        },
        {
            "con": {
                "smart": "computeSharedVpcHostProjectResource",
                "name": "ComputeSharedVpcHostProjectResource'"
            },
            "arguments": [
                {
                    "default": "_project",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": false,
                    "original": "project"
                }
            ],
            "name": "ComputeSharedVpcHostProjectResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_project",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": false,
                    "original": "project"
                }
            ],
            "conflicts": [],
            "type": "ComputeSharedVpcHostProjectResource s",
            "original": "google_compute_shared_vpc_host_project"
        },
        {
            "con": {
                "smart": "computeSharedVpcServiceProjectResource",
                "name": "ComputeSharedVpcServiceProjectResource'"
            },
            "arguments": [
                {
                    "default": "_hostProject",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host_project\" <$> TF.attribute",
                    "name": "_hostProject",
                    "method": "hostProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostProject",
                    "validate": false,
                    "optional": false,
                    "original": "host_project"
                },
                {
                    "default": "_serviceProject",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_project\" <$> TF.attribute",
                    "name": "_serviceProject",
                    "method": "serviceProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceProject",
                    "validate": false,
                    "optional": false,
                    "original": "service_project"
                }
            ],
            "name": "ComputeSharedVpcServiceProjectResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_hostProject",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host_project\" <$> TF.attribute",
                    "name": "_hostProject",
                    "method": "hostProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostProject",
                    "validate": false,
                    "optional": false,
                    "original": "host_project"
                },
                {
                    "default": "_serviceProject",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_project\" <$> TF.attribute",
                    "name": "_serviceProject",
                    "method": "serviceProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceProject",
                    "validate": false,
                    "optional": false,
                    "original": "service_project"
                }
            ],
            "conflicts": [],
            "type": "ComputeSharedVpcServiceProjectResource s",
            "original": "google_compute_shared_vpc_service_project"
        },
        {
            "con": {
                "smart": "computeSnapshotResource",
                "name": "ComputeSnapshotResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"snapshot_encryption_key_raw\" <$> TF.attribute",
                    "name": "_snapshotEncryptionKeyRaw",
                    "method": "snapshotEncryptionKeyRaw",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSnapshotEncryptionKeyRaw",
                    "validate": false,
                    "optional": true,
                    "original": "snapshot_encryption_key_raw"
                },
                {
                    "default": "_sourceDisk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_disk\" <$> TF.attribute",
                    "name": "_sourceDisk",
                    "method": "sourceDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceDisk",
                    "validate": false,
                    "optional": false,
                    "original": "source_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_disk_encryption_key_raw\" <$> TF.attribute",
                    "name": "_sourceDiskEncryptionKeyRaw",
                    "method": "sourceDiskEncryptionKeyRaw",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceDiskEncryptionKeyRaw",
                    "validate": false,
                    "optional": true,
                    "original": "source_disk_encryption_key_raw"
                }
            ],
            "name": "ComputeSnapshotResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"snapshot_encryption_key_sha256\" <$> TF.attribute",
                    "name": "_computedSnapshotEncryptionKeySha256",
                    "method": "computedSnapshotEncryptionKeySha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSnapshotEncryptionKeySha256",
                    "validate": false,
                    "optional": false,
                    "original": "snapshot_encryption_key_sha256"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_disk_encryption_key_sha256\" <$> TF.attribute",
                    "name": "_computedSourceDiskEncryptionKeySha256",
                    "method": "computedSourceDiskEncryptionKeySha256",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceDiskEncryptionKeySha256",
                    "validate": false,
                    "optional": false,
                    "original": "source_disk_encryption_key_sha256"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_disk_link\" <$> TF.attribute",
                    "name": "_computedSourceDiskLink",
                    "method": "computedSourceDiskLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSourceDiskLink",
                    "validate": false,
                    "optional": false,
                    "original": "source_disk_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_sourceDisk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_disk\" <$> TF.attribute",
                    "name": "_sourceDisk",
                    "method": "sourceDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceDisk",
                    "validate": false,
                    "optional": false,
                    "original": "source_disk"
                }
            ],
            "conflicts": [],
            "type": "ComputeSnapshotResource s",
            "original": "google_compute_snapshot"
        },
        {
            "con": {
                "smart": "computeSslCertificateResource",
                "name": "ComputeSslCertificateResource'"
            },
            "arguments": [
                {
                    "default": "_certificate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"certificate\" <$> TF.attribute",
                    "name": "_certificate",
                    "method": "certificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificate",
                    "validate": false,
                    "optional": false,
                    "original": "certificate"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_privateKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"private_key\" <$> TF.attribute",
                    "name": "_privateKey",
                    "method": "privateKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPrivateKey",
                    "validate": false,
                    "optional": false,
                    "original": "private_key"
                }
            ],
            "name": "ComputeSslCertificateResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"certificate_id\" <$> TF.attribute",
                    "name": "_computedCertificateId",
                    "method": "computedCertificateId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCertificateId",
                    "validate": false,
                    "optional": false,
                    "original": "certificate_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [
                        "_namePrefix"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name_prefix\" <$> TF.attribute",
                    "name": "_computedNamePrefix",
                    "method": "computedNamePrefix",
                    "conflicts": [
                        "_name"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNamePrefix",
                    "validate": false,
                    "optional": true,
                    "original": "name_prefix"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_certificate",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"certificate\" <$> TF.attribute",
                    "name": "_certificate",
                    "method": "certificate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCertificate",
                    "validate": false,
                    "optional": false,
                    "original": "certificate"
                },
                {
                    "default": "_privateKey",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"private_key\" <$> TF.attribute",
                    "name": "_privateKey",
                    "method": "privateKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPrivateKey",
                    "validate": false,
                    "optional": false,
                    "original": "private_key"
                }
            ],
            "conflicts": [],
            "type": "ComputeSslCertificateResource s",
            "original": "google_compute_ssl_certificate"
        },
        {
            "con": {
                "smart": "computeSslPolicyResource",
                "name": "ComputeSslPolicyResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"custom_features\" <$> TF.attribute",
                    "name": "_customFeatures",
                    "method": "customFeatures",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasCustomFeatures",
                    "validate": false,
                    "optional": true,
                    "original": "custom_features"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value \"TLS_1_0\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "_minTlsVersion",
                    "method": "minTlsVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinTlsVersion",
                    "validate": false,
                    "optional": true,
                    "original": "min_tls_version"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"COMPATIBLE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"profile\" <$> TF.attribute",
                    "name": "_profile",
                    "method": "profile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProfile",
                    "validate": false,
                    "optional": true,
                    "original": "profile"
                }
            ],
            "name": "ComputeSslPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled_features\" <$> TF.attribute",
                    "name": "_computedEnabledFeatures",
                    "method": "computedEnabledFeatures",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedEnabledFeatures",
                    "validate": false,
                    "optional": false,
                    "original": "enabled_features"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeSslPolicyResource s",
            "original": "google_compute_ssl_policy"
        },
        {
            "con": {
                "smart": "computeSubnetworkResource",
                "name": "ComputeSubnetworkResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_flow_logs\" <$> TF.attribute",
                    "name": "_enableFlowLogs",
                    "method": "enableFlowLogs",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableFlowLogs",
                    "validate": false,
                    "optional": true,
                    "original": "enable_flow_logs"
                },
                {
                    "default": "_ipCidrRange",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_cidr_range\" <$> TF.attribute",
                    "name": "_ipCidrRange",
                    "method": "ipCidrRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpCidrRange",
                    "validate": false,
                    "optional": false,
                    "original": "ip_cidr_range"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_ip_google_access\" <$> TF.attribute",
                    "name": "_privateIpGoogleAccess",
                    "method": "privateIpGoogleAccess",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPrivateIpGoogleAccess",
                    "validate": false,
                    "optional": true,
                    "original": "private_ip_google_access"
                }
            ],
            "name": "ComputeSubnetworkResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway_address\" <$> TF.attribute",
                    "name": "_computedGatewayAddress",
                    "method": "computedGatewayAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGatewayAddress",
                    "validate": false,
                    "optional": false,
                    "original": "gateway_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"secondary_ip_range\" <$> TF.attribute",
                    "name": "_computedSecondaryIpRange",
                    "method": "computedSecondaryIpRange",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (SecondaryIpRange s)]",
                    "class": "HasComputedSecondaryIpRange",
                    "validate": true,
                    "optional": true,
                    "original": "secondary_ip_range"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_ipCidrRange",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_cidr_range\" <$> TF.attribute",
                    "name": "_ipCidrRange",
                    "method": "ipCidrRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpCidrRange",
                    "validate": false,
                    "optional": false,
                    "original": "ip_cidr_range"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "conflicts": [],
            "type": "ComputeSubnetworkResource s",
            "original": "google_compute_subnetwork"
        },
        {
            "con": {
                "smart": "computeSubnetworkIamBindingResource",
                "name": "ComputeSubnetworkIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subnetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_subnetwork",
                    "method": "subnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                }
            ],
            "name": "ComputeSubnetworkIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "parameters": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subnetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_subnetwork",
                    "method": "subnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                }
            ],
            "conflicts": [],
            "type": "ComputeSubnetworkIamBindingResource s",
            "original": "google_compute_subnetwork_iam_binding"
        },
        {
            "con": {
                "smart": "computeSubnetworkIamMemberResource",
                "name": "ComputeSubnetworkIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subnetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_subnetwork",
                    "method": "subnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                }
            ],
            "name": "ComputeSubnetworkIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "parameters": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subnetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_subnetwork",
                    "method": "subnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                }
            ],
            "conflicts": [],
            "type": "ComputeSubnetworkIamMemberResource s",
            "original": "google_compute_subnetwork_iam_member"
        },
        {
            "con": {
                "smart": "computeSubnetworkIamPolicyResource",
                "name": "ComputeSubnetworkIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_subnetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_subnetwork",
                    "method": "subnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                }
            ],
            "name": "ComputeSubnetworkIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "parameters": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_subnetwork",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_subnetwork",
                    "method": "subnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetwork",
                    "validate": false,
                    "optional": false,
                    "original": "subnetwork"
                }
            ],
            "conflicts": [],
            "type": "ComputeSubnetworkIamPolicyResource s",
            "original": "google_compute_subnetwork_iam_policy"
        },
        {
            "con": {
                "smart": "computeTargetHttpProxyResource",
                "name": "ComputeTargetHttpProxyResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_urlMap",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_map\" <$> TF.attribute",
                    "name": "_urlMap",
                    "method": "urlMap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrlMap",
                    "validate": false,
                    "optional": false,
                    "original": "url_map"
                }
            ],
            "name": "ComputeTargetHttpProxyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_id\" <$> TF.attribute",
                    "name": "_computedProxyId",
                    "method": "computedProxyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedProxyId",
                    "validate": false,
                    "optional": false,
                    "original": "proxy_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_urlMap",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_map\" <$> TF.attribute",
                    "name": "_urlMap",
                    "method": "urlMap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrlMap",
                    "validate": false,
                    "optional": false,
                    "original": "url_map"
                }
            ],
            "conflicts": [],
            "type": "ComputeTargetHttpProxyResource s",
            "original": "google_compute_target_http_proxy"
        },
        {
            "con": {
                "smart": "computeTargetHttpsProxyResource",
                "name": "ComputeTargetHttpsProxyResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"quic_override\" <$> TF.attribute",
                    "name": "_quicOverride",
                    "method": "quicOverride",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasQuicOverride",
                    "validate": false,
                    "optional": true,
                    "original": "quic_override"
                },
                {
                    "default": "_sslCertificates",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_certificates\" <$> TF.attribute",
                    "name": "_sslCertificates",
                    "method": "sslCertificates",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSslCertificates",
                    "validate": false,
                    "optional": false,
                    "original": "ssl_certificates"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_policy\" <$> TF.attribute",
                    "name": "_sslPolicy",
                    "method": "sslPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslPolicy",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_policy"
                },
                {
                    "default": "_urlMap",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_map\" <$> TF.attribute",
                    "name": "_urlMap",
                    "method": "urlMap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrlMap",
                    "validate": false,
                    "optional": false,
                    "original": "url_map"
                }
            ],
            "name": "ComputeTargetHttpsProxyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_id\" <$> TF.attribute",
                    "name": "_computedProxyId",
                    "method": "computedProxyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedProxyId",
                    "validate": false,
                    "optional": false,
                    "original": "proxy_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_sslCertificates",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_certificates\" <$> TF.attribute",
                    "name": "_sslCertificates",
                    "method": "sslCertificates",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSslCertificates",
                    "validate": false,
                    "optional": false,
                    "original": "ssl_certificates"
                },
                {
                    "default": "_urlMap",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_map\" <$> TF.attribute",
                    "name": "_urlMap",
                    "method": "urlMap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrlMap",
                    "validate": false,
                    "optional": false,
                    "original": "url_map"
                }
            ],
            "conflicts": [],
            "type": "ComputeTargetHttpsProxyResource s",
            "original": "google_compute_target_https_proxy"
        },
        {
            "con": {
                "smart": "computeTargetPoolResource",
                "name": "ComputeTargetPoolResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backup_pool\" <$> TF.attribute",
                    "name": "_backupPool",
                    "method": "backupPool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBackupPool",
                    "validate": false,
                    "optional": true,
                    "original": "backup_pool"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"failover_ratio\" <$> TF.attribute",
                    "name": "_failoverRatio",
                    "method": "failoverRatio",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasFailoverRatio",
                    "validate": false,
                    "optional": true,
                    "original": "failover_ratio"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"health_checks\" <$> TF.attribute",
                    "name": "_healthChecks",
                    "method": "healthChecks",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthChecks",
                    "validate": false,
                    "optional": true,
                    "original": "health_checks"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"session_affinity\" <$> TF.attribute",
                    "name": "_sessionAffinity",
                    "method": "sessionAffinity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSessionAffinity",
                    "validate": false,
                    "optional": true,
                    "original": "session_affinity"
                }
            ],
            "name": "ComputeTargetPoolResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instances\" <$> TF.attribute",
                    "name": "_computedInstances",
                    "method": "computedInstances",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstances",
                    "validate": false,
                    "optional": true,
                    "original": "instances"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeTargetPoolResource s",
            "original": "google_compute_target_pool"
        },
        {
            "con": {
                "smart": "computeTargetSslProxyResource",
                "name": "ComputeTargetSslProxyResource'"
            },
            "arguments": [
                {
                    "default": "_backendService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend_service\" <$> TF.attribute",
                    "name": "_backendService",
                    "method": "backendService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBackendService",
                    "validate": false,
                    "optional": false,
                    "original": "backend_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_header\" <$> TF.attribute",
                    "name": "_proxyHeader",
                    "method": "proxyHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProxyHeader",
                    "validate": false,
                    "optional": true,
                    "original": "proxy_header"
                },
                {
                    "default": "_sslCertificates",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_certificates\" <$> TF.attribute",
                    "name": "_sslCertificates",
                    "method": "sslCertificates",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCertificates",
                    "validate": false,
                    "optional": false,
                    "original": "ssl_certificates"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_policy\" <$> TF.attribute",
                    "name": "_sslPolicy",
                    "method": "sslPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslPolicy",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_policy"
                }
            ],
            "name": "ComputeTargetSslProxyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_id\" <$> TF.attribute",
                    "name": "_computedProxyId",
                    "method": "computedProxyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedProxyId",
                    "validate": false,
                    "optional": false,
                    "original": "proxy_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_backendService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend_service\" <$> TF.attribute",
                    "name": "_backendService",
                    "method": "backendService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBackendService",
                    "validate": false,
                    "optional": false,
                    "original": "backend_service"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_sslCertificates",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_certificates\" <$> TF.attribute",
                    "name": "_sslCertificates",
                    "method": "sslCertificates",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCertificates",
                    "validate": false,
                    "optional": false,
                    "original": "ssl_certificates"
                }
            ],
            "conflicts": [],
            "type": "ComputeTargetSslProxyResource s",
            "original": "google_compute_target_ssl_proxy"
        },
        {
            "con": {
                "smart": "computeTargetTcpProxyResource",
                "name": "ComputeTargetTcpProxyResource'"
            },
            "arguments": [
                {
                    "default": "_backendService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend_service\" <$> TF.attribute",
                    "name": "_backendService",
                    "method": "backendService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBackendService",
                    "validate": false,
                    "optional": false,
                    "original": "backend_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"NONE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_header\" <$> TF.attribute",
                    "name": "_proxyHeader",
                    "method": "proxyHeader",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProxyHeader",
                    "validate": false,
                    "optional": true,
                    "original": "proxy_header"
                }
            ],
            "name": "ComputeTargetTcpProxyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"proxy_id\" <$> TF.attribute",
                    "name": "_computedProxyId",
                    "method": "computedProxyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedProxyId",
                    "validate": false,
                    "optional": false,
                    "original": "proxy_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_backendService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend_service\" <$> TF.attribute",
                    "name": "_backendService",
                    "method": "backendService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBackendService",
                    "validate": false,
                    "optional": false,
                    "original": "backend_service"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeTargetTcpProxyResource s",
            "original": "google_compute_target_tcp_proxy"
        },
        {
            "con": {
                "smart": "computeUrlMapResource",
                "name": "ComputeUrlMapResource'"
            },
            "arguments": [
                {
                    "default": "_defaultService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_service\" <$> TF.attribute",
                    "name": "_defaultService",
                    "method": "defaultService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultService",
                    "validate": false,
                    "optional": false,
                    "original": "default_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host_rule\" <$> TF.attribute",
                    "name": "_hostRule",
                    "method": "hostRule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (HostRule s)]",
                    "class": "HasHostRule",
                    "validate": true,
                    "optional": true,
                    "original": "host_rule"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path_matcher\" <$> TF.attribute",
                    "name": "_pathMatcher",
                    "method": "pathMatcher",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PathMatcher s)]",
                    "class": "HasPathMatcher",
                    "validate": true,
                    "optional": true,
                    "original": "path_matcher"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"test\" <$> TF.attribute",
                    "name": "_test",
                    "method": "test",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Test s)]",
                    "class": "HasTest",
                    "validate": true,
                    "optional": true,
                    "original": "test"
                }
            ],
            "name": "ComputeUrlMapResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "_computedFingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"map_id\" <$> TF.attribute",
                    "name": "_computedMapId",
                    "method": "computedMapId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMapId",
                    "validate": false,
                    "optional": false,
                    "original": "map_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_defaultService",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_service\" <$> TF.attribute",
                    "name": "_defaultService",
                    "method": "defaultService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultService",
                    "validate": false,
                    "optional": false,
                    "original": "default_service"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ComputeUrlMapResource s",
            "original": "google_compute_url_map"
        },
        {
            "con": {
                "smart": "computeVpnGatewayResource",
                "name": "ComputeVpnGatewayResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "name": "ComputeVpnGatewayResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_network",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": false,
                    "original": "network"
                }
            ],
            "conflicts": [],
            "type": "ComputeVpnGatewayResource s",
            "original": "google_compute_vpn_gateway"
        },
        {
            "con": {
                "smart": "computeVpnTunnelResource",
                "name": "ComputeVpnTunnelResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ike_version\" <$> TF.attribute",
                    "name": "_ikeVersion",
                    "method": "ikeVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasIkeVersion",
                    "validate": false,
                    "optional": true,
                    "original": "ike_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_peerIp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"peer_ip\" <$> TF.attribute",
                    "name": "_peerIp",
                    "method": "peerIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerIp",
                    "validate": false,
                    "optional": false,
                    "original": "peer_ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router\" <$> TF.attribute",
                    "name": "_router",
                    "method": "router",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouter",
                    "validate": false,
                    "optional": true,
                    "original": "router"
                },
                {
                    "default": "_sharedSecret",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"shared_secret\" <$> TF.attribute",
                    "name": "_sharedSecret",
                    "method": "sharedSecret",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSharedSecret",
                    "validate": false,
                    "optional": false,
                    "original": "shared_secret"
                },
                {
                    "default": "_targetVpnGateway",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"target_vpn_gateway\" <$> TF.attribute",
                    "name": "_targetVpnGateway",
                    "method": "targetVpnGateway",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetVpnGateway",
                    "validate": false,
                    "optional": false,
                    "original": "target_vpn_gateway"
                }
            ],
            "name": "ComputeVpnTunnelResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"creation_timestamp\" <$> TF.attribute",
                    "name": "_computedCreationTimestamp",
                    "method": "computedCreationTimestamp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreationTimestamp",
                    "validate": false,
                    "optional": false,
                    "original": "creation_timestamp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"detailed_status\" <$> TF.attribute",
                    "name": "_computedDetailedStatus",
                    "method": "computedDetailedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDetailedStatus",
                    "validate": false,
                    "optional": false,
                    "original": "detailed_status"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"label_fingerprint\" <$> TF.attribute",
                    "name": "_computedLabelFingerprint",
                    "method": "computedLabelFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLabelFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "label_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"local_traffic_selector\" <$> TF.attribute",
                    "name": "_computedLocalTrafficSelector",
                    "method": "computedLocalTrafficSelector",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedLocalTrafficSelector",
                    "validate": false,
                    "optional": true,
                    "original": "local_traffic_selector"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"remote_traffic_selector\" <$> TF.attribute",
                    "name": "_computedRemoteTrafficSelector",
                    "method": "computedRemoteTrafficSelector",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedRemoteTrafficSelector",
                    "validate": false,
                    "optional": true,
                    "original": "remote_traffic_selector"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"shared_secret_hash\" <$> TF.attribute",
                    "name": "_computedSharedSecretHash",
                    "method": "computedSharedSecretHash",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSharedSecretHash",
                    "validate": false,
                    "optional": false,
                    "original": "shared_secret_hash"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_peerIp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"peer_ip\" <$> TF.attribute",
                    "name": "_peerIp",
                    "method": "peerIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerIp",
                    "validate": false,
                    "optional": false,
                    "original": "peer_ip"
                },
                {
                    "default": "_sharedSecret",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"shared_secret\" <$> TF.attribute",
                    "name": "_sharedSecret",
                    "method": "sharedSecret",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSharedSecret",
                    "validate": false,
                    "optional": false,
                    "original": "shared_secret"
                },
                {
                    "default": "_targetVpnGateway",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"target_vpn_gateway\" <$> TF.attribute",
                    "name": "_targetVpnGateway",
                    "method": "targetVpnGateway",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetVpnGateway",
                    "validate": false,
                    "optional": false,
                    "original": "target_vpn_gateway"
                }
            ],
            "conflicts": [],
            "type": "ComputeVpnTunnelResource s",
            "original": "google_compute_vpn_tunnel"
        },
        {
            "con": {
                "smart": "containerClusterResource",
                "name": "ContainerClusterResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"enable_kubernetes_alpha\" <$> TF.attribute",
                    "name": "_enableKubernetesAlpha",
                    "method": "enableKubernetesAlpha",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableKubernetesAlpha",
                    "validate": false,
                    "optional": true,
                    "original": "enable_kubernetes_alpha"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_legacy_abac\" <$> TF.attribute",
                    "name": "_enableLegacyAbac",
                    "method": "enableLegacyAbac",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableLegacyAbac",
                    "validate": false,
                    "optional": true,
                    "original": "enable_legacy_abac"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"initial_node_count\" <$> TF.attribute",
                    "name": "_initialNodeCount",
                    "method": "initialNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasInitialNodeCount",
                    "validate": false,
                    "optional": true,
                    "original": "initial_node_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_allocation_policy\" <$> TF.attribute",
                    "name": "_ipAllocationPolicy",
                    "method": "ipAllocationPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (IpAllocationPolicy s)",
                    "class": "HasIpAllocationPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "ip_allocation_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"maintenance_policy\" <$> TF.attribute",
                    "name": "_maintenancePolicy",
                    "method": "maintenancePolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (MaintenancePolicy s)",
                    "class": "HasMaintenancePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "maintenance_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_authorized_networks_config\" <$> TF.attribute",
                    "name": "_masterAuthorizedNetworksConfig",
                    "method": "masterAuthorizedNetworksConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (MasterAuthorizedNetworksConfig s)",
                    "class": "HasMasterAuthorizedNetworksConfig",
                    "validate": true,
                    "optional": true,
                    "original": "master_authorized_networks_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"master_ipv4_cidr_block\" <$> TF.attribute",
                    "name": "_masterIpv4CidrBlock",
                    "method": "masterIpv4CidrBlock",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMasterIpv4CidrBlock",
                    "validate": false,
                    "optional": true,
                    "original": "master_ipv4_cidr_block"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_master_version\" <$> TF.attribute",
                    "name": "_minMasterVersion",
                    "method": "minMasterVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinMasterVersion",
                    "validate": false,
                    "optional": true,
                    "original": "min_master_version"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"default\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "_network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetwork",
                    "validate": false,
                    "optional": true,
                    "original": "network"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pod_security_policy_config\" <$> TF.attribute",
                    "name": "_podSecurityPolicyConfig",
                    "method": "podSecurityPolicyConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (PodSecurityPolicyConfig s)",
                    "class": "HasPodSecurityPolicyConfig",
                    "validate": true,
                    "optional": true,
                    "original": "pod_security_policy_config"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"private_cluster\" <$> TF.attribute",
                    "name": "_privateCluster",
                    "method": "privateCluster",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasPrivateCluster",
                    "validate": false,
                    "optional": true,
                    "original": "private_cluster"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"remove_default_node_pool\" <$> TF.attribute",
                    "name": "_removeDefaultNodePool",
                    "method": "removeDefaultNodePool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasRemoveDefaultNodePool",
                    "validate": false,
                    "optional": true,
                    "original": "remove_default_node_pool"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"resource_labels\" <$> TF.attribute",
                    "name": "_resourceLabels",
                    "method": "resourceLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasResourceLabels",
                    "validate": false,
                    "optional": true,
                    "original": "resource_labels"
                }
            ],
            "name": "ContainerClusterResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"additional_zones\" <$> TF.attribute",
                    "name": "_computedAdditionalZones",
                    "method": "computedAdditionalZones",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedAdditionalZones",
                    "validate": false,
                    "optional": true,
                    "original": "additional_zones"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"addons_config\" <$> TF.attribute",
                    "name": "_computedAddonsConfig",
                    "method": "computedAddonsConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (AddonsConfig s)",
                    "class": "HasComputedAddonsConfig",
                    "validate": true,
                    "optional": true,
                    "original": "addons_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cluster_ipv4_cidr\" <$> TF.attribute",
                    "name": "_computedClusterIpv4Cidr",
                    "method": "computedClusterIpv4Cidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedClusterIpv4Cidr",
                    "validate": false,
                    "optional": true,
                    "original": "cluster_ipv4_cidr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"endpoint\" <$> TF.attribute",
                    "name": "_computedEndpoint",
                    "method": "computedEndpoint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEndpoint",
                    "validate": false,
                    "optional": false,
                    "original": "endpoint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_group_urls\" <$> TF.attribute",
                    "name": "_computedInstanceGroupUrls",
                    "method": "computedInstanceGroupUrls",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstanceGroupUrls",
                    "validate": false,
                    "optional": false,
                    "original": "instance_group_urls"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging_service\" <$> TF.attribute",
                    "name": "_computedLoggingService",
                    "method": "computedLoggingService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLoggingService",
                    "validate": false,
                    "optional": true,
                    "original": "logging_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"master_auth\" <$> TF.attribute",
                    "name": "_computedMasterAuth",
                    "method": "computedMasterAuth",
                    "conflicts": [],
                    "type": "TF.Attr s (MasterAuth s)",
                    "class": "HasComputedMasterAuth",
                    "validate": true,
                    "optional": true,
                    "original": "master_auth"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"master_version\" <$> TF.attribute",
                    "name": "_computedMasterVersion",
                    "method": "computedMasterVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMasterVersion",
                    "validate": false,
                    "optional": false,
                    "original": "master_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"monitoring_service\" <$> TF.attribute",
                    "name": "_computedMonitoringService",
                    "method": "computedMonitoringService",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMonitoringService",
                    "validate": false,
                    "optional": true,
                    "original": "monitoring_service"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_policy\" <$> TF.attribute",
                    "name": "_computedNetworkPolicy",
                    "method": "computedNetworkPolicy",
                    "conflicts": [],
                    "type": "TF.Attr s (NetworkPolicy s)",
                    "class": "HasComputedNetworkPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "network_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"node_config\" <$> TF.attribute",
                    "name": "_computedNodeConfig",
                    "method": "computedNodeConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (NodeConfig s)",
                    "class": "HasComputedNodeConfig",
                    "validate": true,
                    "optional": true,
                    "original": "node_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"node_pool\" <$> TF.attribute",
                    "name": "_computedNodePool",
                    "method": "computedNodePool",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (NodePool s)]",
                    "class": "HasComputedNodePool",
                    "validate": true,
                    "optional": true,
                    "original": "node_pool"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_version\" <$> TF.attribute",
                    "name": "_computedNodeVersion",
                    "method": "computedNodeVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNodeVersion",
                    "validate": false,
                    "optional": true,
                    "original": "node_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [
                        "_zone"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetwork\" <$> TF.attribute",
                    "name": "_computedSubnetwork",
                    "method": "computedSubnetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetwork",
                    "validate": false,
                    "optional": true,
                    "original": "subnetwork"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [
                        "_region"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ContainerClusterResource s",
            "original": "google_container_cluster"
        },
        {
            "con": {
                "smart": "containerNodePoolResource",
                "name": "ContainerNodePoolResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"autoscaling\" <$> TF.attribute",
                    "name": "_autoscaling",
                    "method": "autoscaling",
                    "conflicts": [],
                    "type": "TF.Attr s (Autoscaling s)",
                    "class": "HasAutoscaling",
                    "validate": true,
                    "optional": true,
                    "original": "autoscaling"
                },
                {
                    "default": "_cluster",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cluster\" <$> TF.attribute",
                    "name": "_cluster",
                    "method": "cluster",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCluster",
                    "validate": false,
                    "optional": false,
                    "original": "cluster"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "name": "ContainerNodePoolResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"initial_node_count\" <$> TF.attribute",
                    "name": "_computedInitialNodeCount",
                    "method": "computedInitialNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedInitialNodeCount",
                    "validate": false,
                    "optional": true,
                    "original": "initial_node_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_group_urls\" <$> TF.attribute",
                    "name": "_computedInstanceGroupUrls",
                    "method": "computedInstanceGroupUrls",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedInstanceGroupUrls",
                    "validate": false,
                    "optional": false,
                    "original": "instance_group_urls"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"management\" <$> TF.attribute",
                    "name": "_computedManagement",
                    "method": "computedManagement",
                    "conflicts": [],
                    "type": "TF.Attr s (Management s)",
                    "class": "HasComputedManagement",
                    "validate": true,
                    "optional": true,
                    "original": "management"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"node_config\" <$> TF.attribute",
                    "name": "_computedNodeConfig",
                    "method": "computedNodeConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (NodeConfig s)",
                    "class": "HasComputedNodeConfig",
                    "validate": true,
                    "optional": true,
                    "original": "node_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"node_count\" <$> TF.attribute",
                    "name": "_computedNodeCount",
                    "method": "computedNodeCount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedNodeCount",
                    "validate": false,
                    "optional": true,
                    "original": "node_count"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": true,
                    "original": "version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_computedZone",
                    "method": "computedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "parameters": [
                {
                    "default": "_cluster",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cluster\" <$> TF.attribute",
                    "name": "_cluster",
                    "method": "cluster",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCluster",
                    "validate": false,
                    "optional": false,
                    "original": "cluster"
                }
            ],
            "conflicts": [],
            "type": "ContainerNodePoolResource s",
            "original": "google_container_node_pool"
        },
        {
            "con": {
                "smart": "dataflowJobResource",
                "name": "DataflowJobResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"max_workers\" <$> TF.attribute",
                    "name": "_maxWorkers",
                    "method": "maxWorkers",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxWorkers",
                    "validate": false,
                    "optional": true,
                    "original": "max_workers"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"drain\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"on_delete\" <$> TF.attribute",
                    "name": "_onDelete",
                    "method": "onDelete",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOnDelete",
                    "validate": false,
                    "optional": true,
                    "original": "on_delete"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"parameters\" <$> TF.attribute",
                    "name": "_parameters",
                    "method": "parameters",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasParameters",
                    "validate": false,
                    "optional": true,
                    "original": "parameters"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "_tempGcsLocation",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"temp_gcs_location\" <$> TF.attribute",
                    "name": "_tempGcsLocation",
                    "method": "tempGcsLocation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTempGcsLocation",
                    "validate": false,
                    "optional": false,
                    "original": "temp_gcs_location"
                },
                {
                    "default": "_templateGcsPath",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"template_gcs_path\" <$> TF.attribute",
                    "name": "_templateGcsPath",
                    "method": "templateGcsPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTemplateGcsPath",
                    "validate": false,
                    "optional": false,
                    "original": "template_gcs_path"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone\" <$> TF.attribute",
                    "name": "_zone",
                    "method": "zone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZone",
                    "validate": false,
                    "optional": true,
                    "original": "zone"
                }
            ],
            "name": "DataflowJobResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_computedState",
                    "method": "computedState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedState",
                    "validate": false,
                    "optional": false,
                    "original": "state"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_tempGcsLocation",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"temp_gcs_location\" <$> TF.attribute",
                    "name": "_tempGcsLocation",
                    "method": "tempGcsLocation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTempGcsLocation",
                    "validate": false,
                    "optional": false,
                    "original": "temp_gcs_location"
                },
                {
                    "default": "_templateGcsPath",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"template_gcs_path\" <$> TF.attribute",
                    "name": "_templateGcsPath",
                    "method": "templateGcsPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTemplateGcsPath",
                    "validate": false,
                    "optional": false,
                    "original": "template_gcs_path"
                }
            ],
            "conflicts": [],
            "type": "DataflowJobResource s",
            "original": "google_dataflow_job"
        },
        {
            "con": {
                "smart": "dataprocClusterResource",
                "name": "DataprocClusterResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value \"global\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                }
            ],
            "name": "DataprocClusterResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cluster_config\" <$> TF.attribute",
                    "name": "_computedClusterConfig",
                    "method": "computedClusterConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (ClusterConfig s)",
                    "class": "HasComputedClusterConfig",
                    "validate": true,
                    "optional": true,
                    "original": "cluster_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_computedLabels",
                    "method": "computedLabels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "DataprocClusterResource s",
            "original": "google_dataproc_cluster"
        },
        {
            "con": {
                "smart": "dataprocJobResource",
                "name": "DataprocJobResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_delete\" <$> TF.attribute",
                    "name": "_forceDelete",
                    "method": "forceDelete",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceDelete",
                    "validate": false,
                    "optional": true,
                    "original": "force_delete"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"hadoop_config\" <$> TF.attribute",
                    "name": "_hadoopConfig",
                    "method": "hadoopConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (HadoopConfig s)",
                    "class": "HasHadoopConfig",
                    "validate": true,
                    "optional": true,
                    "original": "hadoop_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"hive_config\" <$> TF.attribute",
                    "name": "_hiveConfig",
                    "method": "hiveConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (HiveConfig s)",
                    "class": "HasHiveConfig",
                    "validate": true,
                    "optional": true,
                    "original": "hive_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. The labels to associate with this job."
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pig_config\" <$> TF.attribute",
                    "name": "_pigConfig",
                    "method": "pigConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (PigConfig s)",
                    "class": "HasPigConfig",
                    "validate": true,
                    "optional": true,
                    "original": "pig_config"
                },
                {
                    "default": "_placement",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"placement\" <$> TF.attribute",
                    "name": "_placement",
                    "method": "placement",
                    "conflicts": [],
                    "type": "TF.Attr s (Placement s)",
                    "class": "HasPlacement",
                    "validate": true,
                    "optional": false,
                    "original": "placement"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pyspark_config\" <$> TF.attribute",
                    "name": "_pysparkConfig",
                    "method": "pysparkConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (PysparkConfig s)",
                    "class": "HasPysparkConfig",
                    "validate": true,
                    "optional": true,
                    "original": "pyspark_config"
                },
                {
                    "default": "TF.value \"global\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional. Job scheduling configuration."
                    ],
                    "forceNew": true,
                    "encoder": "TF.assign \"scheduling\" <$> TF.attribute",
                    "name": "_scheduling",
                    "method": "scheduling",
                    "conflicts": [],
                    "type": "TF.Attr s (Scheduling s)",
                    "class": "HasScheduling",
                    "validate": true,
                    "optional": true,
                    "original": "scheduling"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"spark_config\" <$> TF.attribute",
                    "name": "_sparkConfig",
                    "method": "sparkConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        }
                    ],
                    "type": "TF.Attr s (SparkConfig s)",
                    "class": "HasSparkConfig",
                    "validate": true,
                    "optional": true,
                    "original": "spark_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"sparksql_config\" <$> TF.attribute",
                    "name": "_sparksqlConfig",
                    "method": "sparksqlConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (SparksqlConfig s)",
                    "class": "HasSparksqlConfig",
                    "validate": true,
                    "optional": true,
                    "original": "sparksql_config"
                }
            ],
            "name": "DataprocJobResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Output-only. If present, the location of miscellaneous control files which",
                        "may be used as part of job setup and handling. If not present, control files",
                        "may be placed in the same location as driver_output_uri."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"driver_controls_files_uri\" <$> TF.attribute",
                    "name": "_computedDriverControlsFilesUri",
                    "method": "computedDriverControlsFilesUri",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDriverControlsFilesUri",
                    "validate": false,
                    "optional": false,
                    "original": "driver_controls_files_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Output-only. A URI pointing to the location of the stdout of the job's",
                        "driver program"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"driver_output_resource_uri\" <$> TF.attribute",
                    "name": "_computedDriverOutputResourceUri",
                    "method": "computedDriverOutputResourceUri",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDriverOutputResourceUri",
                    "validate": false,
                    "optional": false,
                    "original": "driver_output_resource_uri"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"reference\" <$> TF.attribute",
                    "name": "_computedReference",
                    "method": "computedReference",
                    "conflicts": [],
                    "type": "TF.Attr s (Reference s)",
                    "class": "HasComputedReference",
                    "validate": true,
                    "optional": true,
                    "original": "reference"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_computedStatus",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s (Status s)",
                    "class": "HasComputedStatus",
                    "validate": true,
                    "optional": false,
                    "original": "status"
                }
            ],
            "parameters": [
                {
                    "default": "_placement",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"placement\" <$> TF.attribute",
                    "name": "_placement",
                    "method": "placement",
                    "conflicts": [],
                    "type": "TF.Attr s (Placement s)",
                    "class": "HasPlacement",
                    "validate": true,
                    "optional": false,
                    "original": "placement"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"hadoop_config\" <$> TF.attribute",
                    "name": "_hadoopConfig",
                    "method": "hadoopConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (HadoopConfig s)",
                    "class": "HasHadoopConfig",
                    "validate": true,
                    "optional": true,
                    "original": "hadoop_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"hive_config\" <$> TF.attribute",
                    "name": "_hiveConfig",
                    "method": "hiveConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (HiveConfig s)",
                    "class": "HasHiveConfig",
                    "validate": true,
                    "optional": true,
                    "original": "hive_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pig_config\" <$> TF.attribute",
                    "name": "_pigConfig",
                    "method": "pigConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (PigConfig s)",
                    "class": "HasPigConfig",
                    "validate": true,
                    "optional": true,
                    "original": "pig_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pyspark_config\" <$> TF.attribute",
                    "name": "_pysparkConfig",
                    "method": "pysparkConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (PysparkConfig s)",
                    "class": "HasPysparkConfig",
                    "validate": true,
                    "optional": true,
                    "original": "pyspark_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"spark_config\" <$> TF.attribute",
                    "name": "_sparkConfig",
                    "method": "sparkConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparksqlConfig",
                            "method": "sparksqlConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        }
                    ],
                    "type": "TF.Attr s (SparkConfig s)",
                    "class": "HasSparkConfig",
                    "validate": true,
                    "optional": true,
                    "original": "spark_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"sparksql_config\" <$> TF.attribute",
                    "name": "_sparksqlConfig",
                    "method": "sparksqlConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_hadoopConfig",
                            "method": "hadoopConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_hiveConfig",
                            "method": "hiveConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pysparkConfig",
                            "method": "pysparkConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_pigConfig",
                            "method": "pigConfig"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_sparkConfig",
                            "method": "sparkConfig"
                        }
                    ],
                    "type": "TF.Attr s (SparksqlConfig s)",
                    "class": "HasSparksqlConfig",
                    "validate": true,
                    "optional": true,
                    "original": "sparksql_config"
                }
            ],
            "type": "DataprocJobResource s",
            "original": "google_dataproc_job"
        },
        {
            "con": {
                "smart": "dnsManagedZoneResource",
                "name": "DnsManagedZoneResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"Managed by Terraform\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_dnsName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dns_name\" <$> TF.attribute",
                    "name": "_dnsName",
                    "method": "dnsName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDnsName",
                    "validate": false,
                    "optional": false,
                    "original": "dns_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "DnsManagedZoneResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name_servers\" <$> TF.attribute",
                    "name": "_computedNameServers",
                    "method": "computedNameServers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedNameServers",
                    "validate": false,
                    "optional": false,
                    "original": "name_servers"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_dnsName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"dns_name\" <$> TF.attribute",
                    "name": "_dnsName",
                    "method": "dnsName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDnsName",
                    "validate": false,
                    "optional": false,
                    "original": "dns_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "DnsManagedZoneResource s",
            "original": "google_dns_managed_zone"
        },
        {
            "con": {
                "smart": "dnsRecordSetResource",
                "name": "DnsRecordSetResource'"
            },
            "arguments": [
                {
                    "default": "_managedZone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"managed_zone\" <$> TF.attribute",
                    "name": "_managedZone",
                    "method": "managedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasManagedZone",
                    "validate": false,
                    "optional": false,
                    "original": "managed_zone"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_rrdatas",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rrdatas\" <$> TF.attribute",
                    "name": "_rrdatas",
                    "method": "rrdatas",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasRrdatas",
                    "validate": false,
                    "optional": false,
                    "original": "rrdatas"
                },
                {
                    "default": "_ttl",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "_ttl",
                    "method": "ttl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTtl",
                    "validate": false,
                    "optional": false,
                    "original": "ttl"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "name": "DnsRecordSetResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_managedZone",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"managed_zone\" <$> TF.attribute",
                    "name": "_managedZone",
                    "method": "managedZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasManagedZone",
                    "validate": false,
                    "optional": false,
                    "original": "managed_zone"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_rrdatas",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rrdatas\" <$> TF.attribute",
                    "name": "_rrdatas",
                    "method": "rrdatas",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasRrdatas",
                    "validate": false,
                    "optional": false,
                    "original": "rrdatas"
                },
                {
                    "default": "_ttl",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "_ttl",
                    "method": "ttl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTtl",
                    "validate": false,
                    "optional": false,
                    "original": "ttl"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "DnsRecordSetResource s",
            "original": "google_dns_record_set"
        },
        {
            "con": {
                "smart": "endpointsServiceResource",
                "name": "EndpointsServiceResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"grpc_config\" <$> TF.attribute",
                    "name": "_grpcConfig",
                    "method": "grpcConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_openapiConfig",
                            "method": "openapiConfig"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGrpcConfig",
                    "validate": false,
                    "optional": true,
                    "original": "grpc_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"openapi_config\" <$> TF.attribute",
                    "name": "_openapiConfig",
                    "method": "openapiConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_protocOutputBase64",
                            "method": "protocOutputBase64"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_grpcConfig",
                            "method": "grpcConfig"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOpenapiConfig",
                    "validate": false,
                    "optional": true,
                    "original": "openapi_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protoc_output_base64\" <$> TF.attribute",
                    "name": "_protocOutputBase64",
                    "method": "protocOutputBase64",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_openapiConfig",
                            "method": "openapiConfig"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocOutputBase64",
                    "validate": false,
                    "optional": true,
                    "original": "protoc_output_base64"
                },
                {
                    "default": "_serviceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_name\" <$> TF.attribute",
                    "name": "_serviceName",
                    "method": "serviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceName",
                    "validate": false,
                    "optional": false,
                    "original": "service_name"
                }
            ],
            "name": "EndpointsServiceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"apis\" <$> TF.attribute",
                    "name": "_computedApis",
                    "method": "computedApis",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Apis s)]",
                    "class": "HasComputedApis",
                    "validate": true,
                    "optional": false,
                    "original": "apis"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"config_id\" <$> TF.attribute",
                    "name": "_computedConfigId",
                    "method": "computedConfigId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedConfigId",
                    "validate": false,
                    "optional": false,
                    "original": "config_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns_address\" <$> TF.attribute",
                    "name": "_computedDnsAddress",
                    "method": "computedDnsAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDnsAddress",
                    "validate": false,
                    "optional": false,
                    "original": "dns_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"endpoints\" <$> TF.attribute",
                    "name": "_computedEndpoints",
                    "method": "computedEndpoints",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Endpoints s)]",
                    "class": "HasComputedEndpoints",
                    "validate": true,
                    "optional": false,
                    "original": "endpoints"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_serviceName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_name\" <$> TF.attribute",
                    "name": "_serviceName",
                    "method": "serviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceName",
                    "validate": false,
                    "optional": false,
                    "original": "service_name"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"grpc_config\" <$> TF.attribute",
                    "name": "_grpcConfig",
                    "method": "grpcConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_openapiConfig",
                            "method": "openapiConfig"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGrpcConfig",
                    "validate": false,
                    "optional": true,
                    "original": "grpc_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"openapi_config\" <$> TF.attribute",
                    "name": "_openapiConfig",
                    "method": "openapiConfig",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_protocOutputBase64",
                            "method": "protocOutputBase64"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_grpcConfig",
                            "method": "grpcConfig"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOpenapiConfig",
                    "validate": false,
                    "optional": true,
                    "original": "openapi_config"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protoc_output_base64\" <$> TF.attribute",
                    "name": "_protocOutputBase64",
                    "method": "protocOutputBase64",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_openapiConfig",
                            "method": "openapiConfig"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocOutputBase64",
                    "validate": false,
                    "optional": true,
                    "original": "protoc_output_base64"
                }
            ],
            "type": "EndpointsServiceResource s",
            "original": "google_endpoints_service"
        },
        {
            "con": {
                "smart": "folderResource",
                "name": "FolderResource'"
            },
            "arguments": [
                {
                    "default": "_displayName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                }
            ],
            "name": "FolderResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"create_time\" <$> TF.attribute",
                    "name": "_computedCreateTime",
                    "method": "computedCreateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreateTime",
                    "validate": false,
                    "optional": false,
                    "original": "create_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lifecycle_state\" <$> TF.attribute",
                    "name": "_computedLifecycleState",
                    "method": "computedLifecycleState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLifecycleState",
                    "validate": false,
                    "optional": false,
                    "original": "lifecycle_state"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [
                {
                    "default": "_displayName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                }
            ],
            "conflicts": [],
            "type": "FolderResource s",
            "original": "google_folder"
        },
        {
            "con": {
                "smart": "folderIamBindingResource",
                "name": "FolderIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "FolderIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "FolderIamBindingResource s",
            "original": "google_folder_iam_binding"
        },
        {
            "con": {
                "smart": "folderIamMemberResource",
                "name": "FolderIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "FolderIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "FolderIamMemberResource s",
            "original": "google_folder_iam_member"
        },
        {
            "con": {
                "smart": "folderIamPolicyResource",
                "name": "FolderIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "name": "FolderIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "conflicts": [],
            "type": "FolderIamPolicyResource s",
            "original": "google_folder_iam_policy"
        },
        {
            "con": {
                "smart": "folderOrganizationPolicyResource",
                "name": "FolderOrganizationPolicyResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"boolean_policy\" <$> TF.attribute",
                    "name": "_booleanPolicy",
                    "method": "booleanPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        }
                    ],
                    "type": "TF.Attr s (BooleanPolicy s)",
                    "class": "HasBooleanPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "boolean_policy"
                },
                {
                    "default": "_constraint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"constraint\" <$> TF.attribute",
                    "name": "_constraint",
                    "method": "constraint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConstraint",
                    "validate": false,
                    "optional": false,
                    "original": "constraint"
                },
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"list_policy\" <$> TF.attribute",
                    "name": "_listPolicy",
                    "method": "listPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (ListPolicy s)",
                    "class": "HasListPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "list_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restore_policy\" <$> TF.attribute",
                    "name": "_restorePolicy",
                    "method": "restorePolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (RestorePolicy s)",
                    "class": "HasRestorePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "restore_policy"
                }
            ],
            "name": "FolderOrganizationPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_time\" <$> TF.attribute",
                    "name": "_computedUpdateTime",
                    "method": "computedUpdateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdateTime",
                    "validate": false,
                    "optional": false,
                    "original": "update_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": true,
                    "original": "version"
                }
            ],
            "parameters": [
                {
                    "default": "_constraint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"constraint\" <$> TF.attribute",
                    "name": "_constraint",
                    "method": "constraint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConstraint",
                    "validate": false,
                    "optional": false,
                    "original": "constraint"
                },
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"boolean_policy\" <$> TF.attribute",
                    "name": "_booleanPolicy",
                    "method": "booleanPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        }
                    ],
                    "type": "TF.Attr s (BooleanPolicy s)",
                    "class": "HasBooleanPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "boolean_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"list_policy\" <$> TF.attribute",
                    "name": "_listPolicy",
                    "method": "listPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (ListPolicy s)",
                    "class": "HasListPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "list_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restore_policy\" <$> TF.attribute",
                    "name": "_restorePolicy",
                    "method": "restorePolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (RestorePolicy s)",
                    "class": "HasRestorePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "restore_policy"
                }
            ],
            "type": "FolderOrganizationPolicyResource s",
            "original": "google_folder_organization_policy"
        },
        {
            "con": {
                "smart": "kmsCryptoKeyResource",
                "name": "KmsCryptoKeyResource'"
            },
            "arguments": [
                {
                    "default": "_keyRing",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring\" <$> TF.attribute",
                    "name": "_keyRing",
                    "method": "keyRing",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRing",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rotation_period\" <$> TF.attribute",
                    "name": "_rotationPeriod",
                    "method": "rotationPeriod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRotationPeriod",
                    "validate": false,
                    "optional": true,
                    "original": "rotation_period"
                }
            ],
            "name": "KmsCryptoKeyResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_keyRing",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring\" <$> TF.attribute",
                    "name": "_keyRing",
                    "method": "keyRing",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRing",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "KmsCryptoKeyResource s",
            "original": "google_kms_crypto_key"
        },
        {
            "con": {
                "smart": "kmsCryptoKeyIamBindingResource",
                "name": "KmsCryptoKeyIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_cryptoKeyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"crypto_key_id\" <$> TF.attribute",
                    "name": "_cryptoKeyId",
                    "method": "cryptoKeyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCryptoKeyId",
                    "validate": false,
                    "optional": false,
                    "original": "crypto_key_id"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "KmsCryptoKeyIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_cryptoKeyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"crypto_key_id\" <$> TF.attribute",
                    "name": "_cryptoKeyId",
                    "method": "cryptoKeyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCryptoKeyId",
                    "validate": false,
                    "optional": false,
                    "original": "crypto_key_id"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "KmsCryptoKeyIamBindingResource s",
            "original": "google_kms_crypto_key_iam_binding"
        },
        {
            "con": {
                "smart": "kmsCryptoKeyIamMemberResource",
                "name": "KmsCryptoKeyIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_cryptoKeyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"crypto_key_id\" <$> TF.attribute",
                    "name": "_cryptoKeyId",
                    "method": "cryptoKeyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCryptoKeyId",
                    "validate": false,
                    "optional": false,
                    "original": "crypto_key_id"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "KmsCryptoKeyIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_cryptoKeyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"crypto_key_id\" <$> TF.attribute",
                    "name": "_cryptoKeyId",
                    "method": "cryptoKeyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCryptoKeyId",
                    "validate": false,
                    "optional": false,
                    "original": "crypto_key_id"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "KmsCryptoKeyIamMemberResource s",
            "original": "google_kms_crypto_key_iam_member"
        },
        {
            "con": {
                "smart": "kmsKeyRingResource",
                "name": "KmsKeyRingResource'"
            },
            "arguments": [
                {
                    "default": "_location",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"location\" <$> TF.attribute",
                    "name": "_location",
                    "method": "location",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLocation",
                    "validate": false,
                    "optional": false,
                    "original": "location"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "KmsKeyRingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_location",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"location\" <$> TF.attribute",
                    "name": "_location",
                    "method": "location",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLocation",
                    "validate": false,
                    "optional": false,
                    "original": "location"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "KmsKeyRingResource s",
            "original": "google_kms_key_ring"
        },
        {
            "con": {
                "smart": "kmsKeyRingIamBindingResource",
                "name": "KmsKeyRingIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_keyRingId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring_id\" <$> TF.attribute",
                    "name": "_keyRingId",
                    "method": "keyRingId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRingId",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring_id"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "KmsKeyRingIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_keyRingId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring_id\" <$> TF.attribute",
                    "name": "_keyRingId",
                    "method": "keyRingId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRingId",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring_id"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "KmsKeyRingIamBindingResource s",
            "original": "google_kms_key_ring_iam_binding"
        },
        {
            "con": {
                "smart": "kmsKeyRingIamMemberResource",
                "name": "KmsKeyRingIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_keyRingId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring_id\" <$> TF.attribute",
                    "name": "_keyRingId",
                    "method": "keyRingId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRingId",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring_id"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "KmsKeyRingIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_keyRingId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring_id\" <$> TF.attribute",
                    "name": "_keyRingId",
                    "method": "keyRingId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRingId",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring_id"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "KmsKeyRingIamMemberResource s",
            "original": "google_kms_key_ring_iam_member"
        },
        {
            "con": {
                "smart": "kmsKeyRingIamPolicyResource",
                "name": "KmsKeyRingIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_keyRingId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring_id\" <$> TF.attribute",
                    "name": "_keyRingId",
                    "method": "keyRingId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRingId",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring_id"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "name": "KmsKeyRingIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_keyRingId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_ring_id\" <$> TF.attribute",
                    "name": "_keyRingId",
                    "method": "keyRingId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyRingId",
                    "validate": false,
                    "optional": false,
                    "original": "key_ring_id"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "conflicts": [],
            "type": "KmsKeyRingIamPolicyResource s",
            "original": "google_kms_key_ring_iam_policy"
        },
        {
            "con": {
                "smart": "loggingBillingAccountExclusionResource",
                "name": "LoggingBillingAccountExclusionResource'"
            },
            "arguments": [
                {
                    "default": "_billingAccount",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"billing_account\" <$> TF.attribute",
                    "name": "_billingAccount",
                    "method": "billingAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBillingAccount",
                    "validate": false,
                    "optional": false,
                    "original": "billing_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_disabled",
                    "method": "disabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisabled",
                    "validate": false,
                    "optional": true,
                    "original": "disabled"
                },
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "LoggingBillingAccountExclusionResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_billingAccount",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"billing_account\" <$> TF.attribute",
                    "name": "_billingAccount",
                    "method": "billingAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBillingAccount",
                    "validate": false,
                    "optional": false,
                    "original": "billing_account"
                },
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "LoggingBillingAccountExclusionResource s",
            "original": "google_logging_billing_account_exclusion"
        },
        {
            "con": {
                "smart": "loggingBillingAccountSinkResource",
                "name": "LoggingBillingAccountSinkResource'"
            },
            "arguments": [
                {
                    "default": "_billingAccount",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"billing_account\" <$> TF.attribute",
                    "name": "_billingAccount",
                    "method": "billingAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBillingAccount",
                    "validate": false,
                    "optional": false,
                    "original": "billing_account"
                },
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": true,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "LoggingBillingAccountSinkResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"writer_identity\" <$> TF.attribute",
                    "name": "_computedWriterIdentity",
                    "method": "computedWriterIdentity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWriterIdentity",
                    "validate": false,
                    "optional": false,
                    "original": "writer_identity"
                }
            ],
            "parameters": [
                {
                    "default": "_billingAccount",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"billing_account\" <$> TF.attribute",
                    "name": "_billingAccount",
                    "method": "billingAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBillingAccount",
                    "validate": false,
                    "optional": false,
                    "original": "billing_account"
                },
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "LoggingBillingAccountSinkResource s",
            "original": "google_logging_billing_account_sink"
        },
        {
            "con": {
                "smart": "loggingFolderExclusionResource",
                "name": "LoggingFolderExclusionResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_disabled",
                    "method": "disabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisabled",
                    "validate": false,
                    "optional": true,
                    "original": "disabled"
                },
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "LoggingFolderExclusionResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "LoggingFolderExclusionResource s",
            "original": "google_logging_folder_exclusion"
        },
        {
            "con": {
                "smart": "loggingFolderSinkResource",
                "name": "LoggingFolderSinkResource'"
            },
            "arguments": [
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": true,
                    "original": "filter"
                },
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"include_children\" <$> TF.attribute",
                    "name": "_includeChildren",
                    "method": "includeChildren",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIncludeChildren",
                    "validate": false,
                    "optional": true,
                    "original": "include_children"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "LoggingFolderSinkResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"writer_identity\" <$> TF.attribute",
                    "name": "_computedWriterIdentity",
                    "method": "computedWriterIdentity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWriterIdentity",
                    "validate": false,
                    "optional": false,
                    "original": "writer_identity"
                }
            ],
            "parameters": [
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "_folder",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"folder\" <$> TF.attribute",
                    "name": "_folder",
                    "method": "folder",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFolder",
                    "validate": false,
                    "optional": false,
                    "original": "folder"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "LoggingFolderSinkResource s",
            "original": "google_logging_folder_sink"
        },
        {
            "con": {
                "smart": "loggingOrganizationExclusionResource",
                "name": "LoggingOrganizationExclusionResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_disabled",
                    "method": "disabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisabled",
                    "validate": false,
                    "optional": true,
                    "original": "disabled"
                },
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                }
            ],
            "name": "LoggingOrganizationExclusionResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                }
            ],
            "conflicts": [],
            "type": "LoggingOrganizationExclusionResource s",
            "original": "google_logging_organization_exclusion"
        },
        {
            "con": {
                "smart": "loggingOrganizationSinkResource",
                "name": "LoggingOrganizationSinkResource'"
            },
            "arguments": [
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": true,
                    "original": "filter"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"include_children\" <$> TF.attribute",
                    "name": "_includeChildren",
                    "method": "includeChildren",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIncludeChildren",
                    "validate": false,
                    "optional": true,
                    "original": "include_children"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                }
            ],
            "name": "LoggingOrganizationSinkResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"writer_identity\" <$> TF.attribute",
                    "name": "_computedWriterIdentity",
                    "method": "computedWriterIdentity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWriterIdentity",
                    "validate": false,
                    "optional": false,
                    "original": "writer_identity"
                }
            ],
            "parameters": [
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                }
            ],
            "conflicts": [],
            "type": "LoggingOrganizationSinkResource s",
            "original": "google_logging_organization_sink"
        },
        {
            "con": {
                "smart": "loggingProjectExclusionResource",
                "name": "LoggingProjectExclusionResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disabled\" <$> TF.attribute",
                    "name": "_disabled",
                    "method": "disabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisabled",
                    "validate": false,
                    "optional": true,
                    "original": "disabled"
                },
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "LoggingProjectExclusionResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_filter",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": false,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "LoggingProjectExclusionResource s",
            "original": "google_logging_project_exclusion"
        },
        {
            "con": {
                "smart": "loggingProjectSinkResource",
                "name": "LoggingProjectSinkResource'"
            },
            "arguments": [
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"filter\" <$> TF.attribute",
                    "name": "_filter",
                    "method": "filter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFilter",
                    "validate": false,
                    "optional": true,
                    "original": "filter"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"unique_writer_identity\" <$> TF.attribute",
                    "name": "_uniqueWriterIdentity",
                    "method": "uniqueWriterIdentity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUniqueWriterIdentity",
                    "validate": false,
                    "optional": true,
                    "original": "unique_writer_identity"
                }
            ],
            "name": "LoggingProjectSinkResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"writer_identity\" <$> TF.attribute",
                    "name": "_computedWriterIdentity",
                    "method": "computedWriterIdentity",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedWriterIdentity",
                    "validate": false,
                    "optional": false,
                    "original": "writer_identity"
                }
            ],
            "parameters": [
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "LoggingProjectSinkResource s",
            "original": "google_logging_project_sink"
        },
        {
            "con": {
                "smart": "organizationIamBindingResource",
                "name": "OrganizationIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "OrganizationIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "OrganizationIamBindingResource s",
            "original": "google_organization_iam_binding"
        },
        {
            "con": {
                "smart": "organizationIamCustomRoleResource",
                "name": "OrganizationIamCustomRoleResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deleted\" <$> TF.attribute",
                    "name": "_deleted",
                    "method": "deleted",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDeleted",
                    "validate": false,
                    "optional": true,
                    "original": "deleted"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_permissions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"permissions\" <$> TF.attribute",
                    "name": "_permissions",
                    "method": "permissions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasPermissions",
                    "validate": false,
                    "optional": false,
                    "original": "permissions"
                },
                {
                    "default": "_roleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role_id\" <$> TF.attribute",
                    "name": "_roleId",
                    "method": "roleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRoleId",
                    "validate": false,
                    "optional": false,
                    "original": "role_id"
                },
                {
                    "default": "TF.value \"GA\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"stage\" <$> TF.attribute",
                    "name": "_stage",
                    "method": "stage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStage",
                    "validate": false,
                    "optional": true,
                    "original": "stage"
                },
                {
                    "default": "_title",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"title\" <$> TF.attribute",
                    "name": "_title",
                    "method": "title",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTitle",
                    "validate": false,
                    "optional": false,
                    "original": "title"
                }
            ],
            "name": "OrganizationIamCustomRoleResource",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_permissions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"permissions\" <$> TF.attribute",
                    "name": "_permissions",
                    "method": "permissions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasPermissions",
                    "validate": false,
                    "optional": false,
                    "original": "permissions"
                },
                {
                    "default": "_roleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role_id\" <$> TF.attribute",
                    "name": "_roleId",
                    "method": "roleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRoleId",
                    "validate": false,
                    "optional": false,
                    "original": "role_id"
                },
                {
                    "default": "_title",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"title\" <$> TF.attribute",
                    "name": "_title",
                    "method": "title",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTitle",
                    "validate": false,
                    "optional": false,
                    "original": "title"
                }
            ],
            "conflicts": [],
            "type": "OrganizationIamCustomRoleResource s",
            "original": "google_organization_iam_custom_role"
        },
        {
            "con": {
                "smart": "organizationIamMemberResource",
                "name": "OrganizationIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "OrganizationIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "OrganizationIamMemberResource s",
            "original": "google_organization_iam_member"
        },
        {
            "con": {
                "smart": "organizationIamPolicyResource",
                "name": "OrganizationIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "name": "OrganizationIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "conflicts": [],
            "type": "OrganizationIamPolicyResource s",
            "original": "google_organization_iam_policy"
        },
        {
            "con": {
                "smart": "organizationPolicyResource",
                "name": "OrganizationPolicyResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"boolean_policy\" <$> TF.attribute",
                    "name": "_booleanPolicy",
                    "method": "booleanPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        }
                    ],
                    "type": "TF.Attr s (BooleanPolicy s)",
                    "class": "HasBooleanPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "boolean_policy"
                },
                {
                    "default": "_constraint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"constraint\" <$> TF.attribute",
                    "name": "_constraint",
                    "method": "constraint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConstraint",
                    "validate": false,
                    "optional": false,
                    "original": "constraint"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"list_policy\" <$> TF.attribute",
                    "name": "_listPolicy",
                    "method": "listPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (ListPolicy s)",
                    "class": "HasListPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "list_policy"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restore_policy\" <$> TF.attribute",
                    "name": "_restorePolicy",
                    "method": "restorePolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (RestorePolicy s)",
                    "class": "HasRestorePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "restore_policy"
                }
            ],
            "name": "OrganizationPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_time\" <$> TF.attribute",
                    "name": "_computedUpdateTime",
                    "method": "computedUpdateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdateTime",
                    "validate": false,
                    "optional": false,
                    "original": "update_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": true,
                    "original": "version"
                }
            ],
            "parameters": [
                {
                    "default": "_constraint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"constraint\" <$> TF.attribute",
                    "name": "_constraint",
                    "method": "constraint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConstraint",
                    "validate": false,
                    "optional": false,
                    "original": "constraint"
                },
                {
                    "default": "_orgId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_orgId",
                    "method": "orgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrgId",
                    "validate": false,
                    "optional": false,
                    "original": "org_id"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"boolean_policy\" <$> TF.attribute",
                    "name": "_booleanPolicy",
                    "method": "booleanPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        }
                    ],
                    "type": "TF.Attr s (BooleanPolicy s)",
                    "class": "HasBooleanPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "boolean_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"list_policy\" <$> TF.attribute",
                    "name": "_listPolicy",
                    "method": "listPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (ListPolicy s)",
                    "class": "HasListPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "list_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restore_policy\" <$> TF.attribute",
                    "name": "_restorePolicy",
                    "method": "restorePolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (RestorePolicy s)",
                    "class": "HasRestorePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "restore_policy"
                }
            ],
            "type": "OrganizationPolicyResource s",
            "original": "google_organization_policy"
        },
        {
            "con": {
                "smart": "projectResource",
                "name": "ProjectResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"app_engine\" <$> TF.attribute",
                    "name": "_appEngine",
                    "method": "appEngine",
                    "conflicts": [],
                    "type": "TF.Attr s (AppEngine s)",
                    "class": "HasAppEngine",
                    "validate": true,
                    "optional": true,
                    "original": "app_engine"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_create_network\" <$> TF.attribute",
                    "name": "_autoCreateNetwork",
                    "method": "autoCreateNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoCreateNetwork",
                    "validate": false,
                    "optional": true,
                    "original": "auto_create_network"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"billing_account\" <$> TF.attribute",
                    "name": "_billingAccount",
                    "method": "billingAccount",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBillingAccount",
                    "validate": false,
                    "optional": true,
                    "original": "billing_account"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_projectId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "_projectId",
                    "method": "projectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "validate": false,
                    "optional": false,
                    "original": "project_id"
                }
            ],
            "name": "ProjectResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"folder_id\" <$> TF.attribute",
                    "name": "_computedFolderId",
                    "method": "computedFolderId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFolderId",
                    "validate": false,
                    "optional": true,
                    "original": "folder_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"number\" <$> TF.attribute",
                    "name": "_computedNumber",
                    "method": "computedNumber",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNumber",
                    "validate": false,
                    "optional": false,
                    "original": "number"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"org_id\" <$> TF.attribute",
                    "name": "_computedOrgId",
                    "method": "computedOrgId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOrgId",
                    "validate": false,
                    "optional": true,
                    "original": "org_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_computedPolicyData",
                    "method": "computedPolicyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolicyData",
                    "validate": false,
                    "optional": true,
                    "original": "policy_data"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_etag\" <$> TF.attribute",
                    "name": "_computedPolicyEtag",
                    "method": "computedPolicyEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPolicyEtag",
                    "validate": false,
                    "optional": false,
                    "original": "policy_etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"skip_delete\" <$> TF.attribute",
                    "name": "_computedSkipDelete",
                    "method": "computedSkipDelete",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedSkipDelete",
                    "validate": false,
                    "optional": true,
                    "original": "skip_delete"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_projectId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "_projectId",
                    "method": "projectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "validate": false,
                    "optional": false,
                    "original": "project_id"
                }
            ],
            "conflicts": [],
            "type": "ProjectResource s",
            "original": "google_project"
        },
        {
            "con": {
                "smart": "projectIamBindingResource",
                "name": "ProjectIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "ProjectIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "ProjectIamBindingResource s",
            "original": "google_project_iam_binding"
        },
        {
            "con": {
                "smart": "projectIamCustomRoleResource",
                "name": "ProjectIamCustomRoleResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"deleted\" <$> TF.attribute",
                    "name": "_deleted",
                    "method": "deleted",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDeleted",
                    "validate": false,
                    "optional": true,
                    "original": "deleted"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_permissions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"permissions\" <$> TF.attribute",
                    "name": "_permissions",
                    "method": "permissions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasPermissions",
                    "validate": false,
                    "optional": false,
                    "original": "permissions"
                },
                {
                    "default": "_roleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role_id\" <$> TF.attribute",
                    "name": "_roleId",
                    "method": "roleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRoleId",
                    "validate": false,
                    "optional": false,
                    "original": "role_id"
                },
                {
                    "default": "TF.value \"GA\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"stage\" <$> TF.attribute",
                    "name": "_stage",
                    "method": "stage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStage",
                    "validate": false,
                    "optional": true,
                    "original": "stage"
                },
                {
                    "default": "_title",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"title\" <$> TF.attribute",
                    "name": "_title",
                    "method": "title",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTitle",
                    "validate": false,
                    "optional": false,
                    "original": "title"
                }
            ],
            "name": "ProjectIamCustomRoleResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_permissions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"permissions\" <$> TF.attribute",
                    "name": "_permissions",
                    "method": "permissions",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasPermissions",
                    "validate": false,
                    "optional": false,
                    "original": "permissions"
                },
                {
                    "default": "_roleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role_id\" <$> TF.attribute",
                    "name": "_roleId",
                    "method": "roleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRoleId",
                    "validate": false,
                    "optional": false,
                    "original": "role_id"
                },
                {
                    "default": "_title",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"title\" <$> TF.attribute",
                    "name": "_title",
                    "method": "title",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTitle",
                    "validate": false,
                    "optional": false,
                    "original": "title"
                }
            ],
            "conflicts": [],
            "type": "ProjectIamCustomRoleResource s",
            "original": "google_project_iam_custom_role"
        },
        {
            "con": {
                "smart": "projectIamMemberResource",
                "name": "ProjectIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "ProjectIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "ProjectIamMemberResource s",
            "original": "google_project_iam_member"
        },
        {
            "con": {
                "smart": "projectIamPolicyResource",
                "name": "ProjectIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "name": "ProjectIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restore_policy\" <$> TF.attribute",
                    "name": "_computedRestorePolicy",
                    "method": "computedRestorePolicy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRestorePolicy",
                    "validate": false,
                    "optional": false,
                    "original": "restore_policy"
                }
            ],
            "parameters": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "conflicts": [],
            "type": "ProjectIamPolicyResource s",
            "original": "google_project_iam_policy"
        },
        {
            "con": {
                "smart": "projectOrganizationPolicyResource",
                "name": "ProjectOrganizationPolicyResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"boolean_policy\" <$> TF.attribute",
                    "name": "_booleanPolicy",
                    "method": "booleanPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        }
                    ],
                    "type": "TF.Attr s (BooleanPolicy s)",
                    "class": "HasBooleanPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "boolean_policy"
                },
                {
                    "default": "_constraint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"constraint\" <$> TF.attribute",
                    "name": "_constraint",
                    "method": "constraint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConstraint",
                    "validate": false,
                    "optional": false,
                    "original": "constraint"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"list_policy\" <$> TF.attribute",
                    "name": "_listPolicy",
                    "method": "listPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (ListPolicy s)",
                    "class": "HasListPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "list_policy"
                },
                {
                    "default": "_project",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": false,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restore_policy\" <$> TF.attribute",
                    "name": "_restorePolicy",
                    "method": "restorePolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (RestorePolicy s)",
                    "class": "HasRestorePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "restore_policy"
                }
            ],
            "name": "ProjectOrganizationPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_time\" <$> TF.attribute",
                    "name": "_computedUpdateTime",
                    "method": "computedUpdateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdateTime",
                    "validate": false,
                    "optional": false,
                    "original": "update_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "_computedVersion",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedVersion",
                    "validate": false,
                    "optional": true,
                    "original": "version"
                }
            ],
            "parameters": [
                {
                    "default": "_constraint",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"constraint\" <$> TF.attribute",
                    "name": "_constraint",
                    "method": "constraint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConstraint",
                    "validate": false,
                    "optional": false,
                    "original": "constraint"
                },
                {
                    "default": "_project",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_project",
                    "method": "project",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProject",
                    "validate": false,
                    "optional": false,
                    "original": "project"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"boolean_policy\" <$> TF.attribute",
                    "name": "_booleanPolicy",
                    "method": "booleanPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        }
                    ],
                    "type": "TF.Attr s (BooleanPolicy s)",
                    "class": "HasBooleanPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "boolean_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"list_policy\" <$> TF.attribute",
                    "name": "_listPolicy",
                    "method": "listPolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_restorePolicy",
                            "method": "restorePolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (ListPolicy s)",
                    "class": "HasListPolicy",
                    "validate": true,
                    "optional": true,
                    "original": "list_policy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"restore_policy\" <$> TF.attribute",
                    "name": "_restorePolicy",
                    "method": "restorePolicy",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_listPolicy",
                            "method": "listPolicy"
                        },
                        {
                            "default": "TF.Nil",
                            "name": "_booleanPolicy",
                            "method": "booleanPolicy"
                        }
                    ],
                    "type": "TF.Attr s (RestorePolicy s)",
                    "class": "HasRestorePolicy",
                    "validate": true,
                    "optional": true,
                    "original": "restore_policy"
                }
            ],
            "type": "ProjectOrganizationPolicyResource s",
            "original": "google_project_organization_policy"
        },
        {
            "con": {
                "smart": "projectServiceResource",
                "name": "ProjectServiceResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_on_destroy\" <$> TF.attribute",
                    "name": "_disableOnDestroy",
                    "method": "disableOnDestroy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableOnDestroy",
                    "validate": false,
                    "optional": true,
                    "original": "disable_on_destroy"
                },
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "name": "ProjectServiceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_service",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service\" <$> TF.attribute",
                    "name": "_service",
                    "method": "service",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasService",
                    "validate": false,
                    "optional": false,
                    "original": "service"
                }
            ],
            "conflicts": [],
            "type": "ProjectServiceResource s",
            "original": "google_project_service"
        },
        {
            "con": {
                "smart": "projectServicesResource",
                "name": "ProjectServicesResource'"
            },
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disable_on_destroy\" <$> TF.attribute",
                    "name": "_disableOnDestroy",
                    "method": "disableOnDestroy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDisableOnDestroy",
                    "validate": false,
                    "optional": true,
                    "original": "disable_on_destroy"
                },
                {
                    "default": "_services",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "_services",
                    "method": "services",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasServices",
                    "validate": false,
                    "optional": false,
                    "original": "services"
                }
            ],
            "name": "ProjectServicesResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_services",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"services\" <$> TF.attribute",
                    "name": "_services",
                    "method": "services",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasServices",
                    "validate": false,
                    "optional": false,
                    "original": "services"
                }
            ],
            "conflicts": [],
            "type": "ProjectServicesResource s",
            "original": "google_project_services"
        },
        {
            "con": {
                "smart": "projectUsageExportBucketResource",
                "name": "ProjectUsageExportBucketResource'"
            },
            "arguments": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"prefix\" <$> TF.attribute",
                    "name": "_prefix",
                    "method": "prefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPrefix",
                    "validate": false,
                    "optional": true,
                    "original": "prefix"
                }
            ],
            "name": "ProjectUsageExportBucketResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                }
            ],
            "conflicts": [],
            "type": "ProjectUsageExportBucketResource s",
            "original": "google_project_usage_export_bucket"
        },
        {
            "con": {
                "smart": "pubsubSubscriptionResource",
                "name": "PubsubSubscriptionResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"push_config\" <$> TF.attribute",
                    "name": "_pushConfig",
                    "method": "pushConfig",
                    "conflicts": [],
                    "type": "TF.Attr s (PushConfig s)",
                    "class": "HasPushConfig",
                    "validate": true,
                    "optional": true,
                    "original": "push_config"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "name": "PubsubSubscriptionResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ack_deadline_seconds\" <$> TF.attribute",
                    "name": "_computedAckDeadlineSeconds",
                    "method": "computedAckDeadlineSeconds",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedAckDeadlineSeconds",
                    "validate": false,
                    "optional": true,
                    "original": "ack_deadline_seconds"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_computedPath",
                    "method": "computedPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "conflicts": [],
            "type": "PubsubSubscriptionResource s",
            "original": "google_pubsub_subscription"
        },
        {
            "con": {
                "smart": "pubsubSubscriptionIamBindingResource",
                "name": "PubsubSubscriptionIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subscription",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subscription\" <$> TF.attribute",
                    "name": "_subscription",
                    "method": "subscription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubscription",
                    "validate": false,
                    "optional": false,
                    "original": "subscription"
                }
            ],
            "name": "PubsubSubscriptionIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subscription",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subscription\" <$> TF.attribute",
                    "name": "_subscription",
                    "method": "subscription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubscription",
                    "validate": false,
                    "optional": false,
                    "original": "subscription"
                }
            ],
            "conflicts": [],
            "type": "PubsubSubscriptionIamBindingResource s",
            "original": "google_pubsub_subscription_iam_binding"
        },
        {
            "con": {
                "smart": "pubsubSubscriptionIamMemberResource",
                "name": "PubsubSubscriptionIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subscription",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subscription\" <$> TF.attribute",
                    "name": "_subscription",
                    "method": "subscription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubscription",
                    "validate": false,
                    "optional": false,
                    "original": "subscription"
                }
            ],
            "name": "PubsubSubscriptionIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_subscription",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subscription\" <$> TF.attribute",
                    "name": "_subscription",
                    "method": "subscription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubscription",
                    "validate": false,
                    "optional": false,
                    "original": "subscription"
                }
            ],
            "conflicts": [],
            "type": "PubsubSubscriptionIamMemberResource s",
            "original": "google_pubsub_subscription_iam_member"
        },
        {
            "con": {
                "smart": "pubsubSubscriptionIamPolicyResource",
                "name": "PubsubSubscriptionIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_subscription",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subscription\" <$> TF.attribute",
                    "name": "_subscription",
                    "method": "subscription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubscription",
                    "validate": false,
                    "optional": false,
                    "original": "subscription"
                }
            ],
            "name": "PubsubSubscriptionIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_subscription",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subscription\" <$> TF.attribute",
                    "name": "_subscription",
                    "method": "subscription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubscription",
                    "validate": false,
                    "optional": false,
                    "original": "subscription"
                }
            ],
            "conflicts": [],
            "type": "PubsubSubscriptionIamPolicyResource s",
            "original": "google_pubsub_subscription_iam_policy"
        },
        {
            "con": {
                "smart": "pubsubTopicResource",
                "name": "PubsubTopicResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "PubsubTopicResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "PubsubTopicResource s",
            "original": "google_pubsub_topic"
        },
        {
            "con": {
                "smart": "pubsubTopicIamBindingResource",
                "name": "PubsubTopicIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "name": "PubsubTopicIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "conflicts": [],
            "type": "PubsubTopicIamBindingResource s",
            "original": "google_pubsub_topic_iam_binding"
        },
        {
            "con": {
                "smart": "pubsubTopicIamMemberResource",
                "name": "PubsubTopicIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "name": "PubsubTopicIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "conflicts": [],
            "type": "PubsubTopicIamMemberResource s",
            "original": "google_pubsub_topic_iam_member"
        },
        {
            "con": {
                "smart": "pubsubTopicIamPolicyResource",
                "name": "PubsubTopicIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "name": "PubsubTopicIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "conflicts": [],
            "type": "PubsubTopicIamPolicyResource s",
            "original": "google_pubsub_topic_iam_policy"
        },
        {
            "con": {
                "smart": "redisInstanceResource",
                "name": "RedisInstanceResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": true,
                    "original": "display_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "_memorySizeGb",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"memory_size_gb\" <$> TF.attribute",
                    "name": "_memorySizeGb",
                    "method": "memorySizeGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMemorySizeGb",
                    "validate": false,
                    "optional": false,
                    "original": "memory_size_gb"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"redis_configs\" <$> TF.attribute",
                    "name": "_redisConfigs",
                    "method": "redisConfigs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasRedisConfigs",
                    "validate": false,
                    "optional": true,
                    "original": "redis_configs"
                },
                {
                    "default": "TF.value \"BASIC\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tier\" <$> TF.attribute",
                    "name": "_tier",
                    "method": "tier",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTier",
                    "validate": false,
                    "optional": true,
                    "original": "tier"
                }
            ],
            "name": "RedisInstanceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"alternative_location_id\" <$> TF.attribute",
                    "name": "_computedAlternativeLocationId",
                    "method": "computedAlternativeLocationId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAlternativeLocationId",
                    "validate": false,
                    "optional": true,
                    "original": "alternative_location_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"authorized_network\" <$> TF.attribute",
                    "name": "_computedAuthorizedNetwork",
                    "method": "computedAuthorizedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAuthorizedNetwork",
                    "validate": false,
                    "optional": true,
                    "original": "authorized_network"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"create_time\" <$> TF.attribute",
                    "name": "_computedCreateTime",
                    "method": "computedCreateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreateTime",
                    "validate": false,
                    "optional": false,
                    "original": "create_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"current_location_id\" <$> TF.attribute",
                    "name": "_computedCurrentLocationId",
                    "method": "computedCurrentLocationId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCurrentLocationId",
                    "validate": false,
                    "optional": false,
                    "original": "current_location_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_computedHost",
                    "method": "computedHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHost",
                    "validate": false,
                    "optional": false,
                    "original": "host"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"location_id\" <$> TF.attribute",
                    "name": "_computedLocationId",
                    "method": "computedLocationId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLocationId",
                    "validate": false,
                    "optional": true,
                    "original": "location_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_computedPort",
                    "method": "computedPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPort",
                    "validate": false,
                    "optional": false,
                    "original": "port"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"redis_version\" <$> TF.attribute",
                    "name": "_computedRedisVersion",
                    "method": "computedRedisVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRedisVersion",
                    "validate": false,
                    "optional": true,
                    "original": "redis_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_computedRegion",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"reserved_ip_range\" <$> TF.attribute",
                    "name": "_computedReservedIpRange",
                    "method": "computedReservedIpRange",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedReservedIpRange",
                    "validate": false,
                    "optional": true,
                    "original": "reserved_ip_range"
                }
            ],
            "parameters": [
                {
                    "default": "_memorySizeGb",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"memory_size_gb\" <$> TF.attribute",
                    "name": "_memorySizeGb",
                    "method": "memorySizeGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMemorySizeGb",
                    "validate": false,
                    "optional": false,
                    "original": "memory_size_gb"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "RedisInstanceResource s",
            "original": "google_redis_instance"
        },
        {
            "con": {
                "smart": "resourceManagerLienResource",
                "name": "ResourceManagerLienResource'"
            },
            "arguments": [
                {
                    "default": "_origin",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"origin\" <$> TF.attribute",
                    "name": "_origin",
                    "method": "origin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrigin",
                    "validate": false,
                    "optional": false,
                    "original": "origin"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                },
                {
                    "default": "_reason",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"reason\" <$> TF.attribute",
                    "name": "_reason",
                    "method": "reason",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasReason",
                    "validate": false,
                    "optional": false,
                    "original": "reason"
                },
                {
                    "default": "_restrictions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"restrictions\" <$> TF.attribute",
                    "name": "_restrictions",
                    "method": "restrictions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasRestrictions",
                    "validate": false,
                    "optional": false,
                    "original": "restrictions"
                }
            ],
            "name": "ResourceManagerLienResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"create_time\" <$> TF.attribute",
                    "name": "_computedCreateTime",
                    "method": "computedCreateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreateTime",
                    "validate": false,
                    "optional": false,
                    "original": "create_time"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "parameters": [
                {
                    "default": "_origin",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"origin\" <$> TF.attribute",
                    "name": "_origin",
                    "method": "origin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOrigin",
                    "validate": false,
                    "optional": false,
                    "original": "origin"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                },
                {
                    "default": "_reason",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"reason\" <$> TF.attribute",
                    "name": "_reason",
                    "method": "reason",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasReason",
                    "validate": false,
                    "optional": false,
                    "original": "reason"
                },
                {
                    "default": "_restrictions",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"restrictions\" <$> TF.attribute",
                    "name": "_restrictions",
                    "method": "restrictions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasRestrictions",
                    "validate": false,
                    "optional": false,
                    "original": "restrictions"
                }
            ],
            "conflicts": [],
            "type": "ResourceManagerLienResource s",
            "original": "google_resource_manager_lien"
        },
        {
            "con": {
                "smart": "runtimeconfigConfigResource",
                "name": "RuntimeconfigConfigResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "_description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "validate": false,
                    "optional": true,
                    "original": "description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "RuntimeconfigConfigResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "RuntimeconfigConfigResource s",
            "original": "google_runtimeconfig_config"
        },
        {
            "con": {
                "smart": "runtimeconfigVariableResource",
                "name": "RuntimeconfigVariableResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"text\" <$> TF.attribute",
                    "name": "_text",
                    "method": "text",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_value",
                            "method": "value"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasText",
                    "validate": false,
                    "optional": true,
                    "original": "text"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_value",
                    "method": "value",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_text",
                            "method": "text"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "validate": false,
                    "optional": true,
                    "original": "value"
                }
            ],
            "name": "RuntimeconfigVariableResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_time\" <$> TF.attribute",
                    "name": "_computedUpdateTime",
                    "method": "computedUpdateTime",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdateTime",
                    "validate": false,
                    "optional": false,
                    "original": "update_time"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_parent",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"parent\" <$> TF.attribute",
                    "name": "_parent",
                    "method": "parent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParent",
                    "validate": false,
                    "optional": false,
                    "original": "parent"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"text\" <$> TF.attribute",
                    "name": "_text",
                    "method": "text",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_value",
                            "method": "value"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasText",
                    "validate": false,
                    "optional": true,
                    "original": "text"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "_value",
                    "method": "value",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_text",
                            "method": "text"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "validate": false,
                    "optional": true,
                    "original": "value"
                }
            ],
            "type": "RuntimeconfigVariableResource s",
            "original": "google_runtimeconfig_variable"
        },
        {
            "con": {
                "smart": "serviceAccountResource",
                "name": "ServiceAccountResource'"
            },
            "arguments": [
                {
                    "default": "_accountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"account_id\" <$> TF.attribute",
                    "name": "_accountId",
                    "method": "accountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "account_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": true,
                    "original": "display_name"
                }
            ],
            "name": "ServiceAccountResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_computedEmail",
                    "method": "computedEmail",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEmail",
                    "validate": false,
                    "optional": false,
                    "original": "email"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unique_id\" <$> TF.attribute",
                    "name": "_computedUniqueId",
                    "method": "computedUniqueId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUniqueId",
                    "validate": false,
                    "optional": false,
                    "original": "unique_id"
                }
            ],
            "parameters": [
                {
                    "default": "_accountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"account_id\" <$> TF.attribute",
                    "name": "_accountId",
                    "method": "accountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "account_id"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccountResource s",
            "original": "google_service_account"
        },
        {
            "con": {
                "smart": "serviceAccountIamBindingResource",
                "name": "ServiceAccountIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "name": "ServiceAccountIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccountIamBindingResource s",
            "original": "google_service_account_iam_binding"
        },
        {
            "con": {
                "smart": "serviceAccountIamMemberResource",
                "name": "ServiceAccountIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "name": "ServiceAccountIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccountIamMemberResource s",
            "original": "google_service_account_iam_member"
        },
        {
            "con": {
                "smart": "serviceAccountIamPolicyResource",
                "name": "ServiceAccountIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "name": "ServiceAccountIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccountIamPolicyResource s",
            "original": "google_service_account_iam_policy"
        },
        {
            "con": {
                "smart": "serviceAccountKeyResource",
                "name": "ServiceAccountKeyResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"KEY_ALG_RSA_2048\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_algorithm\" <$> TF.attribute",
                    "name": "_keyAlgorithm",
                    "method": "keyAlgorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyAlgorithm",
                    "validate": false,
                    "optional": true,
                    "original": "key_algorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pgp_key\" <$> TF.attribute",
                    "name": "_pgpKey",
                    "method": "pgpKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPgpKey",
                    "validate": false,
                    "optional": true,
                    "original": "pgp_key"
                },
                {
                    "default": "TF.value \"TYPE_GOOGLE_CREDENTIALS_FILE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"private_key_type\" <$> TF.attribute",
                    "name": "_privateKeyType",
                    "method": "privateKeyType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPrivateKeyType",
                    "validate": false,
                    "optional": true,
                    "original": "private_key_type"
                },
                {
                    "default": "TF.value \"TYPE_X509_PEM_FILE\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"public_key_type\" <$> TF.attribute",
                    "name": "_publicKeyType",
                    "method": "publicKeyType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPublicKeyType",
                    "validate": false,
                    "optional": true,
                    "original": "public_key_type"
                },
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "name": "ServiceAccountKeyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_key\" <$> TF.attribute",
                    "name": "_computedPrivateKey",
                    "method": "computedPrivateKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivateKey",
                    "validate": false,
                    "optional": false,
                    "original": "private_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_key_encrypted\" <$> TF.attribute",
                    "name": "_computedPrivateKeyEncrypted",
                    "method": "computedPrivateKeyEncrypted",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivateKeyEncrypted",
                    "validate": false,
                    "optional": false,
                    "original": "private_key_encrypted"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_key_fingerprint\" <$> TF.attribute",
                    "name": "_computedPrivateKeyFingerprint",
                    "method": "computedPrivateKeyFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivateKeyFingerprint",
                    "validate": false,
                    "optional": false,
                    "original": "private_key_fingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "_computedPublicKey",
                    "method": "computedPublicKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPublicKey",
                    "validate": false,
                    "optional": false,
                    "original": "public_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"valid_after\" <$> TF.attribute",
                    "name": "_computedValidAfter",
                    "method": "computedValidAfter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedValidAfter",
                    "validate": false,
                    "optional": false,
                    "original": "valid_after"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"valid_before\" <$> TF.attribute",
                    "name": "_computedValidBefore",
                    "method": "computedValidBefore",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedValidBefore",
                    "validate": false,
                    "optional": false,
                    "original": "valid_before"
                }
            ],
            "parameters": [
                {
                    "default": "_serviceAccountId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_account_id\" <$> TF.attribute",
                    "name": "_serviceAccountId",
                    "method": "serviceAccountId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceAccountId",
                    "validate": false,
                    "optional": false,
                    "original": "service_account_id"
                }
            ],
            "conflicts": [],
            "type": "ServiceAccountKeyResource s",
            "original": "google_service_account_key"
        },
        {
            "con": {
                "smart": "sourcerepoRepositoryResource",
                "name": "SourcerepoRepositoryResource'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "SourcerepoRepositoryResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "_computedSize",
                    "method": "computedSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSize",
                    "validate": false,
                    "optional": false,
                    "original": "size"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "_computedUrl",
                    "method": "computedUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUrl",
                    "validate": false,
                    "optional": false,
                    "original": "url"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "SourcerepoRepositoryResource s",
            "original": "google_sourcerepo_repository"
        },
        {
            "con": {
                "smart": "spannerDatabaseResource",
                "name": "SpannerDatabaseResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ddl\" <$> TF.attribute",
                    "name": "_ddl",
                    "method": "ddl",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDdl",
                    "validate": false,
                    "optional": true,
                    "original": "ddl"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "SpannerDatabaseResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_computedState",
                    "method": "computedState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedState",
                    "validate": false,
                    "optional": false,
                    "original": "state"
                }
            ],
            "parameters": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "SpannerDatabaseResource s",
            "original": "google_spanner_database"
        },
        {
            "con": {
                "smart": "spannerDatabaseIamBindingResource",
                "name": "SpannerDatabaseIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_database",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database\" <$> TF.attribute",
                    "name": "_database",
                    "method": "database",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatabase",
                    "validate": false,
                    "optional": false,
                    "original": "database"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "SpannerDatabaseIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_database",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database\" <$> TF.attribute",
                    "name": "_database",
                    "method": "database",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatabase",
                    "validate": false,
                    "optional": false,
                    "original": "database"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "SpannerDatabaseIamBindingResource s",
            "original": "google_spanner_database_iam_binding"
        },
        {
            "con": {
                "smart": "spannerDatabaseIamMemberResource",
                "name": "SpannerDatabaseIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_database",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database\" <$> TF.attribute",
                    "name": "_database",
                    "method": "database",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatabase",
                    "validate": false,
                    "optional": false,
                    "original": "database"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "SpannerDatabaseIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_database",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database\" <$> TF.attribute",
                    "name": "_database",
                    "method": "database",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatabase",
                    "validate": false,
                    "optional": false,
                    "original": "database"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "SpannerDatabaseIamMemberResource s",
            "original": "google_spanner_database_iam_member"
        },
        {
            "con": {
                "smart": "spannerDatabaseIamPolicyResource",
                "name": "SpannerDatabaseIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_database",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database\" <$> TF.attribute",
                    "name": "_database",
                    "method": "database",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatabase",
                    "validate": false,
                    "optional": false,
                    "original": "database"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "name": "SpannerDatabaseIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_database",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database\" <$> TF.attribute",
                    "name": "_database",
                    "method": "database",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatabase",
                    "validate": false,
                    "optional": false,
                    "original": "database"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "conflicts": [],
            "type": "SpannerDatabaseIamPolicyResource s",
            "original": "google_spanner_database_iam_policy"
        },
        {
            "con": {
                "smart": "spannerInstanceResource",
                "name": "SpannerInstanceResource'"
            },
            "arguments": [
                {
                    "default": "_config",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"config\" <$> TF.attribute",
                    "name": "_config",
                    "method": "config",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConfig",
                    "validate": false,
                    "optional": false,
                    "original": "config"
                },
                {
                    "default": "_displayName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"num_nodes\" <$> TF.attribute",
                    "name": "_numNodes",
                    "method": "numNodes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasNumNodes",
                    "validate": false,
                    "optional": true,
                    "original": "num_nodes"
                }
            ],
            "name": "SpannerInstanceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"state\" <$> TF.attribute",
                    "name": "_computedState",
                    "method": "computedState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedState",
                    "validate": false,
                    "optional": false,
                    "original": "state"
                }
            ],
            "parameters": [
                {
                    "default": "_config",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"config\" <$> TF.attribute",
                    "name": "_config",
                    "method": "config",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConfig",
                    "validate": false,
                    "optional": false,
                    "original": "config"
                },
                {
                    "default": "_displayName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"display_name\" <$> TF.attribute",
                    "name": "_displayName",
                    "method": "displayName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDisplayName",
                    "validate": false,
                    "optional": false,
                    "original": "display_name"
                }
            ],
            "conflicts": [],
            "type": "SpannerInstanceResource s",
            "original": "google_spanner_instance"
        },
        {
            "con": {
                "smart": "spannerInstanceIamBindingResource",
                "name": "SpannerInstanceIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "SpannerInstanceIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "SpannerInstanceIamBindingResource s",
            "original": "google_spanner_instance_iam_binding"
        },
        {
            "con": {
                "smart": "spannerInstanceIamMemberResource",
                "name": "SpannerInstanceIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "SpannerInstanceIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "SpannerInstanceIamMemberResource s",
            "original": "google_spanner_instance_iam_member"
        },
        {
            "con": {
                "smart": "spannerInstanceIamPolicyResource",
                "name": "SpannerInstanceIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "name": "SpannerInstanceIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "conflicts": [],
            "type": "SpannerInstanceIamPolicyResource s",
            "original": "google_spanner_instance_iam_policy"
        },
        {
            "con": {
                "smart": "sqlDatabaseResource",
                "name": "SqlDatabaseResource'"
            },
            "arguments": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "name": "SqlDatabaseResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"charset\" <$> TF.attribute",
                    "name": "_computedCharset",
                    "method": "computedCharset",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCharset",
                    "validate": false,
                    "optional": true,
                    "original": "charset"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"collation\" <$> TF.attribute",
                    "name": "_computedCollation",
                    "method": "computedCollation",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCollation",
                    "validate": false,
                    "optional": true,
                    "original": "collation"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "SqlDatabaseResource s",
            "original": "google_sql_database"
        },
        {
            "con": {
                "smart": "sqlDatabaseInstanceResource",
                "name": "SqlDatabaseInstanceResource'"
            },
            "arguments": [
                {
                    "default": "TF.value \"MYSQL_5_6\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database_version\" <$> TF.attribute",
                    "name": "_databaseVersion",
                    "method": "databaseVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDatabaseVersion",
                    "validate": false,
                    "optional": true,
                    "original": "database_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "_region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "validate": false,
                    "optional": true,
                    "original": "region"
                },
                {
                    "default": "_settings",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"settings\" <$> TF.attribute",
                    "name": "_settings",
                    "method": "settings",
                    "conflicts": [],
                    "type": "TF.Attr s (Settings s)",
                    "class": "HasSettings",
                    "validate": true,
                    "optional": false,
                    "original": "settings"
                }
            ],
            "name": "SqlDatabaseInstanceResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"connection_name\" <$> TF.attribute",
                    "name": "_computedConnectionName",
                    "method": "computedConnectionName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedConnectionName",
                    "validate": false,
                    "optional": false,
                    "original": "connection_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"first_ip_address\" <$> TF.attribute",
                    "name": "_computedFirstIpAddress",
                    "method": "computedFirstIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFirstIpAddress",
                    "validate": false,
                    "optional": false,
                    "original": "first_ip_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "_computedIpAddress",
                    "method": "computedIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (IpAddress s)]",
                    "class": "HasComputedIpAddress",
                    "validate": true,
                    "optional": false,
                    "original": "ip_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"master_instance_name\" <$> TF.attribute",
                    "name": "_computedMasterInstanceName",
                    "method": "computedMasterInstanceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMasterInstanceName",
                    "validate": false,
                    "optional": true,
                    "original": "master_instance_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_computedName",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "validate": false,
                    "optional": true,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"replica_configuration\" <$> TF.attribute",
                    "name": "_computedReplicaConfiguration",
                    "method": "computedReplicaConfiguration",
                    "conflicts": [],
                    "type": "TF.Attr s (ReplicaConfiguration s)",
                    "class": "HasComputedReplicaConfiguration",
                    "validate": true,
                    "optional": true,
                    "original": "replica_configuration"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"server_ca_cert\" <$> TF.attribute",
                    "name": "_computedServerCaCert",
                    "method": "computedServerCaCert",
                    "conflicts": [],
                    "type": "TF.Attr s (ServerCaCert s)",
                    "class": "HasComputedServerCaCert",
                    "validate": true,
                    "optional": false,
                    "original": "server_ca_cert"
                }
            ],
            "parameters": [
                {
                    "default": "_settings",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"settings\" <$> TF.attribute",
                    "name": "_settings",
                    "method": "settings",
                    "conflicts": [],
                    "type": "TF.Attr s (Settings s)",
                    "class": "HasSettings",
                    "validate": true,
                    "optional": false,
                    "original": "settings"
                }
            ],
            "conflicts": [],
            "type": "SqlDatabaseInstanceResource s",
            "original": "google_sql_database_instance"
        },
        {
            "con": {
                "smart": "sqlUserResource",
                "name": "SqlUserResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": true,
                    "original": "host"
                },
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"password\" <$> TF.attribute",
                    "name": "_password",
                    "method": "password",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPassword",
                    "validate": false,
                    "optional": true,
                    "original": "password"
                }
            ],
            "name": "SqlUserResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                }
            ],
            "parameters": [
                {
                    "default": "_instance'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance\" <$> TF.attribute",
                    "name": "_instance'",
                    "method": "instance'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstance'",
                    "validate": false,
                    "optional": false,
                    "original": "instance"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "SqlUserResource s",
            "original": "google_sql_user"
        },
        {
            "con": {
                "smart": "storageBucketResource",
                "name": "StorageBucketResource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cors\" <$> TF.attribute",
                    "name": "_cors",
                    "method": "cors",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Cors s)]",
                    "class": "HasCors",
                    "validate": true,
                    "optional": true,
                    "original": "cors"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_destroy\" <$> TF.attribute",
                    "name": "_forceDestroy",
                    "method": "forceDestroy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceDestroy",
                    "validate": false,
                    "optional": true,
                    "original": "force_destroy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"labels\" <$> TF.attribute",
                    "name": "_labels",
                    "method": "labels",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasLabels",
                    "validate": false,
                    "optional": true,
                    "original": "labels"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lifecycle_rule\" <$> TF.attribute",
                    "name": "_lifecycleRule",
                    "method": "lifecycleRule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (LifecycleRule s)]",
                    "class": "HasLifecycleRule",
                    "validate": true,
                    "optional": true,
                    "original": "lifecycle_rule"
                },
                {
                    "default": "TF.value \"US\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"location\" <$> TF.attribute",
                    "name": "_location",
                    "method": "location",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLocation",
                    "validate": false,
                    "optional": true,
                    "original": "location"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"logging\" <$> TF.attribute",
                    "name": "_logging",
                    "method": "logging",
                    "conflicts": [],
                    "type": "TF.Attr s (Logging s)",
                    "class": "HasLogging",
                    "validate": true,
                    "optional": true,
                    "original": "logging"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"predefined_acl\" <$> TF.attribute",
                    "name": "_predefinedAcl",
                    "method": "predefinedAcl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPredefinedAcl",
                    "validate": false,
                    "optional": true,
                    "original": "predefined_acl"
                },
                {
                    "default": "TF.value \"STANDARD\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"storage_class\" <$> TF.attribute",
                    "name": "_storageClass",
                    "method": "storageClass",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStorageClass",
                    "validate": false,
                    "optional": true,
                    "original": "storage_class"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"versioning\" <$> TF.attribute",
                    "name": "_versioning",
                    "method": "versioning",
                    "conflicts": [],
                    "type": "TF.Attr s (Versioning s)",
                    "class": "HasVersioning",
                    "validate": true,
                    "optional": true,
                    "original": "versioning"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"website\" <$> TF.attribute",
                    "name": "_website",
                    "method": "website",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Website s)]",
                    "class": "HasWebsite",
                    "validate": true,
                    "optional": true,
                    "original": "website"
                }
            ],
            "name": "StorageBucketResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project\" <$> TF.attribute",
                    "name": "_computedProject",
                    "method": "computedProject",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProject",
                    "validate": false,
                    "optional": true,
                    "original": "project"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "_computedUrl",
                    "method": "computedUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUrl",
                    "validate": false,
                    "optional": false,
                    "original": "url"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "StorageBucketResource s",
            "original": "google_storage_bucket"
        },
        {
            "con": {
                "smart": "storageBucketAclResource",
                "name": "StorageBucketAclResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_acl\" <$> TF.attribute",
                    "name": "_defaultAcl",
                    "method": "defaultAcl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultAcl",
                    "validate": false,
                    "optional": true,
                    "original": "default_acl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"predefined_acl\" <$> TF.attribute",
                    "name": "_predefinedAcl",
                    "method": "predefinedAcl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPredefinedAcl",
                    "validate": false,
                    "optional": true,
                    "original": "predefined_acl"
                }
            ],
            "name": "StorageBucketAclResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role_entity\" <$> TF.attribute",
                    "name": "_computedRoleEntity",
                    "method": "computedRoleEntity",
                    "conflicts": [
                        "_predefinedAcl"
                    ],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedRoleEntity",
                    "validate": false,
                    "optional": true,
                    "original": "role_entity"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                }
            ],
            "conflicts": [],
            "type": "StorageBucketAclResource s",
            "original": "google_storage_bucket_acl"
        },
        {
            "con": {
                "smart": "storageBucketIamBindingResource",
                "name": "StorageBucketIamBindingResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "StorageBucketIamBindingResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_members",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "_members",
                    "method": "members",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasMembers",
                    "validate": false,
                    "optional": false,
                    "original": "members"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "StorageBucketIamBindingResource s",
            "original": "google_storage_bucket_iam_binding"
        },
        {
            "con": {
                "smart": "storageBucketIamMemberResource",
                "name": "StorageBucketIamMemberResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "name": "StorageBucketIamMemberResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_member",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "_member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMember",
                    "validate": false,
                    "optional": false,
                    "original": "member"
                },
                {
                    "default": "_role",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role\" <$> TF.attribute",
                    "name": "_role",
                    "method": "role",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRole",
                    "validate": false,
                    "optional": false,
                    "original": "role"
                }
            ],
            "conflicts": [],
            "type": "StorageBucketIamMemberResource s",
            "original": "google_storage_bucket_iam_member"
        },
        {
            "con": {
                "smart": "storageBucketIamPolicyResource",
                "name": "StorageBucketIamPolicyResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "name": "StorageBucketIamPolicyResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "_computedEtag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "validate": false,
                    "optional": false,
                    "original": "etag"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_policyData",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_data\" <$> TF.attribute",
                    "name": "_policyData",
                    "method": "policyData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyData",
                    "validate": false,
                    "optional": false,
                    "original": "policy_data"
                }
            ],
            "conflicts": [],
            "type": "StorageBucketIamPolicyResource s",
            "original": "google_storage_bucket_iam_policy"
        },
        {
            "con": {
                "smart": "storageBucketObjectResource",
                "name": "StorageBucketObjectResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cache_control\" <$> TF.attribute",
                    "name": "_cacheControl",
                    "method": "cacheControl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheControl",
                    "validate": false,
                    "optional": true,
                    "original": "cache_control"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "_content",
                    "method": "content",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_source",
                            "method": "source"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "validate": false,
                    "optional": true,
                    "original": "content"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"content_disposition\" <$> TF.attribute",
                    "name": "_contentDisposition",
                    "method": "contentDisposition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentDisposition",
                    "validate": false,
                    "optional": true,
                    "original": "content_disposition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"content_encoding\" <$> TF.attribute",
                    "name": "_contentEncoding",
                    "method": "contentEncoding",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentEncoding",
                    "validate": false,
                    "optional": true,
                    "original": "content_encoding"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"content_language\" <$> TF.attribute",
                    "name": "_contentLanguage",
                    "method": "contentLanguage",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentLanguage",
                    "validate": false,
                    "optional": true,
                    "original": "content_language"
                },
                {
                    "default": "TF.value \"different hash\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"detect_md5hash\" <$> TF.attribute",
                    "name": "_detectMd5hash",
                    "method": "detectMd5hash",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDetectMd5hash",
                    "validate": false,
                    "optional": true,
                    "original": "detect_md5hash"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"predefined_acl\" <$> TF.attribute",
                    "name": "_predefinedAcl",
                    "method": "predefinedAcl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPredefinedAcl",
                    "validate": false,
                    "optional": true,
                    "original": "predefined_acl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_content",
                            "method": "content"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": true,
                    "original": "source"
                }
            ],
            "name": "StorageBucketObjectResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "_computedContentType",
                    "method": "computedContentType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedContentType",
                    "validate": false,
                    "optional": true,
                    "original": "content_type"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"crc32c\" <$> TF.attribute",
                    "name": "_computedCrc32c",
                    "method": "computedCrc32c",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCrc32c",
                    "validate": false,
                    "optional": false,
                    "original": "crc32c"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"md5hash\" <$> TF.attribute",
                    "name": "_computedMd5hash",
                    "method": "computedMd5hash",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMd5hash",
                    "validate": false,
                    "optional": false,
                    "original": "md5hash"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"storage_class\" <$> TF.attribute",
                    "name": "_computedStorageClass",
                    "method": "computedStorageClass",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStorageClass",
                    "validate": false,
                    "optional": true,
                    "original": "storage_class"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "_content",
                    "method": "content",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_source",
                            "method": "source"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "validate": false,
                    "optional": true,
                    "original": "content"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "name": "_content",
                            "method": "content"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": true,
                    "original": "source"
                }
            ],
            "type": "StorageBucketObjectResource s",
            "original": "google_storage_bucket_object"
        },
        {
            "con": {
                "smart": "storageDefaultObjectAclResource",
                "name": "StorageDefaultObjectAclResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                }
            ],
            "name": "StorageDefaultObjectAclResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role_entity\" <$> TF.attribute",
                    "name": "_computedRoleEntity",
                    "method": "computedRoleEntity",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasComputedRoleEntity",
                    "validate": false,
                    "optional": true,
                    "original": "role_entity"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                }
            ],
            "conflicts": [],
            "type": "StorageDefaultObjectAclResource s",
            "original": "google_storage_default_object_acl"
        },
        {
            "con": {
                "smart": "storageNotificationResource",
                "name": "StorageNotificationResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"custom_attributes\" <$> TF.attribute",
                    "name": "_customAttributes",
                    "method": "customAttributes",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasCustomAttributes",
                    "validate": false,
                    "optional": true,
                    "original": "custom_attributes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"event_types\" <$> TF.attribute",
                    "name": "_eventTypes",
                    "method": "eventTypes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasEventTypes",
                    "validate": false,
                    "optional": true,
                    "original": "event_types"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"object_name_prefix\" <$> TF.attribute",
                    "name": "_objectNamePrefix",
                    "method": "objectNamePrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasObjectNamePrefix",
                    "validate": false,
                    "optional": true,
                    "original": "object_name_prefix"
                },
                {
                    "default": "_payloadFormat",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"payload_format\" <$> TF.attribute",
                    "name": "_payloadFormat",
                    "method": "payloadFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPayloadFormat",
                    "validate": false,
                    "optional": false,
                    "original": "payload_format"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "name": "StorageNotificationResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self_link\" <$> TF.attribute",
                    "name": "_computedSelfLink",
                    "method": "computedSelfLink",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSelfLink",
                    "validate": false,
                    "optional": false,
                    "original": "self_link"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_payloadFormat",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"payload_format\" <$> TF.attribute",
                    "name": "_payloadFormat",
                    "method": "payloadFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPayloadFormat",
                    "validate": false,
                    "optional": false,
                    "original": "payload_format"
                },
                {
                    "default": "_topic",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"topic\" <$> TF.attribute",
                    "name": "_topic",
                    "method": "topic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTopic",
                    "validate": false,
                    "optional": false,
                    "original": "topic"
                }
            ],
            "conflicts": [],
            "type": "StorageNotificationResource s",
            "original": "google_storage_notification"
        },
        {
            "con": {
                "smart": "storageObjectAclResource",
                "name": "StorageObjectAclResource'"
            },
            "arguments": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_object",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"object\" <$> TF.attribute",
                    "name": "_object",
                    "method": "object",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasObject",
                    "validate": false,
                    "optional": false,
                    "original": "object"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"predefined_acl\" <$> TF.attribute",
                    "name": "_predefinedAcl",
                    "method": "predefinedAcl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPredefinedAcl",
                    "validate": false,
                    "optional": true,
                    "original": "predefined_acl"
                }
            ],
            "name": "StorageObjectAclResource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role_entity\" <$> TF.attribute",
                    "name": "_computedRoleEntity",
                    "method": "computedRoleEntity",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedRoleEntity",
                    "validate": false,
                    "optional": true,
                    "original": "role_entity"
                }
            ],
            "parameters": [
                {
                    "default": "_bucket",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"bucket\" <$> TF.attribute",
                    "name": "_bucket",
                    "method": "bucket",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucket",
                    "validate": false,
                    "optional": false,
                    "original": "bucket"
                },
                {
                    "default": "_object",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"object\" <$> TF.attribute",
                    "name": "_object",
                    "method": "object",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasObject",
                    "validate": false,
                    "optional": false,
                    "original": "object"
                }
            ],
            "conflicts": [],
            "type": "StorageObjectAclResource s",
            "original": "google_storage_object_acl"
        }
    ],
    "schema": {
        "con": {
            "smart": "newProvider",
            "name": "Provider'"
        },
        "arguments": [
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [],
                "forceNew": false,
                "encoder": "TF.assign \"credentials\" <$>",
                "name": "_credentials",
                "method": "credentials",
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasCredentials",
                "validate": false,
                "optional": true,
                "original": "credentials"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [],
                "forceNew": false,
                "encoder": "TF.assign \"project\" <$>",
                "name": "_project",
                "method": "project",
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasProject",
                "validate": false,
                "optional": true,
                "original": "project"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [],
                "forceNew": false,
                "encoder": "TF.assign \"region\" <$>",
                "name": "_region",
                "method": "region",
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasRegion",
                "validate": false,
                "optional": true,
                "original": "region"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [],
                "forceNew": false,
                "encoder": "TF.assign \"zone\" <$>",
                "name": "_zone",
                "method": "zone",
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasZone",
                "validate": false,
                "optional": true,
                "original": "zone"
            }
        ],
        "name": "Provider",
        "threaded": false,
        "attributes": [],
        "parameters": [],
        "conflicts": [],
        "type": "Provider",
        "original": "provider"
    },
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "Google",
    "package": "terrafomo-google",
    "original": "google"
}