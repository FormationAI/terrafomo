{
    "settings": [
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The port of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                }
            ],
            "name": "Papertrail",
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The port of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                }
            ],
            "hashable": false,
            "type": "Papertrail s",
            "original": "papertrail"
        },
        {
            "arguments": [
                {
                    "default": "TF.value 5000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How often to run the healthcheck in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_interval\" <$> TF.attribute",
                    "name": "check_interval",
                    "method": "checkInterval",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasCheckInterval",
                    "optional": true,
                    "label": "_checkInterval"
                },
                {
                    "default": "TF.value 200",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The status code expected from the host"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_response\" <$> TF.attribute",
                    "name": "expected_response",
                    "method": "expectedResponse",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasExpectedResponse",
                    "optional": true,
                    "label": "_expectedResponse"
                },
                {
                    "default": "_host",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Which host to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "optional": false,
                    "label": "_host"
                },
                {
                    "default": "TF.value \"1.1\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether to use version 1.0 or 1.1 HTTP"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_version\" <$> TF.attribute",
                    "name": "http_version",
                    "method": "httpVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHttpVersion",
                    "optional": true,
                    "label": "_httpVersion"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [
                        "When loading a config, the initial number of probes to be seen as OK"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial\" <$> TF.attribute",
                    "name": "initial",
                    "method": "initial",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasInitial",
                    "optional": true,
                    "label": "_initial"
                },
                {
                    "default": "TF.value \"HEAD\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Which HTTP method to use"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"method\" <$> TF.attribute",
                    "name": "method",
                    "method": "method",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMethod",
                    "optional": true,
                    "label": "_method"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this healthcheck"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The path to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": false,
                    "label": "_path"
                },
                {
                    "default": "TF.value 3",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How many healthchecks must succeed to be considered healthy"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "threshold",
                    "method": "threshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasThreshold",
                    "optional": true,
                    "label": "_threshold"
                },
                {
                    "default": "TF.value 500",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Timeout in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": true,
                    "label": "_timeout"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The number of most recent healthcheck queries to keep for this healthcheck"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"window\" <$> TF.attribute",
                    "name": "window",
                    "method": "window",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasWindow",
                    "optional": true,
                    "label": "_window"
                }
            ],
            "name": "Healthcheck",
            "attributes": [],
            "parameters": [
                {
                    "default": "_host",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Which host to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "optional": false,
                    "label": "_host"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this healthcheck"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The path to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": false,
                    "label": "_path"
                }
            ],
            "hashable": false,
            "type": "Healthcheck s",
            "original": "healthcheck"
        },
        {
            "arguments": [
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format used for the configured endpoint.",
                        "Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "format_version",
                    "method": "formatVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFormatVersion",
                    "optional": true,
                    "label": "_formatVersion"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How the message should be formatted."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "message_type",
                    "method": "messageType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "optional": true,
                    "label": "_messageType"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The URL to POST to."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "url",
                    "method": "url",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "optional": false,
                    "label": "_url"
                }
            ],
            "name": "Sumologic",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The URL to POST to."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "url",
                    "method": "url",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "optional": false,
                    "label": "_url"
                }
            ],
            "hashable": false,
            "type": "Sumologic s",
            "original": "sumologic"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Action to take"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": true,
                    "label": "_action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to check if this Cache Setting applies"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "cache_condition",
                    "method": "cacheCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "optional": true,
                    "label": "_cacheCondition"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Cache Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Max 'Time To Live' for stale (unreachable) objects."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"stale_ttl\" <$> TF.attribute",
                    "name": "stale_ttl",
                    "method": "staleTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasStaleTtl",
                    "optional": true,
                    "label": "_staleTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The 'Time To Live' for the object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "ttl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTtl",
                    "optional": true,
                    "label": "_ttl"
                }
            ],
            "name": "CacheSetting",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Cache Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "CacheSetting s",
            "original": "cache_setting"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"comment\" <$> TF.attribute",
                    "name": "comment",
                    "method": "comment",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComment",
                    "optional": true,
                    "label": "_comment"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The domain that this Service will respond to"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "name": "Domain",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The domain that this Service will respond to"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Domain s",
            "original": "domain"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Allows you to terminate request handling and immediately perform an action"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": true,
                    "label": "_action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Disable collapsed forwarding"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bypass_busy_wait\" <$> TF.attribute",
                    "name": "bypass_busy_wait",
                    "method": "bypassBusyWait",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasBypassBusyWait",
                    "optional": true,
                    "label": "_bypassBusyWait"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The host header"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_host\" <$> TF.attribute",
                    "name": "default_host",
                    "method": "defaultHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultHost",
                    "optional": true,
                    "label": "_defaultHost"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Force a cache miss for the request"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_miss\" <$> TF.attribute",
                    "name": "force_miss",
                    "method": "forceMiss",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceMiss",
                    "optional": true,
                    "label": "_forceMiss"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Forces the request use SSL"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_ssl\" <$> TF.attribute",
                    "name": "force_ssl",
                    "method": "forceSsl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceSsl",
                    "optional": true,
                    "label": "_forceSsl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Inject Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"geo_headers\" <$> TF.attribute",
                    "name": "geo_headers",
                    "method": "geoHeaders",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasGeoHeaders",
                    "optional": true,
                    "label": "_geoHeaders"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Comma separated list of varnish request object fields that should be in the",
                        "hash key"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"hash_keys\" <$> TF.attribute",
                    "name": "hash_keys",
                    "method": "hashKeys",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHashKeys",
                    "optional": true,
                    "label": "_hashKeys"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How old an object is allowed to be, in seconds. Default `60`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_stale_age\" <$> TF.attribute",
                    "name": "max_stale_age",
                    "method": "maxStaleAge",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxStaleAge",
                    "optional": true,
                    "label": "_maxStaleAge"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this Request Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a request condition to apply. If there is no condition this setting",
                        "will always be applied."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "request_condition",
                    "method": "requestCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "optional": true,
                    "label": "_requestCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Injects the X-Timer info into the request"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timer_support\" <$> TF.attribute",
                    "name": "timer_support",
                    "method": "timerSupport",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasTimerSupport",
                    "optional": true,
                    "label": "_timerSupport"
                },
                {
                    "default": "TF.value \"append\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "X-Forwarded-For options"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"xff\" <$> TF.attribute",
                    "name": "xff",
                    "method": "xff",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasXff",
                    "optional": true,
                    "label": "_xff"
                }
            ],
            "name": "RequestSetting",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this Request Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "RequestSetting s",
            "original": "request_setting"
        },
        {
            "arguments": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "S3 Bucket name to store logs in"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "bucket_name",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "optional": false,
                    "label": "_bucketName"
                },
                {
                    "default": "TF.value \"s3.amazonaws.com\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Bucket endpoint"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "optional": true,
                    "label": "_domain"
                },
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format used for the configured endpoint.",
                        "Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "format_version",
                    "method": "formatVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFormatVersion",
                    "optional": true,
                    "label": "_formatVersion"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Gzip Compression level"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"gzip_level\" <$> TF.attribute",
                    "name": "gzip_level",
                    "method": "gzipLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasGzipLevel",
                    "optional": true,
                    "label": "_gzipLevel"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How the message should be formatted."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "message_type",
                    "method": "messageType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "optional": true,
                    "label": "_messageType"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Path to store the files. Must end with a trailing slash"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": true,
                    "label": "_path"
                },
                {
                    "default": "TF.value 3600",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How frequently the logs should be transferred, in seconds (Default 3600)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "period",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeriod",
                    "optional": true,
                    "label": "_period"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The S3 redundancy level."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"redundancy\" <$> TF.attribute",
                    "name": "redundancy",
                    "method": "redundancy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRedundancy",
                    "optional": true,
                    "label": "_redundancy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "AWS Access Key"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"s3_access_key\" <$> TF.attribute",
                    "name": "s3_access_key",
                    "method": "s3AccessKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasS3AccessKey",
                    "optional": true,
                    "label": "_s3AccessKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "AWS Secret Key"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"s3_secret_key\" <$> TF.attribute",
                    "name": "s3_secret_key",
                    "method": "s3SecretKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasS3SecretKey",
                    "optional": true,
                    "label": "_s3SecretKey"
                },
                {
                    "default": "TF.value \"%Y-%m-%dT%H:%M:%S.000\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timestamp_format\" <$> TF.attribute",
                    "name": "timestamp_format",
                    "method": "timestampFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTimestampFormat",
                    "optional": true,
                    "label": "_timestampFormat"
                }
            ],
            "name": "S3logging",
            "attributes": [],
            "parameters": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "S3 Bucket name to store logs in"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "bucket_name",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "optional": false,
                    "label": "_bucketName"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "S3logging s",
            "original": "s3logging"
        },
        {
            "arguments": [
                {
                    "default": "_content",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The contents of this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "content",
                    "method": "content",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "optional": false,
                    "label": "_content"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Should this VCL configuration be the main configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"main\" <$> TF.attribute",
                    "name": "main",
                    "method": "main",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMain",
                    "optional": true,
                    "label": "_main"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "name": "Vcl",
            "attributes": [],
            "parameters": [
                {
                    "default": "_content",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The contents of this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "content",
                    "method": "content",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "optional": false,
                    "label": "_content"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Vcl s",
            "original": "vcl"
        },
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "An IPv4, hostname, or IPv6 address for the Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Should this Backend be load balanced"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_loadbalance\" <$> TF.attribute",
                    "name": "auto_loadbalance",
                    "method": "autoLoadbalance",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoLoadbalance",
                    "optional": true,
                    "label": "_autoLoadbalance"
                },
                {
                    "default": "TF.value 10000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How long to wait between bytes in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"between_bytes_timeout\" <$> TF.attribute",
                    "name": "between_bytes_timeout",
                    "method": "betweenBytesTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasBetweenBytesTimeout",
                    "optional": true,
                    "label": "_betweenBytesTimeout"
                },
                {
                    "default": "TF.value 1000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How long to wait for a timeout in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"connect_timeout\" <$> TF.attribute",
                    "name": "connect_timeout",
                    "method": "connectTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasConnectTimeout",
                    "optional": true,
                    "label": "_connectTimeout"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Number of errors to allow before the Backend is marked as down"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"error_threshold\" <$> TF.attribute",
                    "name": "error_threshold",
                    "method": "errorThreshold",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasErrorThreshold",
                    "optional": true,
                    "label": "_errorThreshold"
                },
                {
                    "default": "TF.value 15000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How long to wait for the first bytes in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"first_byte_timeout\" <$> TF.attribute",
                    "name": "first_byte_timeout",
                    "method": "firstByteTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFirstByteTimeout",
                    "optional": true,
                    "label": "_firstByteTimeout"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The healthcheck name that should be used for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthcheck\" <$> TF.attribute",
                    "name": "healthcheck",
                    "method": "healthcheck",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthcheck",
                    "optional": true,
                    "label": "_healthcheck"
                },
                {
                    "default": "TF.value 200",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Maximum number of connections for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_conn\" <$> TF.attribute",
                    "name": "max_conn",
                    "method": "maxConn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxConn",
                    "optional": true,
                    "label": "_maxConn"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Maximum allowed TLS version on SSL connections to this backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_tls_version\" <$> TF.attribute",
                    "name": "max_tls_version",
                    "method": "maxTlsVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMaxTlsVersion",
                    "optional": true,
                    "label": "_maxTlsVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Minimum allowed TLS version on SSL connections to this backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "min_tls_version",
                    "method": "minTlsVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinTlsVersion",
                    "optional": true,
                    "label": "_minTlsVersion"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value 80",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The port number Backend responds on. Default 80"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": true,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition, which if met, will select this backend during a",
                        "request."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "request_condition",
                    "method": "requestCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "optional": true,
                    "label": "_requestCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The POP of the shield designated to reduce inbound load."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"shield\" <$> TF.attribute",
                    "name": "shield",
                    "method": "shield",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasShield",
                    "optional": true,
                    "label": "_shield"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "CA certificate attached to origin."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_ca_cert\" <$> TF.attribute",
                    "name": "ssl_ca_cert",
                    "method": "sslCaCert",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCaCert",
                    "optional": true,
                    "label": "_sslCaCert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL certificate hostname for cert verification"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_cert_hostname\" <$> TF.attribute",
                    "name": "ssl_cert_hostname",
                    "method": "sslCertHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCertHostname",
                    "optional": true,
                    "label": "_sslCertHostname"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Be strict on checking SSL certs"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_check_cert\" <$> TF.attribute",
                    "name": "ssl_check_cert",
                    "method": "sslCheckCert",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasSslCheckCert",
                    "optional": true,
                    "label": "_sslCheckCert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Comma sepparated list of ciphers"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_ciphers\" <$> TF.attribute",
                    "name": "ssl_ciphers",
                    "method": "sslCiphers",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCiphers",
                    "optional": true,
                    "label": "_sslCiphers"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL certificate file for client connections to the backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_client_cert\" <$> TF.attribute",
                    "name": "ssl_client_cert",
                    "method": "sslClientCert",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslClientCert",
                    "optional": true,
                    "label": "_sslClientCert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL key file for client connections to backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_client_key\" <$> TF.attribute",
                    "name": "ssl_client_key",
                    "method": "sslClientKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslClientKey",
                    "optional": true,
                    "label": "_sslClientKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL certificate hostname"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_hostname\" <$> TF.attribute",
                    "name": "ssl_hostname",
                    "method": "sslHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslHostname",
                    "optional": true,
                    "label": "_sslHostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL certificate hostname for SNI verification"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_sni_hostname\" <$> TF.attribute",
                    "name": "ssl_sni_hostname",
                    "method": "sslSniHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslSniHostname",
                    "optional": true,
                    "label": "_sslSniHostname"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether or not to use SSL to reach the Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"use_ssl\" <$> TF.attribute",
                    "name": "use_ssl",
                    "method": "useSsl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUseSsl",
                    "optional": true,
                    "label": "_useSsl"
                },
                {
                    "default": "TF.value 100",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The portion of traffic to send to a specific origins. Each origin receives",
                        "weight/total of the traffic."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "weight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasWeight",
                    "optional": true,
                    "label": "_weight"
                }
            ],
            "name": "Backend",
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "An IPv4, hostname, or IPv6 address for the Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Backend s",
            "original": "backend"
        },
        {
            "arguments": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the bucket in which to store the logs."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "bucket_name",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "optional": false,
                    "label": "_bucketName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The email address associated with the target GCS bucket on your account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "optional": true,
                    "label": "_email"
                },
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Gzip Compression level"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"gzip_level\" <$> TF.attribute",
                    "name": "gzip_level",
                    "method": "gzipLevel",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasGzipLevel",
                    "optional": true,
                    "label": "_gzipLevel"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The log message type per the fastly docs:",
                        "https://docs.fastly.com/api/logging#logging_gcs"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "message_type",
                    "method": "messageType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "optional": true,
                    "label": "_messageType"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Path to store the files. Must end with a trailing slash"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "path",
                    "method": "path",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "optional": true,
                    "label": "_path"
                },
                {
                    "default": "TF.value 3600",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How frequently the logs should be transferred, in seconds (Default 3600)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "period",
                    "method": "period",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPeriod",
                    "optional": true,
                    "label": "_period"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The secret key associated with the target gcs bucket on your account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"secret_key\" <$> TF.attribute",
                    "name": "secret_key",
                    "method": "secretKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecretKey",
                    "optional": true,
                    "label": "_secretKey"
                },
                {
                    "default": "TF.value \"%Y-%m-%dT%H:%M:%S.000\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timestamp_format\" <$> TF.attribute",
                    "name": "timestamp_format",
                    "method": "timestampFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTimestampFormat",
                    "optional": true,
                    "label": "_timestampFormat"
                }
            ],
            "name": "Gcslogging",
            "attributes": [],
            "parameters": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the bucket in which to store the logs."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "bucket_name",
                    "method": "bucketName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "optional": false,
                    "label": "_bucketName"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Gcslogging s",
            "original": "gcslogging"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition controlling when this gzip configuration applies."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "cache_condition",
                    "method": "cacheCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "optional": true,
                    "label": "_cacheCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Content types to apply automatic gzip to"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_types\" <$> TF.attribute",
                    "name": "content_types",
                    "method": "contentTypes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasContentTypes",
                    "optional": true,
                    "label": "_contentTypes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "File extensions to apply automatic gzip to. Do not include '.'"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"extensions\" <$> TF.attribute",
                    "name": "extensions",
                    "method": "extensions",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasExtensions",
                    "optional": true,
                    "label": "_extensions"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this gzip condition"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "name": "Gzip",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this gzip condition"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Gzip s",
            "original": "gzip"
        },
        {
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [
                        "One of set, append, delete, regex, or regex_repeat"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional name of a cache condition to apply."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "cache_condition",
                    "method": "cacheCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "optional": true,
                    "label": "_cacheCondition"
                },
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Header this affects"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "optional": false,
                    "label": "_destination"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Don't add the header if it is already. (Only applies to 'set' action.).",
                        "Default `false`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ignore_if_set\" <$> TF.attribute",
                    "name": "ignore_if_set",
                    "method": "ignoreIfSet",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIgnoreIfSet",
                    "optional": true,
                    "label": "_ignoreIfSet"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Header object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value 100",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Lower priorities execute first. (Default: 100.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "optional": true,
                    "label": "_priority"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional name of a request condition to apply."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "request_condition",
                    "method": "requestCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "optional": true,
                    "label": "_requestCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional name of a response condition to apply."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type to manipulate: request, fetch, cache, response"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "name": "Header",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Regular expression to use (Only applies to 'regex' and 'regex_repeat'",
                        "actions.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"regex\" <$> TF.attribute",
                    "name": "regex",
                    "method": "computedRegex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegex",
                    "optional": true,
                    "label": "_computedRegex"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Variable to be used as a source for the header content (Does not apply to",
                        "'delete' action.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "source",
                    "method": "computedSource",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSource",
                    "optional": true,
                    "label": "_computedSource"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Value to substitute in place of regular expression. (Only applies to 'regex'",
                        "and 'regex_repeat'.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"substitution\" <$> TF.attribute",
                    "name": "substitution",
                    "method": "computedSubstitution",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubstitution",
                    "optional": true,
                    "label": "_computedSubstitution"
                }
            ],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [
                        "One of set, append, delete, regex, or regex_repeat"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Header this affects"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "destination",
                    "method": "destination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "optional": false,
                    "label": "_destination"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Header object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type to manipulate: request, fetch, cache, response"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "hashable": false,
            "type": "Header s",
            "original": "header"
        },
        {
            "arguments": [
                {
                    "default": "_dataset",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery dataset"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"dataset\" <$> TF.attribute",
                    "name": "dataset",
                    "method": "dataset",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDataset",
                    "optional": false,
                    "label": "_dataset"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The email address associated with the target BigQuery dataset on your",
                        "account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "optional": true,
                    "label": "_email"
                },
                {
                    "default": "TF.value \"%h %l %u %t \"%r\" %>s %b\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The logging format desired."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_projectId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your GCP project"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "project_id",
                    "method": "projectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "optional": false,
                    "label": "_projectId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The secret key associated with the target BigQuery dataset on your account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"secret_key\" <$> TF.attribute",
                    "name": "secret_key",
                    "method": "secretKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecretKey",
                    "optional": true,
                    "label": "_secretKey"
                },
                {
                    "default": "_table",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery table"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"table\" <$> TF.attribute",
                    "name": "table",
                    "method": "table",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTable",
                    "optional": false,
                    "label": "_table"
                }
            ],
            "name": "Bigquerylogging",
            "attributes": [],
            "parameters": [
                {
                    "default": "_dataset",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery dataset"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"dataset\" <$> TF.attribute",
                    "name": "dataset",
                    "method": "dataset",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDataset",
                    "optional": false,
                    "label": "_dataset"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_projectId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your GCP project"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "project_id",
                    "method": "projectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "optional": false,
                    "label": "_projectId"
                },
                {
                    "default": "_table",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery table"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"table\" <$> TF.attribute",
                    "name": "table",
                    "method": "table",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTable",
                    "optional": false,
                    "label": "_table"
                }
            ],
            "hashable": false,
            "type": "Bigquerylogging s",
            "original": "bigquerylogging"
        },
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the syslog service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "TF.value \"%h %l %u %t \"%r\" %>s %b\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format. Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "format_version",
                    "method": "formatVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFormatVersion",
                    "optional": true,
                    "label": "_formatVersion"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How the message should be formatted."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "message_type",
                    "method": "messageType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "optional": true,
                    "label": "_messageType"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value 514",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The port of the syslog service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": true,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "A secure certificate to authenticate the server with."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_ca_cert\" <$> TF.attribute",
                    "name": "tls_ca_cert",
                    "method": "tlsCaCert",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTlsCaCert",
                    "optional": true,
                    "label": "_tlsCaCert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Used during the TLS handshake to validate the certificate."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_hostname\" <$> TF.attribute",
                    "name": "tls_hostname",
                    "method": "tlsHostname",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTlsHostname",
                    "optional": true,
                    "label": "_tlsHostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Authentication token"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": true,
                    "label": "_token"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Use TLS for secure logging"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"use_tls\" <$> TF.attribute",
                    "name": "use_tls",
                    "method": "useTls",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUseTls",
                    "optional": true,
                    "label": "_useTls"
                }
            ],
            "name": "Syslog",
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the syslog service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Syslog s",
            "original": "syslog"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value 10",
                    "computed": false,
                    "required": false,
                    "help": [
                        "A number used to determine the order in which multiple conditions execute.",
                        "Lower numbers execute first"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "priority",
                    "method": "priority",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPriority",
                    "optional": true,
                    "label": "_priority"
                },
                {
                    "default": "_statement",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The statement used to determine if the condition is met"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"statement\" <$> TF.attribute",
                    "name": "statement",
                    "method": "statement",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatement",
                    "optional": false,
                    "label": "_statement"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type of the condition, either `REQUEST`, `RESPONSE`, or `CACHE`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "name": "Condition",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_statement",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The statement used to determine if the condition is met"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"statement\" <$> TF.attribute",
                    "name": "statement",
                    "method": "statement",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatement",
                    "optional": false,
                    "label": "_statement"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type of the condition, either `REQUEST`, `RESPONSE`, or `CACHE`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "hashable": false,
            "type": "Condition s",
            "original": "condition"
        },
        {
            "arguments": [
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "format",
                    "method": "format",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "optional": true,
                    "label": "_format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format used for the configured endpoint.",
                        "Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "format_version",
                    "method": "formatVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFormatVersion",
                    "optional": true,
                    "label": "_formatVersion"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value 20000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The port number configured in Logentries"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": true,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "response_condition",
                    "method": "responseCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "optional": true,
                    "label": "_responseCondition"
                },
                {
                    "default": "_token",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Use token based authentication (https://logentries.com/doc/input-token/)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": false,
                    "label": "_token"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether to use TLS for secure logging"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"use_tls\" <$> TF.attribute",
                    "name": "use_tls",
                    "method": "useTls",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUseTls",
                    "optional": true,
                    "label": "_useTls"
                }
            ],
            "name": "Logentries",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_token",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Use token based authentication (https://logentries.com/doc/input-token/)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "token",
                    "method": "token",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "optional": false,
                    "label": "_token"
                }
            ],
            "hashable": false,
            "type": "Logentries s",
            "original": "logentries"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of the condition checked after we have retrieved an object. If the",
                        "condition passes then deliver this Request Object instead."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "cache_condition",
                    "method": "cacheCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "optional": true,
                    "label": "_cacheCondition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The content to deliver for the response object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "content",
                    "method": "content",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "optional": true,
                    "label": "_content"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The MIME type of the content"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "content_type",
                    "method": "contentType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentType",
                    "optional": true,
                    "label": "_contentType"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this request object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of the condition to be checked during the request phase to see if the",
                        "object should be delivered"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "request_condition",
                    "method": "requestCondition",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "optional": true,
                    "label": "_requestCondition"
                },
                {
                    "default": "TF.value \"OK\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The HTTP Response of the object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "response",
                    "method": "response",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponse",
                    "optional": true,
                    "label": "_response"
                },
                {
                    "default": "TF.value 200",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The HTTP Status Code of the object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasStatus",
                    "optional": true,
                    "label": "_status"
                }
            ],
            "name": "ResponseObject",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this request object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "ResponseObject s",
            "original": "response_object"
        }
    ],
    "arguments": [
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Fastly API Key from https://app.fastly.com/#account"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"api_key\" <$>",
            "name": "api_key",
            "method": "apiKey",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasApiKey",
            "optional": true,
            "label": "_apiKey"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Fastly API URL"
            ],
            "forceNew": false,
            "encoder": "TF.assign \"base_url\" <$>",
            "name": "base_url",
            "method": "baseUrl",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasBaseUrl",
            "optional": true,
            "label": "_baseUrl"
        }
    ],
    "dataSources": [
        {
            "arguments": [],
            "schema": "DataSource",
            "name": "IpRangesData",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks\" <$> TF.attribute",
                    "name": "cidr_blocks",
                    "method": "computedCidrBlocks",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCidrBlocks",
                    "optional": false,
                    "label": "_computedCidrBlocks"
                }
            ],
            "parameters": [],
            "type": "IpRangesData s",
            "original": "fastly_ip_ranges"
        }
    ],
    "resources": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend\" <$> TF.attribute",
                    "name": "backend",
                    "method": "backend",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Backend s)]",
                    "class": "HasBackend",
                    "optional": true,
                    "label": "_backend"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bigquerylogging\" <$> TF.attribute",
                    "name": "bigquerylogging",
                    "method": "bigquerylogging",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Bigquerylogging s)]",
                    "class": "HasBigquerylogging",
                    "optional": true,
                    "label": "_bigquerylogging"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_setting\" <$> TF.attribute",
                    "name": "cache_setting",
                    "method": "cacheSetting",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (CacheSetting s)]",
                    "class": "HasCacheSetting",
                    "optional": true,
                    "label": "_cacheSetting"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"condition\" <$> TF.attribute",
                    "name": "condition",
                    "method": "condition",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Condition s)]",
                    "class": "HasCondition",
                    "optional": true,
                    "label": "_condition"
                },
                {
                    "default": "TF.value 3600",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The default Time-to-live (TTL) for the version"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_ttl\" <$> TF.attribute",
                    "name": "default_ttl",
                    "method": "defaultTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDefaultTtl",
                    "optional": true,
                    "label": "_defaultTtl"
                },
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Domain s)]",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_destroy\" <$> TF.attribute",
                    "name": "force_destroy",
                    "method": "forceDestroy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceDestroy",
                    "optional": true,
                    "label": "_forceDestroy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gcslogging\" <$> TF.attribute",
                    "name": "gcslogging",
                    "method": "gcslogging",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Gcslogging s)]",
                    "class": "HasGcslogging",
                    "optional": true,
                    "label": "_gcslogging"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gzip\" <$> TF.attribute",
                    "name": "gzip",
                    "method": "gzip",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Gzip s)]",
                    "class": "HasGzip",
                    "optional": true,
                    "label": "_gzip"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "header",
                    "method": "header",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Header s)]",
                    "class": "HasHeader",
                    "optional": true,
                    "label": "_header"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthcheck\" <$> TF.attribute",
                    "name": "healthcheck",
                    "method": "healthcheck",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Healthcheck s)]",
                    "class": "HasHealthcheck",
                    "optional": true,
                    "label": "_healthcheck"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"logentries\" <$> TF.attribute",
                    "name": "logentries",
                    "method": "logentries",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Logentries s)]",
                    "class": "HasLogentries",
                    "optional": true,
                    "label": "_logentries"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name for this Service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"papertrail\" <$> TF.attribute",
                    "name": "papertrail",
                    "method": "papertrail",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Papertrail s)]",
                    "class": "HasPapertrail",
                    "optional": true,
                    "label": "_papertrail"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_setting\" <$> TF.attribute",
                    "name": "request_setting",
                    "method": "requestSetting",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (RequestSetting s)]",
                    "class": "HasRequestSetting",
                    "optional": true,
                    "label": "_requestSetting"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_object\" <$> TF.attribute",
                    "name": "response_object",
                    "method": "responseObject",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ResponseObject s)]",
                    "class": "HasResponseObject",
                    "optional": true,
                    "label": "_responseObject"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"s3logging\" <$> TF.attribute",
                    "name": "s3logging",
                    "method": "s3logging",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (S3logging s)]",
                    "class": "HasS3logging",
                    "optional": true,
                    "label": "_s3logging"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sumologic\" <$> TF.attribute",
                    "name": "sumologic",
                    "method": "sumologic",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Sumologic s)]",
                    "class": "HasSumologic",
                    "optional": true,
                    "label": "_sumologic"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"syslog\" <$> TF.attribute",
                    "name": "syslog",
                    "method": "syslog",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Syslog s)]",
                    "class": "HasSyslog",
                    "optional": true,
                    "label": "_syslog"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"vcl\" <$> TF.attribute",
                    "name": "vcl",
                    "method": "vcl",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Vcl s)]",
                    "class": "HasVcl",
                    "optional": true,
                    "label": "_vcl"
                }
            ],
            "schema": "Resource",
            "name": "ServiceV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"active_version\" <$> TF.attribute",
                    "name": "active_version",
                    "method": "computedActiveVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedActiveVersion",
                    "optional": false,
                    "label": "_computedActiveVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The default hostname for the version"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_host\" <$> TF.attribute",
                    "name": "default_host",
                    "method": "computedDefaultHost",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultHost",
                    "optional": true,
                    "label": "_computedDefaultHost"
                }
            ],
            "parameters": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "domain",
                    "method": "domain",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Domain s)]",
                    "class": "HasDomain",
                    "optional": false,
                    "label": "_domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name for this Service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ServiceV1Resource s",
            "original": "fastly_service_v1"
        }
    ],
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "Fastly",
    "parameters": [],
    "package": "terrafomo-fastly",
    "type": "Provider",
    "original": "fastly"
}