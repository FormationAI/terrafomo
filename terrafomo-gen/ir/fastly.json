{
    "settings": [
        {
            "con": {
                "smart": "newBackendSetting",
                "name": "BackendSetting'"
            },
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "An IPv4, hostname, or IPv6 address for the Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Should this Backend be load balanced"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"auto_loadbalance\" <$> TF.attribute",
                    "name": "_autoLoadbalance",
                    "method": "autoLoadbalance",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAutoLoadbalance",
                    "validate": false,
                    "optional": true,
                    "original": "auto_loadbalance"
                },
                {
                    "default": "TF.value 10000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How long to wait between bytes in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"between_bytes_timeout\" <$> TF.attribute",
                    "name": "_betweenBytesTimeout",
                    "method": "betweenBytesTimeout",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasBetweenBytesTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "between_bytes_timeout"
                },
                {
                    "default": "TF.value 1000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How long to wait for a timeout in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"connect_timeout\" <$> TF.attribute",
                    "name": "_connectTimeout",
                    "method": "connectTimeout",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasConnectTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "connect_timeout"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Number of errors to allow before the Backend is marked as down"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"error_threshold\" <$> TF.attribute",
                    "name": "_errorThreshold",
                    "method": "errorThreshold",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasErrorThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "error_threshold"
                },
                {
                    "default": "TF.value 15000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How long to wait for the first bytes in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"first_byte_timeout\" <$> TF.attribute",
                    "name": "_firstByteTimeout",
                    "method": "firstByteTimeout",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasFirstByteTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "first_byte_timeout"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The healthcheck name that should be used for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthcheck\" <$> TF.attribute",
                    "name": "_healthcheck",
                    "method": "healthcheck",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHealthcheck",
                    "validate": false,
                    "optional": true,
                    "original": "healthcheck"
                },
                {
                    "default": "TF.value 200",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Maximum number of connections for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_conn\" <$> TF.attribute",
                    "name": "_maxConn",
                    "method": "maxConn",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasMaxConn",
                    "validate": false,
                    "optional": true,
                    "original": "max_conn"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Maximum allowed TLS version on SSL connections to this backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_tls_version\" <$> TF.attribute",
                    "name": "_maxTlsVersion",
                    "method": "maxTlsVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMaxTlsVersion",
                    "validate": false,
                    "optional": true,
                    "original": "max_tls_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Minimum allowed TLS version on SSL connections to this backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_tls_version\" <$> TF.attribute",
                    "name": "_minTlsVersion",
                    "method": "minTlsVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMinTlsVersion",
                    "validate": false,
                    "optional": true,
                    "original": "min_tls_version"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value 80",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The port number Backend responds on. Default 80"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition, which if met, will select this backend during a",
                        "request."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "_requestCondition",
                    "method": "requestCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "validate": false,
                    "optional": true,
                    "original": "request_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The POP of the shield designated to reduce inbound load."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"shield\" <$> TF.attribute",
                    "name": "_shield",
                    "method": "shield",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasShield",
                    "validate": false,
                    "optional": true,
                    "original": "shield"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "CA certificate attached to origin."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_ca_cert\" <$> TF.attribute",
                    "name": "_sslCaCert",
                    "method": "sslCaCert",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCaCert",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_ca_cert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL certificate hostname for cert verification"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_cert_hostname\" <$> TF.attribute",
                    "name": "_sslCertHostname",
                    "method": "sslCertHostname",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCertHostname",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_cert_hostname"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Be strict on checking SSL certs"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_check_cert\" <$> TF.attribute",
                    "name": "_sslCheckCert",
                    "method": "sslCheckCert",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasSslCheckCert",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_check_cert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Comma sepparated list of ciphers"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_ciphers\" <$> TF.attribute",
                    "name": "_sslCiphers",
                    "method": "sslCiphers",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslCiphers",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_ciphers"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL certificate file for client connections to the backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_client_cert\" <$> TF.attribute",
                    "name": "_sslClientCert",
                    "method": "sslClientCert",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslClientCert",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_client_cert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL key file for client connections to backend."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_client_key\" <$> TF.attribute",
                    "name": "_sslClientKey",
                    "method": "sslClientKey",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslClientKey",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_client_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "SSL certificate hostname for SNI verification"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ssl_sni_hostname\" <$> TF.attribute",
                    "name": "_sslSniHostname",
                    "method": "sslSniHostname",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSslSniHostname",
                    "validate": false,
                    "optional": true,
                    "original": "ssl_sni_hostname"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether or not to use SSL to reach the Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"use_ssl\" <$> TF.attribute",
                    "name": "_useSsl",
                    "method": "useSsl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUseSsl",
                    "validate": false,
                    "optional": true,
                    "original": "use_ssl"
                },
                {
                    "default": "TF.value 100",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The portion of traffic to send to a specific origins. Each origin receives",
                        "weight/total of the traffic."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "_weight",
                    "method": "weight",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasWeight",
                    "validate": false,
                    "optional": true,
                    "original": "weight"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.backend",
            "name": "BackendSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "An IPv4, hostname, or IPv6 address for the Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name for this Backend"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "BackendSetting s",
            "original": "backend"
        },
        {
            "con": {
                "smart": "newBigqueryloggingSetting",
                "name": "BigqueryloggingSetting'"
            },
            "arguments": [
                {
                    "default": "_dataset",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery dataset"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"dataset\" <$> TF.attribute",
                    "name": "_dataset",
                    "method": "dataset",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDataset",
                    "validate": false,
                    "optional": false,
                    "original": "dataset"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The email address associated with the target BigQuery dataset on your",
                        "account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_email",
                    "method": "email",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "validate": false,
                    "optional": true,
                    "original": "email"
                },
                {
                    "default": "TF.value \"%h %l %u %t \\\"%r\\\" %>s %b\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The logging format desired."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": true,
                    "original": "format"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_projectId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your GCP project"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "_projectId",
                    "method": "projectId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "validate": false,
                    "optional": false,
                    "original": "project_id"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The secret key associated with the target BigQuery dataset on your account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"secret_key\" <$> TF.attribute",
                    "name": "_secretKey",
                    "method": "secretKey",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecretKey",
                    "validate": false,
                    "optional": true,
                    "original": "secret_key"
                },
                {
                    "default": "_table",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery table"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"table\" <$> TF.attribute",
                    "name": "_table",
                    "method": "table",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTable",
                    "validate": false,
                    "optional": false,
                    "original": "table"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.bigquerylogging",
            "name": "BigqueryloggingSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_dataset",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery dataset"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"dataset\" <$> TF.attribute",
                    "name": "_dataset",
                    "method": "dataset",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDataset",
                    "validate": false,
                    "optional": false,
                    "original": "dataset"
                },
                {
                    "default": "_projectId",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your GCP project"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "_projectId",
                    "method": "projectId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "validate": false,
                    "optional": false,
                    "original": "project_id"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_table",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The ID of your BigQuery table"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"table\" <$> TF.attribute",
                    "name": "_table",
                    "method": "table",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTable",
                    "validate": false,
                    "optional": false,
                    "original": "table"
                }
            ],
            "conflicts": [],
            "type": "BigqueryloggingSetting s",
            "original": "bigquerylogging"
        },
        {
            "con": {
                "smart": "newCacheSetting",
                "name": "CacheSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Action to take"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "validate": false,
                    "optional": true,
                    "original": "action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to check if this Cache Setting applies"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "_cacheCondition",
                    "method": "cacheCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "validate": false,
                    "optional": true,
                    "original": "cache_condition"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Cache Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Max 'Time To Live' for stale (unreachable) objects."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"stale_ttl\" <$> TF.attribute",
                    "name": "_staleTtl",
                    "method": "staleTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasStaleTtl",
                    "validate": false,
                    "optional": true,
                    "original": "stale_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The 'Time To Live' for the object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "_ttl",
                    "method": "ttl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasTtl",
                    "validate": false,
                    "optional": true,
                    "original": "ttl"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.cache_setting",
            "name": "CacheSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Cache Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "CacheSetting s",
            "original": "cache_setting"
        },
        {
            "con": {
                "smart": "newConditionSetting",
                "name": "ConditionSetting'"
            },
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value 10",
                    "computed": false,
                    "required": false,
                    "help": [
                        "A number used to determine the order in which multiple conditions execute.",
                        "Lower numbers execute first"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": true,
                    "original": "priority"
                },
                {
                    "default": "_statement",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The statement used to determine if the condition is met"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"statement\" <$> TF.attribute",
                    "name": "_statement",
                    "method": "statement",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatement",
                    "validate": false,
                    "optional": false,
                    "original": "statement"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type of the condition, either `REQUEST`, `RESPONSE`, or `CACHE`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.condition",
            "name": "ConditionSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_statement",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The statement used to determine if the condition is met"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"statement\" <$> TF.attribute",
                    "name": "_statement",
                    "method": "statement",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatement",
                    "validate": false,
                    "optional": false,
                    "original": "statement"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type of the condition, either `REQUEST`, `RESPONSE`, or `CACHE`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "ConditionSetting s",
            "original": "condition"
        },
        {
            "con": {
                "smart": "newDomainSetting",
                "name": "DomainSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"comment\" <$> TF.attribute",
                    "name": "_comment",
                    "method": "comment",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComment",
                    "validate": false,
                    "optional": true,
                    "original": "comment"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The domain that this Service will respond to"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.domain",
            "name": "DomainSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The domain that this Service will respond to"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "DomainSetting s",
            "original": "domain"
        },
        {
            "con": {
                "smart": "newGcsloggingSetting",
                "name": "GcsloggingSetting'"
            },
            "arguments": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the bucket in which to store the logs."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The email address associated with the target GCS bucket on your account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "_email",
                    "method": "email",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "validate": false,
                    "optional": true,
                    "original": "email"
                },
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": true,
                    "original": "format"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Gzip Compression level"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"gzip_level\" <$> TF.attribute",
                    "name": "_gzipLevel",
                    "method": "gzipLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasGzipLevel",
                    "validate": false,
                    "optional": true,
                    "original": "gzip_level"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The log message type per the fastly docs:",
                        "https://docs.fastly.com/api/logging#logging_gcs"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "_messageType",
                    "method": "messageType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "validate": false,
                    "optional": true,
                    "original": "message_type"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Path to store the files. Must end with a trailing slash"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": true,
                    "original": "path"
                },
                {
                    "default": "TF.value 3600",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How frequently the logs should be transferred, in seconds (Default 3600)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "_period",
                    "method": "period",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPeriod",
                    "validate": false,
                    "optional": true,
                    "original": "period"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The secret key associated with the target gcs bucket on your account."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"secret_key\" <$> TF.attribute",
                    "name": "_secretKey",
                    "method": "secretKey",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecretKey",
                    "validate": false,
                    "optional": true,
                    "original": "secret_key"
                },
                {
                    "default": "TF.value \"%Y-%m-%dT%H:%M:%S.000\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timestamp_format\" <$> TF.attribute",
                    "name": "_timestampFormat",
                    "method": "timestampFormat",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTimestampFormat",
                    "validate": false,
                    "optional": true,
                    "original": "timestamp_format"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.gcslogging",
            "name": "GcsloggingSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The name of the bucket in which to store the logs."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "GcsloggingSetting s",
            "original": "gcslogging"
        },
        {
            "con": {
                "smart": "newGzipSetting",
                "name": "GzipSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition controlling when this gzip configuration applies."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "_cacheCondition",
                    "method": "cacheCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "validate": false,
                    "optional": true,
                    "original": "cache_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Content types to apply automatic gzip to"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_types\" <$> TF.attribute",
                    "name": "_contentTypes",
                    "method": "contentTypes",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasContentTypes",
                    "validate": false,
                    "optional": true,
                    "original": "content_types"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "File extensions to apply automatic gzip to. Do not include '.'"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"extensions\" <$> TF.attribute",
                    "name": "_extensions",
                    "method": "extensions",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasExtensions",
                    "validate": false,
                    "optional": true,
                    "original": "extensions"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this gzip condition"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.gzip",
            "name": "GzipSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this gzip condition"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "GzipSetting s",
            "original": "gzip"
        },
        {
            "con": {
                "smart": "newHeaderSetting",
                "name": "HeaderSetting'"
            },
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [
                        "One of set, append, delete, regex, or regex_repeat"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "validate": false,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional name of a cache condition to apply."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "_cacheCondition",
                    "method": "cacheCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "validate": false,
                    "optional": true,
                    "original": "cache_condition"
                },
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Header this affects"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Don't add the header if it is already. (Only applies to 'set' action.).",
                        "Default `false`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"ignore_if_set\" <$> TF.attribute",
                    "name": "_ignoreIfSet",
                    "method": "ignoreIfSet",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIgnoreIfSet",
                    "validate": false,
                    "optional": true,
                    "original": "ignore_if_set"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Header object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value 100",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Lower priorities execute first. (Default: 100.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"priority\" <$> TF.attribute",
                    "name": "_priority",
                    "method": "priority",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPriority",
                    "validate": false,
                    "optional": true,
                    "original": "priority"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Regular expression to use (Only applies to 'regex' and 'regex_repeat'",
                        "actions.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"regex\" <$> TF.attribute",
                    "name": "_regex",
                    "method": "regex",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegex",
                    "validate": false,
                    "optional": true,
                    "original": "regex"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional name of a request condition to apply."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "_requestCondition",
                    "method": "requestCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "validate": false,
                    "optional": true,
                    "original": "request_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Optional name of a response condition to apply."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Variable to be used as a source for the header content (Does not apply to",
                        "'delete' action.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_source",
                    "method": "source",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "validate": false,
                    "optional": true,
                    "original": "source"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Value to substitute in place of regular expression. (Only applies to 'regex'",
                        "and 'regex_repeat'.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"substitution\" <$> TF.attribute",
                    "name": "_substitution",
                    "method": "substitution",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubstitution",
                    "validate": false,
                    "optional": true,
                    "original": "substitution"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type to manipulate: request, fetch, cache, response"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.header",
            "name": "HeaderSetting",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Regular expression to use (Only applies to 'regex' and 'regex_repeat'",
                        "actions.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"regex\" <$> TF.attribute",
                    "name": "_computedRegex",
                    "method": "computedRegex",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegex",
                    "validate": false,
                    "optional": false,
                    "original": "regex"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Variable to be used as a source for the header content (Does not apply to",
                        "'delete' action.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "_computedSource",
                    "method": "computedSource",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSource",
                    "validate": false,
                    "optional": false,
                    "original": "source"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "Value to substitute in place of regular expression. (Only applies to 'regex'",
                        "and 'regex_repeat'.)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"substitution\" <$> TF.attribute",
                    "name": "_computedSubstitution",
                    "method": "computedSubstitution",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubstitution",
                    "validate": false,
                    "optional": false,
                    "original": "substitution"
                }
            ],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [
                        "One of set, append, delete, regex, or regex_repeat"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "validate": false,
                    "optional": false,
                    "original": "action"
                },
                {
                    "default": "_destination",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Header this affects"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination\" <$> TF.attribute",
                    "name": "_destination",
                    "method": "destination",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestination",
                    "validate": false,
                    "optional": false,
                    "original": "destination"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this Header object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Type to manipulate: request, fetch, cache, response"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "_type'",
                    "method": "type'",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "validate": false,
                    "optional": false,
                    "original": "type"
                }
            ],
            "conflicts": [],
            "type": "HeaderSetting s",
            "original": "header"
        },
        {
            "con": {
                "smart": "newHealthcheckSetting",
                "name": "HealthcheckSetting'"
            },
            "arguments": [
                {
                    "default": "TF.value 5000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How often to run the healthcheck in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"check_interval\" <$> TF.attribute",
                    "name": "_checkInterval",
                    "method": "checkInterval",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasCheckInterval",
                    "validate": false,
                    "optional": true,
                    "original": "check_interval"
                },
                {
                    "default": "TF.value 200",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The status code expected from the host"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_response\" <$> TF.attribute",
                    "name": "_expectedResponse",
                    "method": "expectedResponse",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasExpectedResponse",
                    "validate": false,
                    "optional": true,
                    "original": "expected_response"
                },
                {
                    "default": "_host",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Which host to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": false,
                    "original": "host"
                },
                {
                    "default": "TF.value \"1.1\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether to use version 1.0 or 1.1 HTTP"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_version\" <$> TF.attribute",
                    "name": "_httpVersion",
                    "method": "httpVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHttpVersion",
                    "validate": false,
                    "optional": true,
                    "original": "http_version"
                },
                {
                    "default": "TF.value 2",
                    "computed": false,
                    "required": false,
                    "help": [
                        "When loading a config, the initial number of probes to be seen as OK"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"initial\" <$> TF.attribute",
                    "name": "_initial",
                    "method": "initial",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasInitial",
                    "validate": false,
                    "optional": true,
                    "original": "initial"
                },
                {
                    "default": "TF.value \"HEAD\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Which HTTP method to use"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"method\" <$> TF.attribute",
                    "name": "_method",
                    "method": "method",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMethod",
                    "validate": false,
                    "optional": true,
                    "original": "method"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this healthcheck"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The path to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                },
                {
                    "default": "TF.value 3",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How many healthchecks must succeed to be considered healthy"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"threshold\" <$> TF.attribute",
                    "name": "_threshold",
                    "method": "threshold",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasThreshold",
                    "validate": false,
                    "optional": true,
                    "original": "threshold"
                },
                {
                    "default": "TF.value 500",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Timeout in milliseconds"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "_timeout",
                    "method": "timeout",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasTimeout",
                    "validate": false,
                    "optional": true,
                    "original": "timeout"
                },
                {
                    "default": "TF.value 5",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The number of most recent healthcheck queries to keep for this healthcheck"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"window\" <$> TF.attribute",
                    "name": "_window",
                    "method": "window",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasWindow",
                    "validate": false,
                    "optional": true,
                    "original": "window"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.healthcheck",
            "name": "HealthcheckSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_host",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Which host to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "_host",
                    "method": "host",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "validate": false,
                    "optional": false,
                    "original": "host"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this healthcheck"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_path",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The path to check"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": false,
                    "original": "path"
                }
            ],
            "conflicts": [],
            "type": "HealthcheckSetting s",
            "original": "healthcheck"
        },
        {
            "con": {
                "smart": "newLogentriesSetting",
                "name": "LogentriesSetting'"
            },
            "arguments": [
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": true,
                    "original": "format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format used for the configured endpoint.",
                        "Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "_formatVersion",
                    "method": "formatVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasFormatVersion",
                    "validate": false,
                    "optional": true,
                    "original": "format_version"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value 20000",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The port number configured in Logentries"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                },
                {
                    "default": "_token",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Use token based authentication (https://logentries.com/doc/input-token/)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "_token",
                    "method": "token",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "validate": false,
                    "optional": false,
                    "original": "token"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Whether to use TLS for secure logging"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"use_tls\" <$> TF.attribute",
                    "name": "_useTls",
                    "method": "useTls",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUseTls",
                    "validate": false,
                    "optional": true,
                    "original": "use_tls"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.logentries",
            "name": "LogentriesSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_token",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Use token based authentication (https://logentries.com/doc/input-token/)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "_token",
                    "method": "token",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "validate": false,
                    "optional": false,
                    "original": "token"
                }
            ],
            "conflicts": [],
            "type": "LogentriesSetting s",
            "original": "logentries"
        },
        {
            "con": {
                "smart": "newPapertrailSetting",
                "name": "PapertrailSetting'"
            },
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": true,
                    "original": "format"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The port of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPort",
                    "validate": false,
                    "optional": false,
                    "original": "port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.papertrail",
            "name": "PapertrailSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The port of the papertrail service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPort",
                    "validate": false,
                    "optional": false,
                    "original": "port"
                }
            ],
            "conflicts": [],
            "type": "PapertrailSetting s",
            "original": "papertrail"
        },
        {
            "con": {
                "smart": "newRequestSetting",
                "name": "RequestSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Allows you to terminate request handling and immediately perform an action"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "_action",
                    "method": "action",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "validate": false,
                    "optional": true,
                    "original": "action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Disable collapsed forwarding"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bypass_busy_wait\" <$> TF.attribute",
                    "name": "_bypassBusyWait",
                    "method": "bypassBusyWait",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasBypassBusyWait",
                    "validate": false,
                    "optional": true,
                    "original": "bypass_busy_wait"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The host header"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_host\" <$> TF.attribute",
                    "name": "_defaultHost",
                    "method": "defaultHost",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultHost",
                    "validate": false,
                    "optional": true,
                    "original": "default_host"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Force a cache miss for the request"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_miss\" <$> TF.attribute",
                    "name": "_forceMiss",
                    "method": "forceMiss",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceMiss",
                    "validate": false,
                    "optional": true,
                    "original": "force_miss"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Forces the request use SSL"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_ssl\" <$> TF.attribute",
                    "name": "_forceSsl",
                    "method": "forceSsl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceSsl",
                    "validate": false,
                    "optional": true,
                    "original": "force_ssl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Inject Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"geo_headers\" <$> TF.attribute",
                    "name": "_geoHeaders",
                    "method": "geoHeaders",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasGeoHeaders",
                    "validate": false,
                    "optional": true,
                    "original": "geo_headers"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Comma separated list of varnish request object fields that should be in the",
                        "hash key"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"hash_keys\" <$> TF.attribute",
                    "name": "_hashKeys",
                    "method": "hashKeys",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHashKeys",
                    "validate": false,
                    "optional": true,
                    "original": "hash_keys"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How old an object is allowed to be, in seconds. Default `60`"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_stale_age\" <$> TF.attribute",
                    "name": "_maxStaleAge",
                    "method": "maxStaleAge",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasMaxStaleAge",
                    "validate": false,
                    "optional": true,
                    "original": "max_stale_age"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this Request Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a request condition to apply. If there is no condition this setting",
                        "will always be applied."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "_requestCondition",
                    "method": "requestCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "validate": false,
                    "optional": true,
                    "original": "request_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Injects the X-Timer info into the request"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timer_support\" <$> TF.attribute",
                    "name": "_timerSupport",
                    "method": "timerSupport",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasTimerSupport",
                    "validate": false,
                    "optional": true,
                    "original": "timer_support"
                },
                {
                    "default": "TF.value \"append\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "X-Forwarded-For options"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"xff\" <$> TF.attribute",
                    "name": "_xff",
                    "method": "xff",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasXff",
                    "validate": false,
                    "optional": true,
                    "original": "xff"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.request_setting",
            "name": "RequestSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this Request Setting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "RequestSetting s",
            "original": "request_setting"
        },
        {
            "con": {
                "smart": "newResponseObjectSetting",
                "name": "ResponseObjectSetting'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of the condition checked after we have retrieved an object. If the",
                        "condition passes then deliver this Request Object instead."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_condition\" <$> TF.attribute",
                    "name": "_cacheCondition",
                    "method": "cacheCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCacheCondition",
                    "validate": false,
                    "optional": true,
                    "original": "cache_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The content to deliver for the response object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "_content",
                    "method": "content",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "validate": false,
                    "optional": true,
                    "original": "content"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The MIME type of the content"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "_contentType",
                    "method": "contentType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentType",
                    "validate": false,
                    "optional": true,
                    "original": "content_type"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this request object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of the condition to be checked during the request phase to see if the",
                        "object should be delivered"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_condition\" <$> TF.attribute",
                    "name": "_requestCondition",
                    "method": "requestCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRequestCondition",
                    "validate": false,
                    "optional": true,
                    "original": "request_condition"
                },
                {
                    "default": "TF.value \"OK\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The HTTP Response of the object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response\" <$> TF.attribute",
                    "name": "_response",
                    "method": "response",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponse",
                    "validate": false,
                    "optional": true,
                    "original": "response"
                },
                {
                    "default": "TF.value 200",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The HTTP Status Code of the object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "_status",
                    "method": "status",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasStatus",
                    "validate": false,
                    "optional": true,
                    "original": "status"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.response_object",
            "name": "ResponseObjectSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this request object"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ResponseObjectSetting s",
            "original": "response_object"
        },
        {
            "con": {
                "smart": "newS3loggingSetting",
                "name": "S3loggingSetting'"
            },
            "arguments": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "S3 Bucket name to store logs in"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                },
                {
                    "default": "TF.value \"s3.amazonaws.com\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Bucket endpoint"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "_domain",
                    "method": "domain",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomain",
                    "validate": false,
                    "optional": true,
                    "original": "domain"
                },
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": true,
                    "original": "format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format used for the configured endpoint.",
                        "Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "_formatVersion",
                    "method": "formatVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasFormatVersion",
                    "validate": false,
                    "optional": true,
                    "original": "format_version"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Gzip Compression level"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"gzip_level\" <$> TF.attribute",
                    "name": "_gzipLevel",
                    "method": "gzipLevel",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasGzipLevel",
                    "validate": false,
                    "optional": true,
                    "original": "gzip_level"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How the message should be formatted."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "_messageType",
                    "method": "messageType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "validate": false,
                    "optional": true,
                    "original": "message_type"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Path to store the files. Must end with a trailing slash"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"path\" <$> TF.attribute",
                    "name": "_path",
                    "method": "path",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPath",
                    "validate": false,
                    "optional": true,
                    "original": "path"
                },
                {
                    "default": "TF.value 3600",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How frequently the logs should be transferred, in seconds (Default 3600)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"period\" <$> TF.attribute",
                    "name": "_period",
                    "method": "period",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPeriod",
                    "validate": false,
                    "optional": true,
                    "original": "period"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The S3 redundancy level."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"redundancy\" <$> TF.attribute",
                    "name": "_redundancy",
                    "method": "redundancy",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRedundancy",
                    "validate": false,
                    "optional": true,
                    "original": "redundancy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "AWS Access Key"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"s3_access_key\" <$> TF.attribute",
                    "name": "_s3AccessKey",
                    "method": "s3AccessKey",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasS3AccessKey",
                    "validate": false,
                    "optional": true,
                    "original": "s3_access_key"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "AWS Secret Key"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"s3_secret_key\" <$> TF.attribute",
                    "name": "_s3SecretKey",
                    "method": "s3SecretKey",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasS3SecretKey",
                    "validate": false,
                    "optional": true,
                    "original": "s3_secret_key"
                },
                {
                    "default": "TF.value \"%Y-%m-%dT%H:%M:%S.000\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"timestamp_format\" <$> TF.attribute",
                    "name": "_timestampFormat",
                    "method": "timestampFormat",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTimestampFormat",
                    "validate": false,
                    "optional": true,
                    "original": "timestamp_format"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.s3logging",
            "name": "S3loggingSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_bucketName",
                    "computed": false,
                    "required": true,
                    "help": [
                        "S3 Bucket name to store logs in"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"bucket_name\" <$> TF.attribute",
                    "name": "_bucketName",
                    "method": "bucketName",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBucketName",
                    "validate": false,
                    "optional": false,
                    "original": "bucket_name"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "S3loggingSetting s",
            "original": "s3logging"
        },
        {
            "con": {
                "smart": "newSumologicSetting",
                "name": "SumologicSetting'"
            },
            "arguments": [
                {
                    "default": "TF.value \"%h %l %u %t %r %>s\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": true,
                    "original": "format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format used for the configured endpoint.",
                        "Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "_formatVersion",
                    "method": "formatVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasFormatVersion",
                    "validate": false,
                    "optional": true,
                    "original": "format_version"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How the message should be formatted."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "_messageType",
                    "method": "messageType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "validate": false,
                    "optional": true,
                    "original": "message_type"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The URL to POST to."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "_url",
                    "method": "url",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "validate": false,
                    "optional": false,
                    "original": "url"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.sumologic",
            "name": "SumologicSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "_url",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The URL to POST to."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "_url",
                    "method": "url",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrl",
                    "validate": false,
                    "optional": false,
                    "original": "url"
                }
            ],
            "conflicts": [],
            "type": "SumologicSetting s",
            "original": "sumologic"
        },
        {
            "con": {
                "smart": "newSyslogSetting",
                "name": "SyslogSetting'"
            },
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the syslog service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "TF.value \"%h %l %u %t \\\"%r\\\" %>s %b\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Apache-style string or VCL variables to use for log formatting"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format\" <$> TF.attribute",
                    "name": "_format",
                    "method": "format",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFormat",
                    "validate": false,
                    "optional": true,
                    "original": "format"
                },
                {
                    "default": "TF.value 1",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The version of the custom logging format. Can be either 1 or 2. (Default: 1)"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"format_version\" <$> TF.attribute",
                    "name": "_formatVersion",
                    "method": "formatVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasFormatVersion",
                    "validate": false,
                    "optional": true,
                    "original": "format_version"
                },
                {
                    "default": "TF.value \"classic\"",
                    "computed": false,
                    "required": false,
                    "help": [
                        "How the message should be formatted."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"message_type\" <$> TF.attribute",
                    "name": "_messageType",
                    "method": "messageType",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMessageType",
                    "validate": false,
                    "optional": true,
                    "original": "message_type"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.value 514",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The port of the syslog service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "_port",
                    "method": "port",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasPort",
                    "validate": false,
                    "optional": true,
                    "original": "port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Name of a condition to apply this logging."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_condition\" <$> TF.attribute",
                    "name": "_responseCondition",
                    "method": "responseCondition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasResponseCondition",
                    "validate": false,
                    "optional": true,
                    "original": "response_condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "A secure certificate to authenticate the server with."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_ca_cert\" <$> TF.attribute",
                    "name": "_tlsCaCert",
                    "method": "tlsCaCert",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTlsCaCert",
                    "validate": false,
                    "optional": true,
                    "original": "tls_ca_cert"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Used during the TLS handshake to validate the certificate."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tls_hostname\" <$> TF.attribute",
                    "name": "_tlsHostname",
                    "method": "tlsHostname",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTlsHostname",
                    "validate": false,
                    "optional": true,
                    "original": "tls_hostname"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Authentication token"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"token\" <$> TF.attribute",
                    "name": "_token",
                    "method": "token",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasToken",
                    "validate": false,
                    "optional": true,
                    "original": "token"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Use TLS for secure logging"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"use_tls\" <$> TF.attribute",
                    "name": "_useTls",
                    "method": "useTls",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasUseTls",
                    "validate": false,
                    "optional": true,
                    "original": "use_tls"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.syslog",
            "name": "SyslogSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The address of the syslog service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "_address",
                    "method": "address",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "validate": false,
                    "optional": false,
                    "original": "address"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name to refer to this logging setup"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "SyslogSetting s",
            "original": "syslog"
        },
        {
            "con": {
                "smart": "newVclSetting",
                "name": "VclSetting'"
            },
            "arguments": [
                {
                    "default": "_content",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The contents of this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "_content",
                    "method": "content",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "validate": false,
                    "optional": false,
                    "original": "content"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [
                        "Should this VCL configuration be the main configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"main\" <$> TF.attribute",
                    "name": "_main",
                    "method": "main",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMain",
                    "validate": false,
                    "optional": true,
                    "original": "main"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "dependencies": [],
            "key": "fastly_service_v1.vcl",
            "name": "VclSetting",
            "threaded": true,
            "attributes": [],
            "parameters": [
                {
                    "default": "_content",
                    "computed": false,
                    "required": true,
                    "help": [
                        "The contents of this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "_content",
                    "method": "content",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "validate": false,
                    "optional": false,
                    "original": "content"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "A name to refer to this VCL configuration"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "VclSetting s",
            "original": "vcl"
        }
    ],
    "url": "https://www.terraform.io/docs/providers/fastly/index.html",
    "dataSources": [
        {
            "con": {
                "smart": "ipRangesData",
                "name": "IpRangesData'"
            },
            "arguments": [],
            "url": "https://www.terraform.io/docs/providers/fastly/d/ip_ranges.html",
            "dependencies": [],
            "key": "fastly_ip_ranges",
            "name": "IpRangesData",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr_blocks\" <$> TF.attribute",
                    "name": "_computedCidrBlocks",
                    "method": "computedCidrBlocks",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedCidrBlocks",
                    "validate": false,
                    "optional": false,
                    "original": "cidr_blocks"
                }
            ],
            "parameters": [],
            "conflicts": [],
            "type": "IpRangesData s",
            "original": "fastly_ip_ranges"
        }
    ],
    "resources": [
        {
            "con": {
                "smart": "serviceV1Resource",
                "name": "ServiceV1Resource'"
            },
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"backend\" <$> TF.attribute",
                    "name": "_backend",
                    "method": "backend",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (BackendSetting s)]",
                    "class": "HasBackend",
                    "validate": false,
                    "optional": true,
                    "original": "backend"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"bigquerylogging\" <$> TF.attribute",
                    "name": "_bigquerylogging",
                    "method": "bigquerylogging",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (BigqueryloggingSetting s)]",
                    "class": "HasBigquerylogging",
                    "validate": false,
                    "optional": true,
                    "original": "bigquerylogging"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cache_setting\" <$> TF.attribute",
                    "name": "_cacheSetting",
                    "method": "cacheSetting",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (CacheSetting s)]",
                    "class": "HasCacheSetting",
                    "validate": false,
                    "optional": true,
                    "original": "cache_setting"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"condition\" <$> TF.attribute",
                    "name": "_condition",
                    "method": "condition",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ConditionSetting s)]",
                    "class": "HasCondition",
                    "validate": false,
                    "optional": true,
                    "original": "condition"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The default hostname for the version"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_host\" <$> TF.attribute",
                    "name": "_defaultHost",
                    "method": "defaultHost",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultHost",
                    "validate": false,
                    "optional": true,
                    "original": "default_host"
                },
                {
                    "default": "TF.value 3600",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The default Time-to-live (TTL) for the version"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_ttl\" <$> TF.attribute",
                    "name": "_defaultTtl",
                    "method": "defaultTtl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasDefaultTtl",
                    "validate": false,
                    "optional": true,
                    "original": "default_ttl"
                },
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "_domain",
                    "method": "domain",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (DomainSetting s)]",
                    "class": "HasDomain",
                    "validate": false,
                    "optional": false,
                    "original": "domain"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_destroy\" <$> TF.attribute",
                    "name": "_forceDestroy",
                    "method": "forceDestroy",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceDestroy",
                    "validate": false,
                    "optional": true,
                    "original": "force_destroy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gcslogging\" <$> TF.attribute",
                    "name": "_gcslogging",
                    "method": "gcslogging",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (GcsloggingSetting s)]",
                    "class": "HasGcslogging",
                    "validate": false,
                    "optional": true,
                    "original": "gcslogging"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gzip\" <$> TF.attribute",
                    "name": "_gzip",
                    "method": "gzip",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (GzipSetting s)]",
                    "class": "HasGzip",
                    "validate": false,
                    "optional": true,
                    "original": "gzip"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"header\" <$> TF.attribute",
                    "name": "_header",
                    "method": "header",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (HeaderSetting s)]",
                    "class": "HasHeader",
                    "validate": false,
                    "optional": true,
                    "original": "header"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"healthcheck\" <$> TF.attribute",
                    "name": "_healthcheck",
                    "method": "healthcheck",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (HealthcheckSetting s)]",
                    "class": "HasHealthcheck",
                    "validate": false,
                    "optional": true,
                    "original": "healthcheck"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"logentries\" <$> TF.attribute",
                    "name": "_logentries",
                    "method": "logentries",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (LogentriesSetting s)]",
                    "class": "HasLogentries",
                    "validate": false,
                    "optional": true,
                    "original": "logentries"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name for this Service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"papertrail\" <$> TF.attribute",
                    "name": "_papertrail",
                    "method": "papertrail",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (PapertrailSetting s)]",
                    "class": "HasPapertrail",
                    "validate": false,
                    "optional": true,
                    "original": "papertrail"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"request_setting\" <$> TF.attribute",
                    "name": "_requestSetting",
                    "method": "requestSetting",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (RequestSetting s)]",
                    "class": "HasRequestSetting",
                    "validate": false,
                    "optional": true,
                    "original": "request_setting"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"response_object\" <$> TF.attribute",
                    "name": "_responseObject",
                    "method": "responseObject",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (ResponseObjectSetting s)]",
                    "class": "HasResponseObject",
                    "validate": false,
                    "optional": true,
                    "original": "response_object"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"s3logging\" <$> TF.attribute",
                    "name": "_s3logging",
                    "method": "s3logging",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (S3loggingSetting s)]",
                    "class": "HasS3logging",
                    "validate": false,
                    "optional": true,
                    "original": "s3logging"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sumologic\" <$> TF.attribute",
                    "name": "_sumologic",
                    "method": "sumologic",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (SumologicSetting s)]",
                    "class": "HasSumologic",
                    "validate": false,
                    "optional": true,
                    "original": "sumologic"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"syslog\" <$> TF.attribute",
                    "name": "_syslog",
                    "method": "syslog",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (SyslogSetting s)]",
                    "class": "HasSyslog",
                    "validate": false,
                    "optional": true,
                    "original": "syslog"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"vcl\" <$> TF.attribute",
                    "name": "_vcl",
                    "method": "vcl",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (VclSetting s)]",
                    "class": "HasVcl",
                    "validate": false,
                    "optional": true,
                    "original": "vcl"
                }
            ],
            "url": "https://www.terraform.io/docs/providers/fastly/r/service_v1.html",
            "dependencies": [
                "BackendSetting",
                "BigqueryloggingSetting",
                "CacheSetting",
                "ConditionSetting",
                "DomainSetting",
                "GcsloggingSetting",
                "GzipSetting",
                "HeaderSetting",
                "HealthcheckSetting",
                "LogentriesSetting",
                "PapertrailSetting",
                "RequestSetting",
                "ResponseObjectSetting",
                "S3loggingSetting",
                "SumologicSetting",
                "SyslogSetting",
                "VclSetting"
            ],
            "key": "fastly_service_v1",
            "name": "ServiceV1Resource",
            "threaded": true,
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "_computedId",
                    "method": "computedId",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "validate": false,
                    "optional": false,
                    "original": "id"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"active_version\" <$> TF.attribute",
                    "name": "_computedActiveVersion",
                    "method": "computedActiveVersion",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Int",
                    "class": "HasComputedActiveVersion",
                    "validate": false,
                    "optional": false,
                    "original": "active_version"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The default hostname for the version"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_host\" <$> TF.attribute",
                    "name": "_computedDefaultHost",
                    "method": "computedDefaultHost",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultHost",
                    "validate": false,
                    "optional": false,
                    "original": "default_host"
                }
            ],
            "parameters": [
                {
                    "default": "_domain",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain\" <$> TF.attribute",
                    "name": "_domain",
                    "method": "domain",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (DomainSetting s)]",
                    "class": "HasDomain",
                    "validate": false,
                    "optional": false,
                    "original": "domain"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [
                        "Unique name for this Service"
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "_name",
                    "method": "name",
                    "threaded": true,
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "validate": false,
                    "optional": false,
                    "original": "name"
                }
            ],
            "conflicts": [],
            "type": "ServiceV1Resource s",
            "original": "fastly_service_v1"
        }
    ],
    "schema": {
        "con": {
            "smart": "newProvider",
            "name": "Provider'"
        },
        "arguments": [
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "Fastly API Key from https://app.fastly.com/#account"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"api_key\" <$>",
                "name": "_apiKey",
                "method": "apiKey",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasApiKey",
                "validate": false,
                "optional": true,
                "original": "api_key"
            },
            {
                "default": "P.Nothing",
                "computed": false,
                "required": false,
                "help": [
                    "Fastly API URL"
                ],
                "forceNew": false,
                "encoder": "TF.assign \"base_url\" <$>",
                "name": "_baseUrl",
                "method": "baseUrl",
                "threaded": false,
                "conflicts": [],
                "type": "P.Maybe P.Text",
                "class": "HasBaseUrl",
                "validate": false,
                "optional": true,
                "original": "base_url"
            }
        ],
        "dependencies": [],
        "key": "provider",
        "name": "Provider",
        "threaded": false,
        "attributes": [],
        "parameters": [],
        "conflicts": [],
        "type": "Provider",
        "original": "provider"
    },
    "dependencies": [
        "aeson",
        "base",
        "containers",
        "microlens",
        "terrafomo",
        "text"
    ],
    "name": "Fastly",
    "package": "terrafomo-fastly",
    "primitives": [],
    "original": "fastly"
}