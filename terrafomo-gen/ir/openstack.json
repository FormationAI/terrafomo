{
    "settings": [
        {
            "arguments": [
                {
                    "default": "_content",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "content",
                    "method": "content",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "optional": false,
                    "label": "_content"
                },
                {
                    "default": "_file",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"file\" <$> TF.attribute",
                    "name": "file",
                    "method": "file",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFile",
                    "optional": false,
                    "label": "_file"
                }
            ],
            "name": "Personality",
            "attributes": [],
            "parameters": [
                {
                    "default": "_content",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "content",
                    "method": "content",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "optional": false,
                    "label": "_content"
                },
                {
                    "default": "_file",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"file\" <$> TF.attribute",
                    "name": "file",
                    "method": "file",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFile",
                    "optional": false,
                    "label": "_file"
                }
            ],
            "hashable": false,
            "type": "Personality s",
            "original": "personality"
        },
        {
            "arguments": [
                {
                    "default": "_ipAddress",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": false,
                    "label": "_ipAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mac_address\" <$> TF.attribute",
                    "name": "mac_address",
                    "method": "macAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMacAddress",
                    "optional": true,
                    "label": "_macAddress"
                }
            ],
            "name": "AllowedAddressPairs",
            "attributes": [],
            "parameters": [
                {
                    "default": "_ipAddress",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": false,
                    "label": "_ipAddress"
                }
            ],
            "hashable": false,
            "type": "AllowedAddressPairs s",
            "original": "allowed_address_pairs"
        },
        {
            "arguments": [],
            "name": "Roles",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role_id\" <$> TF.attribute",
                    "name": "role_id",
                    "method": "computedRoleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRoleId",
                    "optional": false,
                    "label": "_computedRoleId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"role_name\" <$> TF.attribute",
                    "name": "role_name",
                    "method": "computedRoleName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRoleName",
                    "optional": false,
                    "label": "_computedRoleName"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Roles s",
            "original": "roles"
        },
        {
            "arguments": [
                {
                    "default": "_rule",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "rule",
                    "method": "rule",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasRule",
                    "optional": false,
                    "label": "_rule"
                }
            ],
            "name": "MultiFactorAuthRule",
            "attributes": [],
            "parameters": [
                {
                    "default": "_rule",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "rule",
                    "method": "rule",
                    "conflicts": [],
                    "type": "TF.Attr s (P.NonEmpty (TF.Attr s P.Text))",
                    "class": "HasRule",
                    "optional": false,
                    "label": "_rule"
                }
            ],
            "hashable": false,
            "type": "MultiFactorAuthRule s",
            "original": "multi_factor_auth_rule"
        },
        {
            "arguments": [],
            "name": "HostRoutes",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_cidr\" <$> TF.attribute",
                    "name": "destination_cidr",
                    "method": "computedDestinationCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDestinationCidr",
                    "optional": false,
                    "label": "_computedDestinationCidr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"next_hop\" <$> TF.attribute",
                    "name": "next_hop",
                    "method": "computedNextHop",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNextHop",
                    "optional": false,
                    "label": "_computedNextHop"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "HostRoutes s",
            "original": "host_routes"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"charset\" <$> TF.attribute",
                    "name": "charset",
                    "method": "charset",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCharset",
                    "optional": true,
                    "label": "_charset"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"collate\" <$> TF.attribute",
                    "name": "collate",
                    "method": "collate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCollate",
                    "optional": true,
                    "label": "_collate"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "name": "Database",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "Database s",
            "original": "database"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"additional_properties\" <$> TF.attribute",
                    "name": "additional_properties",
                    "method": "additionalProperties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasAdditionalProperties",
                    "optional": true,
                    "label": "_additionalProperties"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"build_near_host_ip\" <$> TF.attribute",
                    "name": "build_near_host_ip",
                    "method": "buildNearHostIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasBuildNearHostIp",
                    "optional": true,
                    "label": "_buildNearHostIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"different_host\" <$> TF.attribute",
                    "name": "different_host",
                    "method": "differentHost",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDifferentHost",
                    "optional": true,
                    "label": "_differentHost"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"group\" <$> TF.attribute",
                    "name": "group",
                    "method": "group",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGroup",
                    "optional": true,
                    "label": "_group"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"query\" <$> TF.attribute",
                    "name": "query",
                    "method": "query",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasQuery",
                    "optional": true,
                    "label": "_query"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"same_host\" <$> TF.attribute",
                    "name": "same_host",
                    "method": "sameHost",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSameHost",
                    "optional": true,
                    "label": "_sameHost"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"target_cell\" <$> TF.attribute",
                    "name": "target_cell",
                    "method": "targetCell",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTargetCell",
                    "optional": true,
                    "label": "_targetCell"
                }
            ],
            "name": "SchedulerHints",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "SchedulerHints s",
            "original": "scheduler_hints"
        },
        {
            "arguments": [],
            "name": "Dpd",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "computedAction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAction",
                    "optional": true,
                    "label": "_computedAction"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"interval\" <$> TF.attribute",
                    "name": "interval",
                    "method": "computedInterval",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedInterval",
                    "optional": true,
                    "label": "_computedInterval"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "computedTimeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTimeout",
                    "optional": true,
                    "label": "_computedTimeout"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Dpd s",
            "original": "dpd"
        },
        {
            "arguments": [
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                }
            ],
            "name": "Volume",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device\" <$> TF.attribute",
                    "name": "device",
                    "method": "computedDevice",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDevice",
                    "optional": true,
                    "label": "_computedDevice"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": true,
                    "label": "_computedId"
                }
            ],
            "parameters": [
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                }
            ],
            "hashable": false,
            "type": "Volume s",
            "original": "volume"
        },
        {
            "arguments": [],
            "name": "Lifetime",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"units\" <$> TF.attribute",
                    "name": "units",
                    "method": "computedUnits",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUnits",
                    "optional": true,
                    "label": "_computedUnits"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "computedValue",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedValue",
                    "optional": true,
                    "label": "_computedValue"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Lifetime s",
            "original": "lifetime"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr\" <$> TF.attribute",
                    "name": "cidr",
                    "method": "cidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCidr",
                    "optional": true,
                    "label": "_cidr"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"from_group_id\" <$> TF.attribute",
                    "name": "from_group_id",
                    "method": "fromGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFromGroupId",
                    "optional": true,
                    "label": "_fromGroupId"
                },
                {
                    "default": "_fromPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"from_port\" <$> TF.attribute",
                    "name": "from_port",
                    "method": "fromPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFromPort",
                    "optional": false,
                    "label": "_fromPort"
                },
                {
                    "default": "_ipProtocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_protocol\" <$> TF.attribute",
                    "name": "ip_protocol",
                    "method": "ipProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpProtocol",
                    "optional": false,
                    "label": "_ipProtocol"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"self\" <$> TF.attribute",
                    "name": "self",
                    "method": "self",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasSelf",
                    "optional": true,
                    "label": "_self"
                },
                {
                    "default": "_toPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"to_port\" <$> TF.attribute",
                    "name": "to_port",
                    "method": "toPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasToPort",
                    "optional": false,
                    "label": "_toPort"
                }
            ],
            "name": "Rule",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                }
            ],
            "parameters": [
                {
                    "default": "_fromPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"from_port\" <$> TF.attribute",
                    "name": "from_port",
                    "method": "fromPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasFromPort",
                    "optional": false,
                    "label": "_fromPort"
                },
                {
                    "default": "_ipProtocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_protocol\" <$> TF.attribute",
                    "name": "ip_protocol",
                    "method": "ipProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpProtocol",
                    "optional": false,
                    "label": "_ipProtocol"
                },
                {
                    "default": "_toPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"to_port\" <$> TF.attribute",
                    "name": "to_port",
                    "method": "toPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasToPort",
                    "optional": false,
                    "label": "_toPort"
                }
            ],
            "hashable": false,
            "type": "Rule s",
            "original": "rule"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"fixed_ip_v4\" <$> TF.attribute",
                    "name": "fixed_ip_v4",
                    "method": "fixedIpV4",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFixedIpV4",
                    "optional": true,
                    "label": "_fixedIpV4"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"fixed_ip_v6\" <$> TF.attribute",
                    "name": "fixed_ip_v6",
                    "method": "fixedIpV6",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFixedIpV6",
                    "optional": true,
                    "label": "_fixedIpV6"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPort",
                    "optional": true,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"uuid\" <$> TF.attribute",
                    "name": "uuid",
                    "method": "uuid",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUuid",
                    "optional": true,
                    "label": "_uuid"
                }
            ],
            "name": "Network",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Network s",
            "original": "network"
        },
        {
            "arguments": [],
            "name": "Attachment",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device\" <$> TF.attribute",
                    "name": "device",
                    "method": "computedDevice",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDevice",
                    "optional": false,
                    "label": "_computedDevice"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"id\" <$> TF.attribute",
                    "name": "id",
                    "method": "computedId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedId",
                    "optional": false,
                    "label": "_computedId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "computedInstanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInstanceId",
                    "optional": false,
                    "label": "_computedInstanceId"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "Attachment s",
            "original": "attachment"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"databases\" <$> TF.attribute",
                    "name": "databases",
                    "method": "databases",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasDatabases",
                    "optional": true,
                    "label": "_databases"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "optional": true,
                    "label": "_host"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"password\" <$> TF.attribute",
                    "name": "password",
                    "method": "password",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPassword",
                    "optional": true,
                    "label": "_password"
                }
            ],
            "name": "User",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "hashable": false,
            "type": "User s",
            "original": "user"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cookie_name\" <$> TF.attribute",
                    "name": "cookie_name",
                    "method": "cookieName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCookieName",
                    "optional": true,
                    "label": "_cookieName"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "name": "Persistence",
            "attributes": [],
            "parameters": [
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "hashable": false,
            "type": "Persistence s",
            "original": "persistence"
        },
        {
            "arguments": [
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                },
                {
                    "default": "_version",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "version",
                    "method": "version",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVersion",
                    "optional": false,
                    "label": "_version"
                }
            ],
            "name": "Datastore",
            "attributes": [],
            "parameters": [
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                },
                {
                    "default": "_version",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "version",
                    "method": "version",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVersion",
                    "optional": false,
                    "label": "_version"
                }
            ],
            "hashable": false,
            "type": "Datastore s",
            "original": "datastore"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": true,
                    "label": "_ipAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": true,
                    "label": "_subnetId"
                }
            ],
            "name": "ExternalFixedIp",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "ExternalFixedIp s",
            "original": "external_fixed_ip"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_type\" <$> TF.attribute",
                    "name": "network_type",
                    "method": "networkType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetworkType",
                    "optional": true,
                    "label": "_networkType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"physical_network\" <$> TF.attribute",
                    "name": "physical_network",
                    "method": "physicalNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPhysicalNetwork",
                    "optional": true,
                    "label": "_physicalNetwork"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"segmentation_id\" <$> TF.attribute",
                    "name": "segmentation_id",
                    "method": "segmentationId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSegmentationId",
                    "optional": true,
                    "label": "_segmentationId"
                }
            ],
            "name": "Segments",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "Segments s",
            "original": "segments"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": true,
                    "label": "_ipAddress"
                },
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "name": "FixedIp",
            "attributes": [],
            "parameters": [
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "hashable": false,
            "type": "FixedIp s",
            "original": "fixed_ip"
        },
        {
            "arguments": [],
            "name": "AllocationPools",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"end\" <$> TF.attribute",
                    "name": "end",
                    "method": "computedEnd",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEnd",
                    "optional": false,
                    "label": "_computedEnd"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"start\" <$> TF.attribute",
                    "name": "start",
                    "method": "computedStart",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStart",
                    "optional": false,
                    "label": "_computedStart"
                }
            ],
            "parameters": [],
            "hashable": false,
            "type": "AllocationPools s",
            "original": "allocation_pools"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "name": "Configuration",
            "attributes": [],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_value",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value\" <$> TF.attribute",
                    "name": "value",
                    "method": "value",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasValue",
                    "optional": false,
                    "label": "_value"
                }
            ],
            "hashable": false,
            "type": "Configuration s",
            "original": "configuration"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"set_router_gateway_after_create\" <$> TF.attribute",
                    "name": "set_router_gateway_after_create",
                    "method": "setRouterGatewayAfterCreate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasSetRouterGatewayAfterCreate",
                    "optional": true,
                    "label": "_setRouterGatewayAfterCreate"
                }
            ],
            "name": "VendorOptions",
            "attributes": [],
            "parameters": [],
            "hashable": false,
            "type": "VendorOptions s",
            "original": "vendor_options"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"boot_index\" <$> TF.attribute",
                    "name": "boot_index",
                    "method": "bootIndex",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasBootIndex",
                    "optional": true,
                    "label": "_bootIndex"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"delete_on_termination\" <$> TF.attribute",
                    "name": "delete_on_termination",
                    "method": "deleteOnTermination",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDeleteOnTermination",
                    "optional": true,
                    "label": "_deleteOnTermination"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"destination_type\" <$> TF.attribute",
                    "name": "destination_type",
                    "method": "destinationType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationType",
                    "optional": true,
                    "label": "_destinationType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"guest_format\" <$> TF.attribute",
                    "name": "guest_format",
                    "method": "guestFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGuestFormat",
                    "optional": true,
                    "label": "_guestFormat"
                },
                {
                    "default": "_sourceType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_type\" <$> TF.attribute",
                    "name": "source_type",
                    "method": "sourceType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceType",
                    "optional": false,
                    "label": "_sourceType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"uuid\" <$> TF.attribute",
                    "name": "uuid",
                    "method": "uuid",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUuid",
                    "optional": true,
                    "label": "_uuid"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_size\" <$> TF.attribute",
                    "name": "volume_size",
                    "method": "volumeSize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVolumeSize",
                    "optional": true,
                    "label": "_volumeSize"
                }
            ],
            "name": "BlockDevice",
            "attributes": [],
            "parameters": [
                {
                    "default": "_sourceType",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_type\" <$> TF.attribute",
                    "name": "source_type",
                    "method": "sourceType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceType",
                    "optional": false,
                    "label": "_sourceType"
                }
            ],
            "hashable": false,
            "type": "BlockDevice s",
            "original": "block_device"
        }
    ],
    "arguments": [
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The Identity authentication URL."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"auth_url\" <$>",
            "name": "auth_url",
            "method": "authUrl",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasAuthUrl",
            "optional": true,
            "label": "_authUrl"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "A Custom CA certificate."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"cacert_file\" <$>",
            "name": "cacert_file",
            "method": "cacertFile",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasCacertFile",
            "optional": true,
            "label": "_cacertFile"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "A client certificate to authenticate with."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"cert\" <$>",
            "name": "cert",
            "method": "cert",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasCert",
            "optional": true,
            "label": "_cert"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "An entry in a `clouds.yaml` file to use."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"cloud\" <$>",
            "name": "cloud",
            "method": "cloud",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasCloud",
            "optional": true,
            "label": "_cloud"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The name of the Domain ID to scope to if no other domain is specified.",
                "Defaults to `default` (Identity v3)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"default_domain\" <$>",
            "name": "default_domain",
            "method": "defaultDomain",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasDefaultDomain",
            "optional": true,
            "label": "_defaultDomain"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The ID of the Domain to scope to (Identity v3)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"domain_id\" <$>",
            "name": "domain_id",
            "method": "domainId",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasDomainId",
            "optional": true,
            "label": "_domainId"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The name of the Domain to scope to (Identity v3)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"domain_name\" <$>",
            "name": "domain_name",
            "method": "domainName",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasDomainName",
            "optional": true,
            "label": "_domainName"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [],
            "forceNew": false,
            "encoder": "TF.assign \"endpoint_type\" <$>",
            "name": "endpoint_type",
            "method": "endpointType",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasEndpointType",
            "optional": true,
            "label": "_endpointType"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Trust self-signed certificates."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"insecure\" <$>",
            "name": "insecure",
            "method": "insecure",
            "conflicts": [],
            "type": "P.Maybe P.Bool",
            "class": "HasInsecure",
            "optional": true,
            "label": "_insecure"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "A client private key to authenticate with."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"key\" <$>",
            "name": "key",
            "method": "key",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasKey",
            "optional": true,
            "label": "_key"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Password to login with."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"password\" <$>",
            "name": "password",
            "method": "password",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasPassword",
            "optional": true,
            "label": "_password"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The ID of the domain where the proejct resides (Identity v3)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"project_domain_id\" <$>",
            "name": "project_domain_id",
            "method": "projectDomainId",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasProjectDomainId",
            "optional": true,
            "label": "_projectDomainId"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The name of the domain where the project resides (Identity v3)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"project_domain_name\" <$>",
            "name": "project_domain_name",
            "method": "projectDomainName",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasProjectDomainName",
            "optional": true,
            "label": "_projectDomainName"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The OpenStack region to connect to."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"region\" <$>",
            "name": "region",
            "method": "region",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasRegion",
            "optional": true,
            "label": "_region"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Use Swift's authentication system instead of Keystone. Only used for",
                "interaction with Swift."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"swauth\" <$>",
            "name": "swauth",
            "method": "swauth",
            "conflicts": [],
            "type": "P.Maybe P.Bool",
            "class": "HasSwauth",
            "optional": true,
            "label": "_swauth"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The ID of the Tenant (Identity v2) or Project (Identity v3) to login with."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"tenant_id\" <$>",
            "name": "tenant_id",
            "method": "tenantId",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasTenantId",
            "optional": true,
            "label": "_tenantId"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The name of the Tenant (Identity v2) or Project (Identity v3) to login with."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"tenant_name\" <$>",
            "name": "tenant_name",
            "method": "tenantName",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasTenantName",
            "optional": true,
            "label": "_tenantName"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Authentication token to use as an alternative to username/password."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"token\" <$>",
            "name": "token",
            "method": "token",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasToken",
            "optional": true,
            "label": "_token"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "If set to `true`, API requests will go the Load Balancer service (Octavia)",
                "instead of the Networking service (Neutron)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"use_octavia\" <$>",
            "name": "use_octavia",
            "method": "useOctavia",
            "conflicts": [],
            "type": "P.Maybe P.Bool",
            "class": "HasUseOctavia",
            "optional": true,
            "label": "_useOctavia"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The ID of the domain where the user resides (Identity v3)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"user_domain_id\" <$>",
            "name": "user_domain_id",
            "method": "userDomainId",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasUserDomainId",
            "optional": true,
            "label": "_userDomainId"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "The name of the domain where the user resides (Identity v3)."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"user_domain_name\" <$>",
            "name": "user_domain_name",
            "method": "userDomainName",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasUserDomainName",
            "optional": true,
            "label": "_userDomainName"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Username to login with."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"user_id\" <$>",
            "name": "user_id",
            "method": "userId",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasUserId",
            "optional": true,
            "label": "_userId"
        },
        {
            "default": "P.Nothing",
            "computed": false,
            "required": false,
            "help": [
                "Username to login with."
            ],
            "forceNew": false,
            "encoder": "TF.assign \"user_name\" <$>",
            "name": "user_name",
            "method": "userName",
            "conflicts": [],
            "type": "P.Maybe P.Text",
            "class": "HasUserName",
            "optional": true,
            "label": "_userName"
        }
    ],
    "dataSources": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "disk",
                    "method": "disk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDisk",
                    "optional": true,
                    "label": "_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"min_disk\" <$> TF.attribute",
                    "name": "min_disk",
                    "method": "minDisk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinDisk",
                    "optional": true,
                    "label": "_minDisk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"min_ram\" <$> TF.attribute",
                    "name": "min_ram",
                    "method": "minRam",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinRam",
                    "optional": true,
                    "label": "_minRam"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ram\" <$> TF.attribute",
                    "name": "ram",
                    "method": "ram",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRam",
                    "optional": true,
                    "label": "_ram"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"rx_tx_factor\" <$> TF.attribute",
                    "name": "rx_tx_factor",
                    "method": "rxTxFactor",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasRxTxFactor",
                    "optional": true,
                    "label": "_rxTxFactor"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"swap\" <$> TF.attribute",
                    "name": "swap",
                    "method": "swap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSwap",
                    "optional": true,
                    "label": "_swap"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vcpus\" <$> TF.attribute",
                    "name": "vcpus",
                    "method": "vcpus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVcpus",
                    "optional": true,
                    "label": "_vcpus"
                }
            ],
            "schema": "DataSource",
            "name": "ComputeFlavorV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_public\" <$> TF.attribute",
                    "name": "is_public",
                    "method": "computedIsPublic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIsPublic",
                    "optional": false,
                    "label": "_computedIsPublic"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [],
            "type": "ComputeFlavorV2Data s",
            "original": "openstack_compute_flavor_v2"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "DataSource",
            "name": "ComputeKeypairV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "public_key",
                    "method": "computedPublicKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPublicKey",
                    "optional": false,
                    "label": "_computedPublicKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ComputeKeypairV2Data s",
            "original": "openstack_compute_keypair_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "optional": true,
                    "label": "_email"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "optional": true,
                    "label": "_status"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "ttl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTtl",
                    "optional": true,
                    "label": "_ttl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": true,
                    "label": "_type'"
                }
            ],
            "schema": "DataSource",
            "name": "DnsZoneV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attributes\" <$> TF.attribute",
                    "name": "attributes",
                    "method": "computedAttributes",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedAttributes",
                    "optional": true,
                    "label": "_computedAttributes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_at\" <$> TF.attribute",
                    "name": "created_at",
                    "method": "computedCreatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedAt",
                    "optional": true,
                    "label": "_computedCreatedAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"masters\" <$> TF.attribute",
                    "name": "masters",
                    "method": "computedMasters",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedMasters",
                    "optional": true,
                    "label": "_computedMasters"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "computedPoolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPoolId",
                    "optional": true,
                    "label": "_computedPoolId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "project_id",
                    "method": "computedProjectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectId",
                    "optional": true,
                    "label": "_computedProjectId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"serial\" <$> TF.attribute",
                    "name": "serial",
                    "method": "computedSerial",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSerial",
                    "optional": true,
                    "label": "_computedSerial"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"transferred_at\" <$> TF.attribute",
                    "name": "transferred_at",
                    "method": "computedTransferredAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTransferredAt",
                    "optional": true,
                    "label": "_computedTransferredAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"updated_at\" <$> TF.attribute",
                    "name": "updated_at",
                    "method": "computedUpdatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdatedAt",
                    "optional": true,
                    "label": "_computedUpdatedAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"version\" <$> TF.attribute",
                    "name": "version",
                    "method": "computedVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedVersion",
                    "optional": true,
                    "label": "_computedVersion"
                }
            ],
            "parameters": [],
            "type": "DnsZoneV2Data s",
            "original": "openstack_dns_zone_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_id\" <$> TF.attribute",
                    "name": "policy_id",
                    "method": "policyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyId",
                    "optional": true,
                    "label": "_policyId"
                }
            ],
            "schema": "DataSource",
            "name": "FwPolicyV1Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"audited\" <$> TF.attribute",
                    "name": "audited",
                    "method": "computedAudited",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAudited",
                    "optional": false,
                    "label": "_computedAudited"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "optional": false,
                    "label": "_computedDescription"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rules\" <$> TF.attribute",
                    "name": "rules",
                    "method": "computedRules",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedRules",
                    "optional": false,
                    "label": "_computedRules"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"shared\" <$> TF.attribute",
                    "name": "shared",
                    "method": "computedShared",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedShared",
                    "optional": false,
                    "label": "_computedShared"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [],
            "type": "FwPolicyV1Data s",
            "original": "openstack_fw_policy_v1"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "DataSource",
            "name": "IdentityAuthScopeV3Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_domain_id\" <$> TF.attribute",
                    "name": "project_domain_id",
                    "method": "computedProjectDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectDomainId",
                    "optional": false,
                    "label": "_computedProjectDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_domain_name\" <$> TF.attribute",
                    "name": "project_domain_name",
                    "method": "computedProjectDomainName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectDomainName",
                    "optional": false,
                    "label": "_computedProjectDomainName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "project_id",
                    "method": "computedProjectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectId",
                    "optional": false,
                    "label": "_computedProjectId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"project_name\" <$> TF.attribute",
                    "name": "project_name",
                    "method": "computedProjectName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectName",
                    "optional": false,
                    "label": "_computedProjectName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"roles\" <$> TF.attribute",
                    "name": "roles",
                    "method": "computedRoles",
                    "conflicts": [],
                    "type": "TF.Attr s [Roles s]",
                    "class": "HasComputedRoles",
                    "optional": false,
                    "label": "_computedRoles"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_domain_id\" <$> TF.attribute",
                    "name": "user_domain_id",
                    "method": "computedUserDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUserDomainId",
                    "optional": false,
                    "label": "_computedUserDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_domain_name\" <$> TF.attribute",
                    "name": "user_domain_name",
                    "method": "computedUserDomainName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUserDomainName",
                    "optional": false,
                    "label": "_computedUserDomainName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_id\" <$> TF.attribute",
                    "name": "user_id",
                    "method": "computedUserId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUserId",
                    "optional": false,
                    "label": "_computedUserId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"user_name\" <$> TF.attribute",
                    "name": "user_name",
                    "method": "computedUserName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUserName",
                    "optional": false,
                    "label": "_computedUserName"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "IdentityAuthScopeV3Data s",
            "original": "openstack_identity_auth_scope_v3"
        },
        {
            "arguments": [
                {
                    "default": "TF.value \"public\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"interface\" <$> TF.attribute",
                    "name": "interface",
                    "method": "interface",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInterface",
                    "optional": true,
                    "label": "_interface"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_id\" <$> TF.attribute",
                    "name": "service_id",
                    "method": "serviceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceId",
                    "optional": true,
                    "label": "_serviceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"service_name\" <$> TF.attribute",
                    "name": "service_name",
                    "method": "serviceName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasServiceName",
                    "optional": true,
                    "label": "_serviceName"
                }
            ],
            "schema": "DataSource",
            "name": "IdentityEndpointV3Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url\" <$> TF.attribute",
                    "name": "url",
                    "method": "computedUrl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUrl",
                    "optional": false,
                    "label": "_computedUrl"
                }
            ],
            "parameters": [],
            "type": "IdentityEndpointV3Data s",
            "original": "openstack_identity_endpoint_v3"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "DataSource",
            "name": "IdentityGroupV3Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "computedDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomainId",
                    "optional": true,
                    "label": "_computedDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "IdentityGroupV3Data s",
            "original": "openstack_identity_group_v3"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "optional": true,
                    "label": "_enabled"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_domain\" <$> TF.attribute",
                    "name": "is_domain",
                    "method": "isDomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIsDomain",
                    "optional": true,
                    "label": "_isDomain"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"parent_id\" <$> TF.attribute",
                    "name": "parent_id",
                    "method": "parentId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasParentId",
                    "optional": true,
                    "label": "_parentId"
                }
            ],
            "schema": "DataSource",
            "name": "IdentityProjectV3Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "optional": false,
                    "label": "_computedDescription"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "computedDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomainId",
                    "optional": true,
                    "label": "_computedDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [],
            "type": "IdentityProjectV3Data s",
            "original": "openstack_identity_project_v3"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "DataSource",
            "name": "IdentityRoleV3Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "computedDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomainId",
                    "optional": true,
                    "label": "_computedDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "IdentityRoleV3Data s",
            "original": "openstack_identity_role_v3"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "optional": true,
                    "label": "_enabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"idp_id\" <$> TF.attribute",
                    "name": "idp_id",
                    "method": "idpId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIdpId",
                    "optional": true,
                    "label": "_idpId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"password_expires_at\" <$> TF.attribute",
                    "name": "password_expires_at",
                    "method": "passwordExpiresAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPasswordExpiresAt",
                    "optional": true,
                    "label": "_passwordExpiresAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol_id\" <$> TF.attribute",
                    "name": "protocol_id",
                    "method": "protocolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocolId",
                    "optional": true,
                    "label": "_protocolId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"unique_id\" <$> TF.attribute",
                    "name": "unique_id",
                    "method": "uniqueId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUniqueId",
                    "optional": true,
                    "label": "_uniqueId"
                }
            ],
            "schema": "DataSource",
            "name": "IdentityUserV3Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_project_id\" <$> TF.attribute",
                    "name": "default_project_id",
                    "method": "computedDefaultProjectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultProjectId",
                    "optional": false,
                    "label": "_computedDefaultProjectId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "computedDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomainId",
                    "optional": true,
                    "label": "_computedDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [],
            "type": "IdentityUserV3Data s",
            "original": "openstack_identity_user_v3"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"member_status\" <$> TF.attribute",
                    "name": "member_status",
                    "method": "memberStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMemberStatus",
                    "optional": true,
                    "label": "_memberStatus"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"most_recent\" <$> TF.attribute",
                    "name": "most_recent",
                    "method": "mostRecent",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMostRecent",
                    "optional": true,
                    "label": "_mostRecent"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"owner\" <$> TF.attribute",
                    "name": "owner",
                    "method": "owner",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOwner",
                    "optional": true,
                    "label": "_owner"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "properties",
                    "method": "properties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasProperties",
                    "optional": true,
                    "label": "_properties"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size_max\" <$> TF.attribute",
                    "name": "size_max",
                    "method": "sizeMax",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSizeMax",
                    "optional": true,
                    "label": "_sizeMax"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size_min\" <$> TF.attribute",
                    "name": "size_min",
                    "method": "sizeMin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSizeMin",
                    "optional": true,
                    "label": "_sizeMin"
                },
                {
                    "default": "TF.value \"asc\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"sort_direction\" <$> TF.attribute",
                    "name": "sort_direction",
                    "method": "sortDirection",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSortDirection",
                    "optional": true,
                    "label": "_sortDirection"
                },
                {
                    "default": "TF.value \"name\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"sort_key\" <$> TF.attribute",
                    "name": "sort_key",
                    "method": "sortKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSortKey",
                    "optional": true,
                    "label": "_sortKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tag\" <$> TF.attribute",
                    "name": "tag",
                    "method": "tag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTag",
                    "optional": true,
                    "label": "_tag"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"visibility\" <$> TF.attribute",
                    "name": "visibility",
                    "method": "visibility",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVisibility",
                    "optional": true,
                    "label": "_visibility"
                }
            ],
            "schema": "DataSource",
            "name": "ImagesImageV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"checksum\" <$> TF.attribute",
                    "name": "checksum",
                    "method": "computedChecksum",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedChecksum",
                    "optional": false,
                    "label": "_computedChecksum"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"container_format\" <$> TF.attribute",
                    "name": "container_format",
                    "method": "computedContainerFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedContainerFormat",
                    "optional": false,
                    "label": "_computedContainerFormat"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"disk_format\" <$> TF.attribute",
                    "name": "disk_format",
                    "method": "computedDiskFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDiskFormat",
                    "optional": false,
                    "label": "_computedDiskFormat"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"file\" <$> TF.attribute",
                    "name": "file",
                    "method": "computedFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFile",
                    "optional": false,
                    "label": "_computedFile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "optional": false,
                    "label": "_computedMetadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_disk_gb\" <$> TF.attribute",
                    "name": "min_disk_gb",
                    "method": "computedMinDiskGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMinDiskGb",
                    "optional": false,
                    "label": "_computedMinDiskGb"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_ram_mb\" <$> TF.attribute",
                    "name": "min_ram_mb",
                    "method": "computedMinRamMb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMinRamMb",
                    "optional": false,
                    "label": "_computedMinRamMb"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protected\" <$> TF.attribute",
                    "name": "protected",
                    "method": "computedProtected",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedProtected",
                    "optional": false,
                    "label": "_computedProtected"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"schema\" <$> TF.attribute",
                    "name": "schema",
                    "method": "computedSchema",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSchema",
                    "optional": false,
                    "label": "_computedSchema"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size_bytes\" <$> TF.attribute",
                    "name": "size_bytes",
                    "method": "computedSizeBytes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSizeBytes",
                    "optional": false,
                    "label": "_computedSizeBytes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"updated_at\" <$> TF.attribute",
                    "name": "updated_at",
                    "method": "computedUpdatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdatedAt",
                    "optional": false,
                    "label": "_computedUpdatedAt"
                }
            ],
            "parameters": [],
            "type": "ImagesImageV2Data s",
            "original": "openstack_images_image_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": true,
                    "label": "_address"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fixed_ip\" <$> TF.attribute",
                    "name": "fixed_ip",
                    "method": "fixedIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFixedIp",
                    "optional": true,
                    "label": "_fixedIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool\" <$> TF.attribute",
                    "name": "pool",
                    "method": "pool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPool",
                    "optional": true,
                    "label": "_pool"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_id\" <$> TF.attribute",
                    "name": "port_id",
                    "method": "portId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPortId",
                    "optional": true,
                    "label": "_portId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": true,
                    "label": "_region"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "optional": true,
                    "label": "_status"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "tenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTenantId",
                    "optional": true,
                    "label": "_tenantId"
                }
            ],
            "schema": "DataSource",
            "name": "NetworkingFloatingipV2Data",
            "attributes": [],
            "parameters": [],
            "type": "NetworkingFloatingipV2Data s",
            "original": "openstack_networking_floatingip_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external\" <$> TF.attribute",
                    "name": "external",
                    "method": "external",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasExternal",
                    "optional": true,
                    "label": "_external"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"matching_subnet_cidr\" <$> TF.attribute",
                    "name": "matching_subnet_cidr",
                    "method": "matchingSubnetCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasMatchingSubnetCidr",
                    "optional": true,
                    "label": "_matchingSubnetCidr"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_id\" <$> TF.attribute",
                    "name": "network_id",
                    "method": "networkId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetworkId",
                    "optional": true,
                    "label": "_networkId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "status",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasStatus",
                    "optional": true,
                    "label": "_status"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [
                        "The ID of the Tenant (Identity v2) or Project (Identity v3) to login with."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "tenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTenantId",
                    "optional": true,
                    "label": "_tenantId"
                }
            ],
            "schema": "DataSource",
            "name": "NetworkingNetworkV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "computedAdminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdminStateUp",
                    "optional": false,
                    "label": "_computedAdminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"availability_zone_hints\" <$> TF.attribute",
                    "name": "availability_zone_hints",
                    "method": "computedAvailabilityZoneHints",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedAvailabilityZoneHints",
                    "optional": false,
                    "label": "_computedAvailabilityZoneHints"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"shared\" <$> TF.attribute",
                    "name": "shared",
                    "method": "computedShared",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedShared",
                    "optional": false,
                    "label": "_computedShared"
                }
            ],
            "parameters": [],
            "type": "NetworkingNetworkV2Data s",
            "original": "openstack_networking_network_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"secgroup_id\" <$> TF.attribute",
                    "name": "secgroup_id",
                    "method": "secgroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecgroupId",
                    "optional": true,
                    "label": "_secgroupId"
                }
            ],
            "schema": "DataSource",
            "name": "NetworkingSecgroupV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [],
            "type": "NetworkingSecgroupV2Data s",
            "original": "openstack_networking_secgroup_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dhcp_disabled\" <$> TF.attribute",
                    "name": "dhcp_disabled",
                    "method": "dhcpDisabled",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "dhcpEnabled",
                            "label": "_dhcpEnabled"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDhcpDisabled",
                    "optional": true,
                    "label": "_dhcpDisabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dhcp_enabled\" <$> TF.attribute",
                    "name": "dhcp_enabled",
                    "method": "dhcpEnabled",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "dhcpDisabled",
                            "label": "_dhcpDisabled"
                        }
                    ],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDhcpEnabled",
                    "optional": true,
                    "label": "_dhcpEnabled"
                }
            ],
            "schema": "DataSource",
            "name": "NetworkingSubnetV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allocation_pools\" <$> TF.attribute",
                    "name": "allocation_pools",
                    "method": "computedAllocationPools",
                    "conflicts": [],
                    "type": "TF.Attr s [AllocationPools s]",
                    "class": "HasComputedAllocationPools",
                    "optional": false,
                    "label": "_computedAllocationPools"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"cidr\" <$> TF.attribute",
                    "name": "cidr",
                    "method": "computedCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCidr",
                    "optional": true,
                    "label": "_computedCidr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns_nameservers\" <$> TF.attribute",
                    "name": "dns_nameservers",
                    "method": "computedDnsNameservers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedDnsNameservers",
                    "optional": false,
                    "label": "_computedDnsNameservers"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_dhcp\" <$> TF.attribute",
                    "name": "enable_dhcp",
                    "method": "computedEnableDhcp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableDhcp",
                    "optional": false,
                    "label": "_computedEnableDhcp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway_ip\" <$> TF.attribute",
                    "name": "gateway_ip",
                    "method": "computedGatewayIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGatewayIp",
                    "optional": true,
                    "label": "_computedGatewayIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host_routes\" <$> TF.attribute",
                    "name": "host_routes",
                    "method": "computedHostRoutes",
                    "conflicts": [],
                    "type": "TF.Attr s [HostRoutes s]",
                    "class": "HasComputedHostRoutes",
                    "optional": false,
                    "label": "_computedHostRoutes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "ip_version",
                    "method": "computedIpVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedIpVersion",
                    "optional": true,
                    "label": "_computedIpVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ipv6_address_mode\" <$> TF.attribute",
                    "name": "ipv6_address_mode",
                    "method": "computedIpv6AddressMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6AddressMode",
                    "optional": true,
                    "label": "_computedIpv6AddressMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ipv6_ra_mode\" <$> TF.attribute",
                    "name": "ipv6_ra_mode",
                    "method": "computedIpv6RaMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6RaMode",
                    "optional": true,
                    "label": "_computedIpv6RaMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "optional": true,
                    "label": "_computedName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"network_id\" <$> TF.attribute",
                    "name": "network_id",
                    "method": "computedNetworkId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedNetworkId",
                    "optional": true,
                    "label": "_computedNetworkId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "computedSubnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetId",
                    "optional": true,
                    "label": "_computedSubnetId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnetpool_id\" <$> TF.attribute",
                    "name": "subnetpool_id",
                    "method": "computedSubnetpoolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetpoolId",
                    "optional": true,
                    "label": "_computedSubnetpoolId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [
                        "The ID of the Tenant (Identity v2) or Project (Identity v3) to login with."
                    ],
                    "forceNew": false,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [],
            "type": "NetworkingSubnetV2Data s",
            "original": "openstack_networking_subnet_v2"
        },
        {
            "arguments": [],
            "schema": "DataSource",
            "name": "NetworkingSubnetpoolV2Data",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address_scope_id\" <$> TF.attribute",
                    "name": "address_scope_id",
                    "method": "computedAddressScopeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddressScopeId",
                    "optional": true,
                    "label": "_computedAddressScopeId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_at\" <$> TF.attribute",
                    "name": "created_at",
                    "method": "computedCreatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedAt",
                    "optional": false,
                    "label": "_computedCreatedAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_prefixlen\" <$> TF.attribute",
                    "name": "default_prefixlen",
                    "method": "computedDefaultPrefixlen",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDefaultPrefixlen",
                    "optional": true,
                    "label": "_computedDefaultPrefixlen"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_quota\" <$> TF.attribute",
                    "name": "default_quota",
                    "method": "computedDefaultQuota",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDefaultQuota",
                    "optional": true,
                    "label": "_computedDefaultQuota"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "optional": true,
                    "label": "_computedDescription"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "ip_version",
                    "method": "computedIpVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedIpVersion",
                    "optional": true,
                    "label": "_computedIpVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_default\" <$> TF.attribute",
                    "name": "is_default",
                    "method": "computedIsDefault",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedIsDefault",
                    "optional": true,
                    "label": "_computedIsDefault"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_prefixlen\" <$> TF.attribute",
                    "name": "max_prefixlen",
                    "method": "computedMaxPrefixlen",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxPrefixlen",
                    "optional": true,
                    "label": "_computedMaxPrefixlen"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_prefixlen\" <$> TF.attribute",
                    "name": "min_prefixlen",
                    "method": "computedMinPrefixlen",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMinPrefixlen",
                    "optional": true,
                    "label": "_computedMinPrefixlen"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "optional": true,
                    "label": "_computedName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"prefixes\" <$> TF.attribute",
                    "name": "prefixes",
                    "method": "computedPrefixes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedPrefixes",
                    "optional": false,
                    "label": "_computedPrefixes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "project_id",
                    "method": "computedProjectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectId",
                    "optional": true,
                    "label": "_computedProjectId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"revision_number\" <$> TF.attribute",
                    "name": "revision_number",
                    "method": "computedRevisionNumber",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedRevisionNumber",
                    "optional": false,
                    "label": "_computedRevisionNumber"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"shared\" <$> TF.attribute",
                    "name": "shared",
                    "method": "computedShared",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedShared",
                    "optional": true,
                    "label": "_computedShared"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"updated_at\" <$> TF.attribute",
                    "name": "updated_at",
                    "method": "computedUpdatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdatedAt",
                    "optional": false,
                    "label": "_computedUpdatedAt"
                }
            ],
            "parameters": [],
            "type": "NetworkingSubnetpoolV2Data s",
            "original": "openstack_networking_subnetpool_v2"
        }
    ],
    "resources": [
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"attach_mode\" <$> TF.attribute",
                    "name": "attach_mode",
                    "method": "attachMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAttachMode",
                    "optional": true,
                    "label": "_attachMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"device\" <$> TF.attribute",
                    "name": "device",
                    "method": "device",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDevice",
                    "optional": true,
                    "label": "_device"
                },
                {
                    "default": "_hostName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host_name\" <$> TF.attribute",
                    "name": "host_name",
                    "method": "hostName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostName",
                    "optional": false,
                    "label": "_hostName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"initiator\" <$> TF.attribute",
                    "name": "initiator",
                    "method": "initiator",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInitiator",
                    "optional": true,
                    "label": "_initiator"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": true,
                    "label": "_instanceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": true,
                    "label": "_ipAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"multipath\" <$> TF.attribute",
                    "name": "multipath",
                    "method": "multipath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMultipath",
                    "optional": true,
                    "label": "_multipath"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"os_type\" <$> TF.attribute",
                    "name": "os_type",
                    "method": "osType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOsType",
                    "optional": true,
                    "label": "_osType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"platform\" <$> TF.attribute",
                    "name": "platform",
                    "method": "platform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPlatform",
                    "optional": true,
                    "label": "_platform"
                },
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"wwnn\" <$> TF.attribute",
                    "name": "wwnn",
                    "method": "wwnn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasWwnn",
                    "optional": true,
                    "label": "_wwnn"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"wwpn\" <$> TF.attribute",
                    "name": "wwpn",
                    "method": "wwpn",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasWwpn",
                    "optional": true,
                    "label": "_wwpn"
                }
            ],
            "schema": "Resource",
            "name": "BlockstorageVolumeAttachV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"data\" <$> TF.attribute",
                    "name": "data",
                    "method": "computedData'",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedData'",
                    "optional": false,
                    "label": "_computedData'"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"driver_volume_type\" <$> TF.attribute",
                    "name": "driver_volume_type",
                    "method": "computedDriverVolumeType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDriverVolumeType",
                    "optional": false,
                    "label": "_computedDriverVolumeType"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mount_point_base\" <$> TF.attribute",
                    "name": "mount_point_base",
                    "method": "computedMountPointBase",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMountPointBase",
                    "optional": false,
                    "label": "_computedMountPointBase"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_hostName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host_name\" <$> TF.attribute",
                    "name": "host_name",
                    "method": "hostName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostName",
                    "optional": false,
                    "label": "_hostName"
                },
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                }
            ],
            "type": "BlockstorageVolumeAttachV2Resource s",
            "original": "openstack_blockstorage_volume_attach_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"attach_mode\" <$> TF.attribute",
                    "name": "attach_mode",
                    "method": "attachMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAttachMode",
                    "optional": true,
                    "label": "_attachMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"device\" <$> TF.attribute",
                    "name": "device",
                    "method": "device",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDevice",
                    "optional": true,
                    "label": "_device"
                },
                {
                    "default": "_hostName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host_name\" <$> TF.attribute",
                    "name": "host_name",
                    "method": "hostName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostName",
                    "optional": false,
                    "label": "_hostName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"initiator\" <$> TF.attribute",
                    "name": "initiator",
                    "method": "initiator",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInitiator",
                    "optional": true,
                    "label": "_initiator"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_address\" <$> TF.attribute",
                    "name": "ip_address",
                    "method": "ipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpAddress",
                    "optional": true,
                    "label": "_ipAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"multipath\" <$> TF.attribute",
                    "name": "multipath",
                    "method": "multipath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMultipath",
                    "optional": true,
                    "label": "_multipath"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"os_type\" <$> TF.attribute",
                    "name": "os_type",
                    "method": "osType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasOsType",
                    "optional": true,
                    "label": "_osType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"platform\" <$> TF.attribute",
                    "name": "platform",
                    "method": "platform",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPlatform",
                    "optional": true,
                    "label": "_platform"
                },
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"wwnn\" <$> TF.attribute",
                    "name": "wwnn",
                    "method": "wwnn",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasWwnn",
                    "optional": true,
                    "label": "_wwnn"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"wwpn\" <$> TF.attribute",
                    "name": "wwpn",
                    "method": "wwpn",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasWwpn",
                    "optional": true,
                    "label": "_wwpn"
                }
            ],
            "schema": "Resource",
            "name": "BlockstorageVolumeAttachV3Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"data\" <$> TF.attribute",
                    "name": "data",
                    "method": "computedData'",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedData'",
                    "optional": false,
                    "label": "_computedData'"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"driver_volume_type\" <$> TF.attribute",
                    "name": "driver_volume_type",
                    "method": "computedDriverVolumeType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDriverVolumeType",
                    "optional": false,
                    "label": "_computedDriverVolumeType"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mount_point_base\" <$> TF.attribute",
                    "name": "mount_point_base",
                    "method": "computedMountPointBase",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMountPointBase",
                    "optional": false,
                    "label": "_computedMountPointBase"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_hostName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host_name\" <$> TF.attribute",
                    "name": "host_name",
                    "method": "hostName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHostName",
                    "optional": false,
                    "label": "_hostName"
                },
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                }
            ],
            "type": "BlockstorageVolumeAttachV3Resource s",
            "original": "openstack_blockstorage_volume_attach_v3"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image_id\" <$> TF.attribute",
                    "name": "image_id",
                    "method": "imageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImageId",
                    "optional": true,
                    "label": "_imageId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"snapshot_id\" <$> TF.attribute",
                    "name": "snapshot_id",
                    "method": "snapshotId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSnapshotId",
                    "optional": true,
                    "label": "_snapshotId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_vol_id\" <$> TF.attribute",
                    "name": "source_vol_id",
                    "method": "sourceVolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceVolId",
                    "optional": true,
                    "label": "_sourceVolId"
                }
            ],
            "schema": "Resource",
            "name": "BlockstorageVolumeV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attachment\" <$> TF.attribute",
                    "name": "attachment",
                    "method": "computedAttachment",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Attachment s)]",
                    "class": "HasComputedAttachment",
                    "optional": false,
                    "label": "_computedAttachment"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"availability_zone\" <$> TF.attribute",
                    "name": "availability_zone",
                    "method": "computedAvailabilityZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAvailabilityZone",
                    "optional": true,
                    "label": "_computedAvailabilityZone"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "optional": true,
                    "label": "_computedMetadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_type\" <$> TF.attribute",
                    "name": "volume_type",
                    "method": "computedVolumeType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVolumeType",
                    "optional": true,
                    "label": "_computedVolumeType"
                }
            ],
            "parameters": [
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                }
            ],
            "type": "BlockstorageVolumeV1Resource s",
            "original": "openstack_blockstorage_volume_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"consistency_group_id\" <$> TF.attribute",
                    "name": "consistency_group_id",
                    "method": "consistencyGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConsistencyGroupId",
                    "optional": true,
                    "label": "_consistencyGroupId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image_id\" <$> TF.attribute",
                    "name": "image_id",
                    "method": "imageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImageId",
                    "optional": true,
                    "label": "_imageId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"snapshot_id\" <$> TF.attribute",
                    "name": "snapshot_id",
                    "method": "snapshotId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSnapshotId",
                    "optional": true,
                    "label": "_snapshotId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_replica\" <$> TF.attribute",
                    "name": "source_replica",
                    "method": "sourceReplica",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceReplica",
                    "optional": true,
                    "label": "_sourceReplica"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_vol_id\" <$> TF.attribute",
                    "name": "source_vol_id",
                    "method": "sourceVolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceVolId",
                    "optional": true,
                    "label": "_sourceVolId"
                }
            ],
            "schema": "Resource",
            "name": "BlockstorageVolumeV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attachment\" <$> TF.attribute",
                    "name": "attachment",
                    "method": "computedAttachment",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Attachment s)]",
                    "class": "HasComputedAttachment",
                    "optional": false,
                    "label": "_computedAttachment"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"availability_zone\" <$> TF.attribute",
                    "name": "availability_zone",
                    "method": "computedAvailabilityZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAvailabilityZone",
                    "optional": true,
                    "label": "_computedAvailabilityZone"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "optional": true,
                    "label": "_computedMetadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_type\" <$> TF.attribute",
                    "name": "volume_type",
                    "method": "computedVolumeType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVolumeType",
                    "optional": true,
                    "label": "_computedVolumeType"
                }
            ],
            "parameters": [
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                }
            ],
            "type": "BlockstorageVolumeV2Resource s",
            "original": "openstack_blockstorage_volume_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"consistency_group_id\" <$> TF.attribute",
                    "name": "consistency_group_id",
                    "method": "consistencyGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConsistencyGroupId",
                    "optional": true,
                    "label": "_consistencyGroupId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_online_resize\" <$> TF.attribute",
                    "name": "enable_online_resize",
                    "method": "enableOnlineResize",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableOnlineResize",
                    "optional": true,
                    "label": "_enableOnlineResize"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image_id\" <$> TF.attribute",
                    "name": "image_id",
                    "method": "imageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImageId",
                    "optional": true,
                    "label": "_imageId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"snapshot_id\" <$> TF.attribute",
                    "name": "snapshot_id",
                    "method": "snapshotId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSnapshotId",
                    "optional": true,
                    "label": "_snapshotId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_replica\" <$> TF.attribute",
                    "name": "source_replica",
                    "method": "sourceReplica",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceReplica",
                    "optional": true,
                    "label": "_sourceReplica"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"source_vol_id\" <$> TF.attribute",
                    "name": "source_vol_id",
                    "method": "sourceVolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceVolId",
                    "optional": true,
                    "label": "_sourceVolId"
                }
            ],
            "schema": "Resource",
            "name": "BlockstorageVolumeV3Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"attachment\" <$> TF.attribute",
                    "name": "attachment",
                    "method": "computedAttachment",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Attachment s)]",
                    "class": "HasComputedAttachment",
                    "optional": false,
                    "label": "_computedAttachment"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"availability_zone\" <$> TF.attribute",
                    "name": "availability_zone",
                    "method": "computedAvailabilityZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAvailabilityZone",
                    "optional": true,
                    "label": "_computedAvailabilityZone"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "optional": true,
                    "label": "_computedMetadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_type\" <$> TF.attribute",
                    "name": "volume_type",
                    "method": "computedVolumeType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVolumeType",
                    "optional": true,
                    "label": "_computedVolumeType"
                }
            ],
            "parameters": [
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                }
            ],
            "type": "BlockstorageVolumeV3Resource s",
            "original": "openstack_blockstorage_volume_v3"
        },
        {
            "arguments": [
                {
                    "default": "_disk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "disk",
                    "method": "disk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDisk",
                    "optional": false,
                    "label": "_disk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ephemeral\" <$> TF.attribute",
                    "name": "ephemeral",
                    "method": "ephemeral",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasEphemeral",
                    "optional": true,
                    "label": "_ephemeral"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"is_public\" <$> TF.attribute",
                    "name": "is_public",
                    "method": "isPublic",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIsPublic",
                    "optional": true,
                    "label": "_isPublic"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_ram",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ram\" <$> TF.attribute",
                    "name": "ram",
                    "method": "ram",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRam",
                    "optional": false,
                    "label": "_ram"
                },
                {
                    "default": "TF.value 1.0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"rx_tx_factor\" <$> TF.attribute",
                    "name": "rx_tx_factor",
                    "method": "rxTxFactor",
                    "conflicts": [],
                    "type": "TF.Attr s P.Double",
                    "class": "HasRxTxFactor",
                    "optional": true,
                    "label": "_rxTxFactor"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"swap\" <$> TF.attribute",
                    "name": "swap",
                    "method": "swap",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSwap",
                    "optional": true,
                    "label": "_swap"
                },
                {
                    "default": "_vcpus",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vcpus\" <$> TF.attribute",
                    "name": "vcpus",
                    "method": "vcpus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVcpus",
                    "optional": false,
                    "label": "_vcpus"
                }
            ],
            "schema": "Resource",
            "name": "ComputeFlavorV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"extra_specs\" <$> TF.attribute",
                    "name": "extra_specs",
                    "method": "computedExtraSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedExtraSpecs",
                    "optional": true,
                    "label": "_computedExtraSpecs"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_disk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk\" <$> TF.attribute",
                    "name": "disk",
                    "method": "disk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDisk",
                    "optional": false,
                    "label": "_disk"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_ram",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ram\" <$> TF.attribute",
                    "name": "ram",
                    "method": "ram",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasRam",
                    "optional": false,
                    "label": "_ram"
                },
                {
                    "default": "_vcpus",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vcpus\" <$> TF.attribute",
                    "name": "vcpus",
                    "method": "vcpus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasVcpus",
                    "optional": false,
                    "label": "_vcpus"
                }
            ],
            "type": "ComputeFlavorV2Resource s",
            "original": "openstack_compute_flavor_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"fixed_ip\" <$> TF.attribute",
                    "name": "fixed_ip",
                    "method": "fixedIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFixedIp",
                    "optional": true,
                    "label": "_fixedIp"
                },
                {
                    "default": "_floatingIp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"floating_ip\" <$> TF.attribute",
                    "name": "floating_ip",
                    "method": "floatingIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFloatingIp",
                    "optional": false,
                    "label": "_floatingIp"
                },
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"wait_until_associated\" <$> TF.attribute",
                    "name": "wait_until_associated",
                    "method": "waitUntilAssociated",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasWaitUntilAssociated",
                    "optional": true,
                    "label": "_waitUntilAssociated"
                }
            ],
            "schema": "Resource",
            "name": "ComputeFloatingipAssociateV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_floatingIp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"floating_ip\" <$> TF.attribute",
                    "name": "floating_ip",
                    "method": "floatingIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFloatingIp",
                    "optional": false,
                    "label": "_floatingIp"
                },
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                }
            ],
            "type": "ComputeFloatingipAssociateV2Resource s",
            "original": "openstack_compute_floatingip_associate_v2"
        },
        {
            "arguments": [
                {
                    "default": "_pool",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool\" <$> TF.attribute",
                    "name": "pool",
                    "method": "pool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPool",
                    "optional": false,
                    "label": "_pool"
                }
            ],
            "schema": "Resource",
            "name": "ComputeFloatingipV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "optional": false,
                    "label": "_computedAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fixed_ip\" <$> TF.attribute",
                    "name": "fixed_ip",
                    "method": "computedFixedIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFixedIp",
                    "optional": false,
                    "label": "_computedFixedIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "computedInstanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInstanceId",
                    "optional": false,
                    "label": "_computedInstanceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_pool",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool\" <$> TF.attribute",
                    "name": "pool",
                    "method": "pool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPool",
                    "optional": false,
                    "label": "_pool"
                }
            ],
            "type": "ComputeFloatingipV2Resource s",
            "original": "openstack_compute_floatingip_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_pass\" <$> TF.attribute",
                    "name": "admin_pass",
                    "method": "adminPass",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAdminPass",
                    "optional": true,
                    "label": "_adminPass"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"block_device\" <$> TF.attribute",
                    "name": "block_device",
                    "method": "blockDevice",
                    "conflicts": [],
                    "type": "TF.Attr s [BlockDevice s]",
                    "class": "HasBlockDevice",
                    "optional": true,
                    "label": "_blockDevice"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"config_drive\" <$> TF.attribute",
                    "name": "config_drive",
                    "method": "configDrive",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasConfigDrive",
                    "optional": true,
                    "label": "_configDrive"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"floating_ip\" <$> TF.attribute",
                    "name": "floating_ip",
                    "method": "floatingIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFloatingIp",
                    "optional": true,
                    "label": "_floatingIp"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_delete\" <$> TF.attribute",
                    "name": "force_delete",
                    "method": "forceDelete",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceDelete",
                    "optional": true,
                    "label": "_forceDelete"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"key_pair\" <$> TF.attribute",
                    "name": "key_pair",
                    "method": "keyPair",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasKeyPair",
                    "optional": true,
                    "label": "_keyPair"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "optional": true,
                    "label": "_metadata"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"personality\" <$> TF.attribute",
                    "name": "personality",
                    "method": "personality",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Personality s)]",
                    "class": "HasPersonality",
                    "optional": true,
                    "label": "_personality"
                },
                {
                    "default": "TF.value \"active\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"power_state\" <$> TF.attribute",
                    "name": "power_state",
                    "method": "powerState",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPowerState",
                    "optional": true,
                    "label": "_powerState"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"scheduler_hints\" <$> TF.attribute",
                    "name": "scheduler_hints",
                    "method": "schedulerHints",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (SchedulerHints s)]",
                    "class": "HasSchedulerHints",
                    "optional": true,
                    "label": "_schedulerHints"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"stop_before_destroy\" <$> TF.attribute",
                    "name": "stop_before_destroy",
                    "method": "stopBeforeDestroy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasStopBeforeDestroy",
                    "optional": true,
                    "label": "_stopBeforeDestroy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"user_data\" <$> TF.attribute",
                    "name": "user_data",
                    "method": "userData",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserData",
                    "optional": true,
                    "label": "_userData"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"volume\" <$> TF.attribute",
                    "name": "volume",
                    "method": "volume",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Volume s)]",
                    "class": "HasVolume",
                    "optional": true,
                    "label": "_volume"
                }
            ],
            "schema": "Resource",
            "name": "ComputeInstanceV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"access_ip_v4\" <$> TF.attribute",
                    "name": "access_ip_v4",
                    "method": "computedAccessIpV4",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAccessIpV4",
                    "optional": true,
                    "label": "_computedAccessIpV4"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"access_ip_v6\" <$> TF.attribute",
                    "name": "access_ip_v6",
                    "method": "computedAccessIpV6",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAccessIpV6",
                    "optional": true,
                    "label": "_computedAccessIpV6"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"all_metadata\" <$> TF.attribute",
                    "name": "all_metadata",
                    "method": "computedAllMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedAllMetadata",
                    "optional": false,
                    "label": "_computedAllMetadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"availability_zone\" <$> TF.attribute",
                    "name": "availability_zone",
                    "method": "computedAvailabilityZone",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAvailabilityZone",
                    "optional": true,
                    "label": "_computedAvailabilityZone"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"flavor_id\" <$> TF.attribute",
                    "name": "flavor_id",
                    "method": "computedFlavorId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFlavorId",
                    "optional": true,
                    "label": "_computedFlavorId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"flavor_name\" <$> TF.attribute",
                    "name": "flavor_name",
                    "method": "computedFlavorName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFlavorName",
                    "optional": true,
                    "label": "_computedFlavorName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image_id\" <$> TF.attribute",
                    "name": "image_id",
                    "method": "computedImageId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImageId",
                    "optional": true,
                    "label": "_computedImageId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image_name\" <$> TF.attribute",
                    "name": "image_name",
                    "method": "computedImageName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedImageName",
                    "optional": true,
                    "label": "_computedImageName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "network",
                    "method": "computedNetwork",
                    "conflicts": [],
                    "type": "TF.Attr s [Network s]",
                    "class": "HasComputedNetwork",
                    "optional": true,
                    "label": "_computedNetwork"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_groups\" <$> TF.attribute",
                    "name": "security_groups",
                    "method": "computedSecurityGroups",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedSecurityGroups",
                    "optional": true,
                    "label": "_computedSecurityGroups"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ComputeInstanceV2Resource s",
            "original": "openstack_compute_instance_v2"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "ComputeKeypairV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fingerprint\" <$> TF.attribute",
                    "name": "fingerprint",
                    "method": "computedFingerprint",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFingerprint",
                    "optional": false,
                    "label": "_computedFingerprint"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"private_key\" <$> TF.attribute",
                    "name": "private_key",
                    "method": "computedPrivateKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPrivateKey",
                    "optional": false,
                    "label": "_computedPrivateKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"public_key\" <$> TF.attribute",
                    "name": "public_key",
                    "method": "computedPublicKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPublicKey",
                    "optional": true,
                    "label": "_computedPublicKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ComputeKeypairV2Resource s",
            "original": "openstack_compute_keypair_v2"
        },
        {
            "arguments": [
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "ComputeSecgroupV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rule\" <$> TF.attribute",
                    "name": "rule",
                    "method": "computedRule",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Rule s)]",
                    "class": "HasComputedRule",
                    "optional": true,
                    "label": "_computedRule"
                }
            ],
            "parameters": [
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ComputeSecgroupV2Resource s",
            "original": "openstack_compute_secgroup_v2"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"policies\" <$> TF.attribute",
                    "name": "policies",
                    "method": "policies",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPolicies",
                    "optional": true,
                    "label": "_policies"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "ComputeServergroupV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"members\" <$> TF.attribute",
                    "name": "members",
                    "method": "computedMembers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedMembers",
                    "optional": false,
                    "label": "_computedMembers"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ComputeServergroupV2Resource s",
            "original": "openstack_compute_servergroup_v2"
        },
        {
            "arguments": [
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                },
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                }
            ],
            "schema": "Resource",
            "name": "ComputeVolumeAttachV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"device\" <$> TF.attribute",
                    "name": "device",
                    "method": "computedDevice",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDevice",
                    "optional": true,
                    "label": "_computedDevice"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                },
                {
                    "default": "_volumeId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"volume_id\" <$> TF.attribute",
                    "name": "volume_id",
                    "method": "volumeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVolumeId",
                    "optional": false,
                    "label": "_volumeId"
                }
            ],
            "type": "ComputeVolumeAttachV2Resource s",
            "original": "openstack_compute_volume_attach_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"configuration\" <$> TF.attribute",
                    "name": "configuration",
                    "method": "configuration",
                    "conflicts": [],
                    "type": "TF.Attr s [Configuration s]",
                    "class": "HasConfiguration",
                    "optional": true,
                    "label": "_configuration"
                },
                {
                    "default": "_datastore",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datastore\" <$> TF.attribute",
                    "name": "datastore",
                    "method": "datastore",
                    "conflicts": [],
                    "type": "TF.Attr s [Datastore s]",
                    "class": "HasDatastore",
                    "optional": false,
                    "label": "_datastore"
                },
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "schema": "Resource",
            "name": "DbConfigurationV1Resource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_datastore",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datastore\" <$> TF.attribute",
                    "name": "datastore",
                    "method": "datastore",
                    "conflicts": [],
                    "type": "TF.Attr s [Datastore s]",
                    "class": "HasDatastore",
                    "optional": false,
                    "label": "_datastore"
                },
                {
                    "default": "_description",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": false,
                    "label": "_description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "type": "DbConfigurationV1Resource s",
            "original": "openstack_db_configuration_v1"
        },
        {
            "arguments": [
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": true,
                    "label": "_region"
                }
            ],
            "schema": "Resource",
            "name": "DbDatabaseV1Resource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "DbDatabaseV1Resource s",
            "original": "openstack_db_database_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"configuration_id\" <$> TF.attribute",
                    "name": "configuration_id",
                    "method": "configurationId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasConfigurationId",
                    "optional": true,
                    "label": "_configurationId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"database\" <$> TF.attribute",
                    "name": "database",
                    "method": "database",
                    "conflicts": [],
                    "type": "TF.Attr s [Database s]",
                    "class": "HasDatabase",
                    "optional": true,
                    "label": "_database"
                },
                {
                    "default": "_datastore",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datastore\" <$> TF.attribute",
                    "name": "datastore",
                    "method": "datastore",
                    "conflicts": [],
                    "type": "TF.Attr s [Datastore s]",
                    "class": "HasDatastore",
                    "optional": false,
                    "label": "_datastore"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network\" <$> TF.attribute",
                    "name": "network",
                    "method": "network",
                    "conflicts": [],
                    "type": "TF.Attr s [Network s]",
                    "class": "HasNetwork",
                    "optional": true,
                    "label": "_network"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"user\" <$> TF.attribute",
                    "name": "user",
                    "method": "user",
                    "conflicts": [],
                    "type": "TF.Attr s [User s]",
                    "class": "HasUser",
                    "optional": true,
                    "label": "_user"
                }
            ],
            "schema": "Resource",
            "name": "DbInstanceV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"flavor_id\" <$> TF.attribute",
                    "name": "flavor_id",
                    "method": "computedFlavorId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFlavorId",
                    "optional": true,
                    "label": "_computedFlavorId"
                }
            ],
            "parameters": [
                {
                    "default": "_datastore",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"datastore\" <$> TF.attribute",
                    "name": "datastore",
                    "method": "datastore",
                    "conflicts": [],
                    "type": "TF.Attr s [Datastore s]",
                    "class": "HasDatastore",
                    "optional": false,
                    "label": "_datastore"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                },
                {
                    "default": "_size",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"size\" <$> TF.attribute",
                    "name": "size",
                    "method": "size",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasSize",
                    "optional": false,
                    "label": "_size"
                }
            ],
            "type": "DbInstanceV1Resource s",
            "original": "openstack_db_instance_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"host\" <$> TF.attribute",
                    "name": "host",
                    "method": "host",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHost",
                    "optional": true,
                    "label": "_host"
                },
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_password",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"password\" <$> TF.attribute",
                    "name": "password",
                    "method": "password",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPassword",
                    "optional": false,
                    "label": "_password"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "schema": "Resource",
            "name": "DbUserV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"databases\" <$> TF.attribute",
                    "name": "databases",
                    "method": "computedDatabases",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedDatabases",
                    "optional": true,
                    "label": "_computedDatabases"
                }
            ],
            "parameters": [
                {
                    "default": "_instanceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"instance_id\" <$> TF.attribute",
                    "name": "instance_id",
                    "method": "instanceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasInstanceId",
                    "optional": false,
                    "label": "_instanceId"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_password",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"password\" <$> TF.attribute",
                    "name": "password",
                    "method": "password",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPassword",
                    "optional": false,
                    "label": "_password"
                },
                {
                    "default": "_region",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "region",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRegion",
                    "optional": false,
                    "label": "_region"
                }
            ],
            "type": "DbUserV1Resource s",
            "original": "openstack_db_user_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"records\" <$> TF.attribute",
                    "name": "records",
                    "method": "records",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasRecords",
                    "optional": true,
                    "label": "_records"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                },
                {
                    "default": "_zoneId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "zone_id",
                    "method": "zoneId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZoneId",
                    "optional": false,
                    "label": "_zoneId"
                }
            ],
            "schema": "Resource",
            "name": "DnsRecordsetV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "computedTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTtl",
                    "optional": true,
                    "label": "_computedTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "computedType'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType'",
                    "optional": true,
                    "label": "_computedType'"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_zoneId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"zone_id\" <$> TF.attribute",
                    "name": "zone_id",
                    "method": "zoneId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasZoneId",
                    "optional": false,
                    "label": "_zoneId"
                }
            ],
            "type": "DnsRecordsetV2Resource s",
            "original": "openstack_dns_recordset_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"attributes\" <$> TF.attribute",
                    "name": "attributes",
                    "method": "attributes",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasAttributes",
                    "optional": true,
                    "label": "_attributes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"email\" <$> TF.attribute",
                    "name": "email",
                    "method": "email",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEmail",
                    "optional": true,
                    "label": "_email"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"masters\" <$> TF.attribute",
                    "name": "masters",
                    "method": "masters",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasMasters",
                    "optional": true,
                    "label": "_masters"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "DnsZoneV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ttl\" <$> TF.attribute",
                    "name": "ttl",
                    "method": "computedTtl",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedTtl",
                    "optional": true,
                    "label": "_computedTtl"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "computedType'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType'",
                    "optional": true,
                    "label": "_computedType'"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "DnsZoneV2Resource s",
            "original": "openstack_dns_zone_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"no_routers\" <$> TF.attribute",
                    "name": "no_routers",
                    "method": "noRouters",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasNoRouters",
                    "optional": true,
                    "label": "_noRouters"
                },
                {
                    "default": "_policyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_id\" <$> TF.attribute",
                    "name": "policy_id",
                    "method": "policyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyId",
                    "optional": false,
                    "label": "_policyId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "FwFirewallV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"associated_routers\" <$> TF.attribute",
                    "name": "associated_routers",
                    "method": "computedAssociatedRouters",
                    "conflicts": [
                        "_noRouters"
                    ],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedAssociatedRouters",
                    "optional": true,
                    "label": "_computedAssociatedRouters"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_policyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"policy_id\" <$> TF.attribute",
                    "name": "policy_id",
                    "method": "policyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPolicyId",
                    "optional": false,
                    "label": "_policyId"
                }
            ],
            "type": "FwFirewallV1Resource s",
            "original": "openstack_fw_firewall_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"audited\" <$> TF.attribute",
                    "name": "audited",
                    "method": "audited",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAudited",
                    "optional": true,
                    "label": "_audited"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"rules\" <$> TF.attribute",
                    "name": "rules",
                    "method": "rules",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasRules",
                    "optional": true,
                    "label": "_rules"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"shared\" <$> TF.attribute",
                    "name": "shared",
                    "method": "shared",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShared",
                    "optional": true,
                    "label": "_shared"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "FwPolicyV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [],
            "type": "FwPolicyV1Resource s",
            "original": "openstack_fw_policy_v1"
        },
        {
            "arguments": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_ip_address\" <$> TF.attribute",
                    "name": "destination_ip_address",
                    "method": "destinationIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationIpAddress",
                    "optional": true,
                    "label": "_destinationIpAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"destination_port\" <$> TF.attribute",
                    "name": "destination_port",
                    "method": "destinationPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationPort",
                    "optional": true,
                    "label": "_destinationPort"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "optional": true,
                    "label": "_enabled"
                },
                {
                    "default": "TF.value 4",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "ip_version",
                    "method": "ipVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasIpVersion",
                    "optional": true,
                    "label": "_ipVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_ip_address\" <$> TF.attribute",
                    "name": "source_ip_address",
                    "method": "sourceIpAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourceIpAddress",
                    "optional": true,
                    "label": "_sourceIpAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source_port\" <$> TF.attribute",
                    "name": "source_port",
                    "method": "sourcePort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSourcePort",
                    "optional": true,
                    "label": "_sourcePort"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "tenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTenantId",
                    "optional": true,
                    "label": "_tenantId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "FwRuleV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_action",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"action\" <$> TF.attribute",
                    "name": "action",
                    "method": "action",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAction",
                    "optional": false,
                    "label": "_action"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                }
            ],
            "type": "FwRuleV1Resource s",
            "original": "openstack_fw_rule_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "optional": true,
                    "label": "_enabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_domain\" <$> TF.attribute",
                    "name": "is_domain",
                    "method": "isDomain",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIsDomain",
                    "optional": true,
                    "label": "_isDomain"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "IdentityProjectV3Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "computedDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomainId",
                    "optional": true,
                    "label": "_computedDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"parent_id\" <$> TF.attribute",
                    "name": "parent_id",
                    "method": "computedParentId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedParentId",
                    "optional": true,
                    "label": "_computedParentId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [],
            "type": "IdentityProjectV3Resource s",
            "original": "openstack_identity_project_v3"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "domainId",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "projectId",
                            "label": "_projectId"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDomainId",
                    "optional": true,
                    "label": "_domainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"group_id\" <$> TF.attribute",
                    "name": "group_id",
                    "method": "groupId",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "userId",
                            "label": "_userId"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasGroupId",
                    "optional": true,
                    "label": "_groupId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "project_id",
                    "method": "projectId",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "domainId",
                            "label": "_domainId"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProjectId",
                    "optional": true,
                    "label": "_projectId"
                },
                {
                    "default": "_roleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role_id\" <$> TF.attribute",
                    "name": "role_id",
                    "method": "roleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRoleId",
                    "optional": false,
                    "label": "_roleId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"user_id\" <$> TF.attribute",
                    "name": "user_id",
                    "method": "userId",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "groupId",
                            "label": "_groupId"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUserId",
                    "optional": true,
                    "label": "_userId"
                }
            ],
            "schema": "Resource",
            "name": "IdentityRoleAssignmentV3Resource",
            "attributes": [],
            "parameters": [
                {
                    "default": "_roleId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"role_id\" <$> TF.attribute",
                    "name": "role_id",
                    "method": "roleId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRoleId",
                    "optional": false,
                    "label": "_roleId"
                }
            ],
            "type": "IdentityRoleAssignmentV3Resource s",
            "original": "openstack_identity_role_assignment_v3"
        },
        {
            "arguments": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "IdentityRoleV3Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "computedDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomainId",
                    "optional": true,
                    "label": "_computedDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "IdentityRoleV3Resource s",
            "original": "openstack_identity_role_v3"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enabled\" <$> TF.attribute",
                    "name": "enabled",
                    "method": "enabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnabled",
                    "optional": true,
                    "label": "_enabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"extra\" <$> TF.attribute",
                    "name": "extra",
                    "method": "extra",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasExtra",
                    "optional": true,
                    "label": "_extra"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ignore_change_password_upon_first_use\" <$> TF.attribute",
                    "name": "ignore_change_password_upon_first_use",
                    "method": "ignoreChangePasswordUponFirstUse",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIgnoreChangePasswordUponFirstUse",
                    "optional": true,
                    "label": "_ignoreChangePasswordUponFirstUse"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ignore_lockout_failure_attempts\" <$> TF.attribute",
                    "name": "ignore_lockout_failure_attempts",
                    "method": "ignoreLockoutFailureAttempts",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIgnoreLockoutFailureAttempts",
                    "optional": true,
                    "label": "_ignoreLockoutFailureAttempts"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ignore_password_expiry\" <$> TF.attribute",
                    "name": "ignore_password_expiry",
                    "method": "ignorePasswordExpiry",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIgnorePasswordExpiry",
                    "optional": true,
                    "label": "_ignorePasswordExpiry"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"multi_factor_auth_enabled\" <$> TF.attribute",
                    "name": "multi_factor_auth_enabled",
                    "method": "multiFactorAuthEnabled",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasMultiFactorAuthEnabled",
                    "optional": true,
                    "label": "_multiFactorAuthEnabled"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"multi_factor_auth_rule\" <$> TF.attribute",
                    "name": "multi_factor_auth_rule",
                    "method": "multiFactorAuthRule",
                    "conflicts": [],
                    "type": "TF.Attr s [MultiFactorAuthRule s]",
                    "class": "HasMultiFactorAuthRule",
                    "optional": true,
                    "label": "_multiFactorAuthRule"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"password\" <$> TF.attribute",
                    "name": "password",
                    "method": "password",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPassword",
                    "optional": true,
                    "label": "_password"
                }
            ],
            "schema": "Resource",
            "name": "IdentityUserV3Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_project_id\" <$> TF.attribute",
                    "name": "default_project_id",
                    "method": "computedDefaultProjectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultProjectId",
                    "optional": true,
                    "label": "_computedDefaultProjectId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"domain_id\" <$> TF.attribute",
                    "name": "domain_id",
                    "method": "computedDomainId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDomainId",
                    "optional": true,
                    "label": "_computedDomainId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [],
            "type": "IdentityUserV3Resource s",
            "original": "openstack_identity_user_v3"
        },
        {
            "arguments": [
                {
                    "default": "_containerFormat",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"container_format\" <$> TF.attribute",
                    "name": "container_format",
                    "method": "containerFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerFormat",
                    "optional": false,
                    "label": "_containerFormat"
                },
                {
                    "default": "_diskFormat",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_format\" <$> TF.attribute",
                    "name": "disk_format",
                    "method": "diskFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDiskFormat",
                    "optional": false,
                    "label": "_diskFormat"
                },
                {
                    "default": "TF.value \"/home/bren/.terraform/image_cache\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"image_cache_path\" <$> TF.attribute",
                    "name": "image_cache_path",
                    "method": "imageCachePath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImageCachePath",
                    "optional": true,
                    "label": "_imageCachePath"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"image_source_url\" <$> TF.attribute",
                    "name": "image_source_url",
                    "method": "imageSourceUrl",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "localFilePath",
                            "label": "_localFilePath"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasImageSourceUrl",
                    "optional": true,
                    "label": "_imageSourceUrl"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"local_file_path\" <$> TF.attribute",
                    "name": "local_file_path",
                    "method": "localFilePath",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "imageSourceUrl",
                            "label": "_imageSourceUrl"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLocalFilePath",
                    "optional": true,
                    "label": "_localFilePath"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"min_disk_gb\" <$> TF.attribute",
                    "name": "min_disk_gb",
                    "method": "minDiskGb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinDiskGb",
                    "optional": true,
                    "label": "_minDiskGb"
                },
                {
                    "default": "TF.value 0",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"min_ram_mb\" <$> TF.attribute",
                    "name": "min_ram_mb",
                    "method": "minRamMb",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMinRamMb",
                    "optional": true,
                    "label": "_minRamMb"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protected\" <$> TF.attribute",
                    "name": "protected",
                    "method": "protected",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasProtected",
                    "optional": true,
                    "label": "_protected"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"tags\" <$> TF.attribute",
                    "name": "tags",
                    "method": "tags",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasTags",
                    "optional": true,
                    "label": "_tags"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"verify_checksum\" <$> TF.attribute",
                    "name": "verify_checksum",
                    "method": "verifyChecksum",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasVerifyChecksum",
                    "optional": true,
                    "label": "_verifyChecksum"
                },
                {
                    "default": "TF.value \"private\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"visibility\" <$> TF.attribute",
                    "name": "visibility",
                    "method": "visibility",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVisibility",
                    "optional": true,
                    "label": "_visibility"
                }
            ],
            "schema": "Resource",
            "name": "ImagesImageV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"checksum\" <$> TF.attribute",
                    "name": "checksum",
                    "method": "computedChecksum",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedChecksum",
                    "optional": false,
                    "label": "_computedChecksum"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_at\" <$> TF.attribute",
                    "name": "created_at",
                    "method": "computedCreatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedAt",
                    "optional": false,
                    "label": "_computedCreatedAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"file\" <$> TF.attribute",
                    "name": "file",
                    "method": "computedFile",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFile",
                    "optional": false,
                    "label": "_computedFile"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "computedMetadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedMetadata",
                    "optional": false,
                    "label": "_computedMetadata"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"owner\" <$> TF.attribute",
                    "name": "owner",
                    "method": "computedOwner",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedOwner",
                    "optional": false,
                    "label": "_computedOwner"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"properties\" <$> TF.attribute",
                    "name": "properties",
                    "method": "computedProperties",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasComputedProperties",
                    "optional": true,
                    "label": "_computedProperties"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"schema\" <$> TF.attribute",
                    "name": "schema",
                    "method": "computedSchema",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSchema",
                    "optional": false,
                    "label": "_computedSchema"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"size_bytes\" <$> TF.attribute",
                    "name": "size_bytes",
                    "method": "computedSizeBytes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedSizeBytes",
                    "optional": false,
                    "label": "_computedSizeBytes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "optional": false,
                    "label": "_computedStatus"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"update_at\" <$> TF.attribute",
                    "name": "update_at",
                    "method": "computedUpdateAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdateAt",
                    "optional": false,
                    "label": "_computedUpdateAt"
                }
            ],
            "parameters": [
                {
                    "default": "_containerFormat",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"container_format\" <$> TF.attribute",
                    "name": "container_format",
                    "method": "containerFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerFormat",
                    "optional": false,
                    "label": "_containerFormat"
                },
                {
                    "default": "_diskFormat",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"disk_format\" <$> TF.attribute",
                    "name": "disk_format",
                    "method": "diskFormat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDiskFormat",
                    "optional": false,
                    "label": "_diskFormat"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ImagesImageV2Resource s",
            "original": "openstack_images_image_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_tls_container_ref\" <$> TF.attribute",
                    "name": "default_tls_container_ref",
                    "method": "defaultTlsContainerRef",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDefaultTlsContainerRef",
                    "optional": true,
                    "label": "_defaultTlsContainerRef"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_loadbalancerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"loadbalancer_id\" <$> TF.attribute",
                    "name": "loadbalancer_id",
                    "method": "loadbalancerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLoadbalancerId",
                    "optional": false,
                    "label": "_loadbalancerId"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_protocolPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol_port\" <$> TF.attribute",
                    "name": "protocol_port",
                    "method": "protocolPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasProtocolPort",
                    "optional": false,
                    "label": "_protocolPort"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"sni_container_refs\" <$> TF.attribute",
                    "name": "sni_container_refs",
                    "method": "sniContainerRefs",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasSniContainerRefs",
                    "optional": true,
                    "label": "_sniContainerRefs"
                }
            ],
            "schema": "Resource",
            "name": "LbListenerV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"connection_limit\" <$> TF.attribute",
                    "name": "connection_limit",
                    "method": "computedConnectionLimit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedConnectionLimit",
                    "optional": true,
                    "label": "_computedConnectionLimit"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"default_pool_id\" <$> TF.attribute",
                    "name": "default_pool_id",
                    "method": "computedDefaultPoolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDefaultPoolId",
                    "optional": true,
                    "label": "_computedDefaultPoolId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "computedName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedName",
                    "optional": true,
                    "label": "_computedName"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_loadbalancerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"loadbalancer_id\" <$> TF.attribute",
                    "name": "loadbalancer_id",
                    "method": "loadbalancerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLoadbalancerId",
                    "optional": false,
                    "label": "_loadbalancerId"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_protocolPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol_port\" <$> TF.attribute",
                    "name": "protocol_port",
                    "method": "protocolPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasProtocolPort",
                    "optional": false,
                    "label": "_protocolPort"
                }
            ],
            "type": "LbListenerV2Resource s",
            "original": "openstack_lb_listener_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"flavor\" <$> TF.attribute",
                    "name": "flavor",
                    "method": "flavor",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFlavor",
                    "optional": true,
                    "label": "_flavor"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_vipSubnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vip_subnet_id\" <$> TF.attribute",
                    "name": "vip_subnet_id",
                    "method": "vipSubnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVipSubnetId",
                    "optional": false,
                    "label": "_vipSubnetId"
                }
            ],
            "schema": "Resource",
            "name": "LbLoadbalancerV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"loadbalancer_provider\" <$> TF.attribute",
                    "name": "loadbalancer_provider",
                    "method": "computedLoadbalancerProvider",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLoadbalancerProvider",
                    "optional": true,
                    "label": "_computedLoadbalancerProvider"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_group_ids\" <$> TF.attribute",
                    "name": "security_group_ids",
                    "method": "computedSecurityGroupIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedSecurityGroupIds",
                    "optional": true,
                    "label": "_computedSecurityGroupIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vip_address\" <$> TF.attribute",
                    "name": "vip_address",
                    "method": "computedVipAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVipAddress",
                    "optional": true,
                    "label": "_computedVipAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"vip_port_id\" <$> TF.attribute",
                    "name": "vip_port_id",
                    "method": "computedVipPortId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedVipPortId",
                    "optional": false,
                    "label": "_computedVipPortId"
                }
            ],
            "parameters": [
                {
                    "default": "_vipSubnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vip_subnet_id\" <$> TF.attribute",
                    "name": "vip_subnet_id",
                    "method": "vipSubnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVipSubnetId",
                    "optional": false,
                    "label": "_vipSubnetId"
                }
            ],
            "type": "LbLoadbalancerV2Resource s",
            "original": "openstack_lb_loadbalancer_v2"
        },
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "tenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasTenantId",
                    "optional": true,
                    "label": "_tenantId"
                }
            ],
            "schema": "Resource",
            "name": "LbMemberV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "computedAdminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAdminStateUp",
                    "optional": true,
                    "label": "_computedAdminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "computedWeight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedWeight",
                    "optional": true,
                    "label": "_computedWeight"
                }
            ],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                }
            ],
            "type": "LbMemberV1Resource s",
            "original": "openstack_lb_member_v1"
        },
        {
            "arguments": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_protocolPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol_port\" <$> TF.attribute",
                    "name": "protocol_port",
                    "method": "protocolPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasProtocolPort",
                    "optional": false,
                    "label": "_protocolPort"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": true,
                    "label": "_subnetId"
                }
            ],
            "schema": "Resource",
            "name": "LbMemberV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"weight\" <$> TF.attribute",
                    "name": "weight",
                    "method": "computedWeight",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedWeight",
                    "optional": true,
                    "label": "_computedWeight"
                }
            ],
            "parameters": [
                {
                    "default": "_address",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "address",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddress",
                    "optional": false,
                    "label": "_address"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_protocolPort",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol_port\" <$> TF.attribute",
                    "name": "protocol_port",
                    "method": "protocolPort",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasProtocolPort",
                    "optional": false,
                    "label": "_protocolPort"
                }
            ],
            "type": "LbMemberV2Resource s",
            "original": "openstack_lb_member_v2"
        },
        {
            "arguments": [
                {
                    "default": "_delay",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delay\" <$> TF.attribute",
                    "name": "delay",
                    "method": "delay",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDelay",
                    "optional": false,
                    "label": "_delay"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_codes\" <$> TF.attribute",
                    "name": "expected_codes",
                    "method": "expectedCodes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasExpectedCodes",
                    "optional": true,
                    "label": "_expectedCodes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_method\" <$> TF.attribute",
                    "name": "http_method",
                    "method": "httpMethod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasHttpMethod",
                    "optional": true,
                    "label": "_httpMethod"
                },
                {
                    "default": "_maxRetries",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_retries\" <$> TF.attribute",
                    "name": "max_retries",
                    "method": "maxRetries",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxRetries",
                    "optional": false,
                    "label": "_maxRetries"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": false,
                    "label": "_timeout"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_path\" <$> TF.attribute",
                    "name": "url_path",
                    "method": "urlPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasUrlPath",
                    "optional": true,
                    "label": "_urlPath"
                }
            ],
            "schema": "Resource",
            "name": "LbMonitorV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "computedAdminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdminStateUp",
                    "optional": true,
                    "label": "_computedAdminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_delay",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delay\" <$> TF.attribute",
                    "name": "delay",
                    "method": "delay",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDelay",
                    "optional": false,
                    "label": "_delay"
                },
                {
                    "default": "_maxRetries",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_retries\" <$> TF.attribute",
                    "name": "max_retries",
                    "method": "maxRetries",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxRetries",
                    "optional": false,
                    "label": "_maxRetries"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": false,
                    "label": "_timeout"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "type": "LbMonitorV1Resource s",
            "original": "openstack_lb_monitor_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "_delay",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delay\" <$> TF.attribute",
                    "name": "delay",
                    "method": "delay",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDelay",
                    "optional": false,
                    "label": "_delay"
                },
                {
                    "default": "_maxRetries",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_retries\" <$> TF.attribute",
                    "name": "max_retries",
                    "method": "maxRetries",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxRetries",
                    "optional": false,
                    "label": "_maxRetries"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": false,
                    "label": "_timeout"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "schema": "Resource",
            "name": "LbMonitorV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"expected_codes\" <$> TF.attribute",
                    "name": "expected_codes",
                    "method": "computedExpectedCodes",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedExpectedCodes",
                    "optional": true,
                    "label": "_computedExpectedCodes"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"http_method\" <$> TF.attribute",
                    "name": "http_method",
                    "method": "computedHttpMethod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedHttpMethod",
                    "optional": true,
                    "label": "_computedHttpMethod"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"url_path\" <$> TF.attribute",
                    "name": "url_path",
                    "method": "computedUrlPath",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUrlPath",
                    "optional": true,
                    "label": "_computedUrlPath"
                }
            ],
            "parameters": [
                {
                    "default": "_delay",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delay\" <$> TF.attribute",
                    "name": "delay",
                    "method": "delay",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDelay",
                    "optional": false,
                    "label": "_delay"
                },
                {
                    "default": "_maxRetries",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_retries\" <$> TF.attribute",
                    "name": "max_retries",
                    "method": "maxRetries",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasMaxRetries",
                    "optional": false,
                    "label": "_maxRetries"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_timeout",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"timeout\" <$> TF.attribute",
                    "name": "timeout",
                    "method": "timeout",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasTimeout",
                    "optional": false,
                    "label": "_timeout"
                },
                {
                    "default": "_type'",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "type'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasType'",
                    "optional": false,
                    "label": "_type'"
                }
            ],
            "type": "LbMonitorV2Resource s",
            "original": "openstack_lb_monitor_v2"
        },
        {
            "arguments": [
                {
                    "default": "_lbMethod",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lb_method\" <$> TF.attribute",
                    "name": "lb_method",
                    "method": "lbMethod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLbMethod",
                    "optional": false,
                    "label": "_lbMethod"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"member\" <$> TF.attribute",
                    "name": "member",
                    "method": "member",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasMember",
                    "optional": true,
                    "label": "_member"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"monitor_ids\" <$> TF.attribute",
                    "name": "monitor_ids",
                    "method": "monitorIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasMonitorIds",
                    "optional": true,
                    "label": "_monitorIds"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "schema": "Resource",
            "name": "LbPoolV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"lb_provider\" <$> TF.attribute",
                    "name": "lb_provider",
                    "method": "computedLbProvider",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLbProvider",
                    "optional": true,
                    "label": "_computedLbProvider"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_lbMethod",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lb_method\" <$> TF.attribute",
                    "name": "lb_method",
                    "method": "lbMethod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLbMethod",
                    "optional": false,
                    "label": "_lbMethod"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "type": "LbPoolV1Resource s",
            "original": "openstack_lb_pool_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_lbMethod",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lb_method\" <$> TF.attribute",
                    "name": "lb_method",
                    "method": "lbMethod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLbMethod",
                    "optional": false,
                    "label": "_lbMethod"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"listener_id\" <$> TF.attribute",
                    "name": "listener_id",
                    "method": "listenerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasListenerId",
                    "optional": true,
                    "label": "_listenerId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"loadbalancer_id\" <$> TF.attribute",
                    "name": "loadbalancer_id",
                    "method": "loadbalancerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLoadbalancerId",
                    "optional": true,
                    "label": "_loadbalancerId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"persistence\" <$> TF.attribute",
                    "name": "persistence",
                    "method": "persistence",
                    "conflicts": [],
                    "type": "TF.Attr s [Persistence s]",
                    "class": "HasPersistence",
                    "optional": true,
                    "label": "_persistence"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                }
            ],
            "schema": "Resource",
            "name": "LbPoolV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_lbMethod",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lb_method\" <$> TF.attribute",
                    "name": "lb_method",
                    "method": "lbMethod",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLbMethod",
                    "optional": false,
                    "label": "_lbMethod"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                }
            ],
            "type": "LbPoolV2Resource s",
            "original": "openstack_lb_pool_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"floating_ip\" <$> TF.attribute",
                    "name": "floating_ip",
                    "method": "floatingIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFloatingIp",
                    "optional": true,
                    "label": "_floatingIp"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"persistence\" <$> TF.attribute",
                    "name": "persistence",
                    "method": "persistence",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasPersistence",
                    "optional": true,
                    "label": "_persistence"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "schema": "Resource",
            "name": "LbVipV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "optional": true,
                    "label": "_computedAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "computedAdminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAdminStateUp",
                    "optional": true,
                    "label": "_computedAdminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"conn_limit\" <$> TF.attribute",
                    "name": "conn_limit",
                    "method": "computedConnLimit",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedConnLimit",
                    "optional": true,
                    "label": "_computedConnLimit"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "optional": true,
                    "label": "_computedDescription"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_id\" <$> TF.attribute",
                    "name": "port_id",
                    "method": "computedPortId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPortId",
                    "optional": false,
                    "label": "_computedPortId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_poolId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pool_id\" <$> TF.attribute",
                    "name": "pool_id",
                    "method": "poolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPoolId",
                    "optional": false,
                    "label": "_poolId"
                },
                {
                    "default": "_port",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port\" <$> TF.attribute",
                    "name": "port",
                    "method": "port",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasPort",
                    "optional": false,
                    "label": "_port"
                },
                {
                    "default": "_protocol",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "protocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasProtocol",
                    "optional": false,
                    "label": "_protocol"
                },
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "type": "LbVipV1Resource s",
            "original": "openstack_lb_vip_v1"
        },
        {
            "arguments": [
                {
                    "default": "_floatingIp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"floating_ip\" <$> TF.attribute",
                    "name": "floating_ip",
                    "method": "floatingIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFloatingIp",
                    "optional": false,
                    "label": "_floatingIp"
                },
                {
                    "default": "_portId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port_id\" <$> TF.attribute",
                    "name": "port_id",
                    "method": "portId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPortId",
                    "optional": false,
                    "label": "_portId"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingFloatingipAssociateV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_floatingIp",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"floating_ip\" <$> TF.attribute",
                    "name": "floating_ip",
                    "method": "floatingIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasFloatingIp",
                    "optional": false,
                    "label": "_floatingIp"
                },
                {
                    "default": "_portId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port_id\" <$> TF.attribute",
                    "name": "port_id",
                    "method": "portId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPortId",
                    "optional": false,
                    "label": "_portId"
                }
            ],
            "type": "NetworkingFloatingipAssociateV2Resource s",
            "original": "openstack_networking_floatingip_associate_v2"
        },
        {
            "arguments": [
                {
                    "default": "_pool",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool\" <$> TF.attribute",
                    "name": "pool",
                    "method": "pool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPool",
                    "optional": false,
                    "label": "_pool"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": true,
                    "label": "_subnetId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingFloatingipV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"address\" <$> TF.attribute",
                    "name": "address",
                    "method": "computedAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAddress",
                    "optional": true,
                    "label": "_computedAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fixed_ip\" <$> TF.attribute",
                    "name": "fixed_ip",
                    "method": "computedFixedIp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedFixedIp",
                    "optional": true,
                    "label": "_computedFixedIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"port_id\" <$> TF.attribute",
                    "name": "port_id",
                    "method": "computedPortId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPortId",
                    "optional": true,
                    "label": "_computedPortId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_pool",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"pool\" <$> TF.attribute",
                    "name": "pool",
                    "method": "pool",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPool",
                    "optional": false,
                    "label": "_pool"
                }
            ],
            "type": "NetworkingFloatingipV2Resource s",
            "original": "openstack_networking_floatingip_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"segments\" <$> TF.attribute",
                    "name": "segments",
                    "method": "segments",
                    "conflicts": [],
                    "type": "TF.Attr s [Segments s]",
                    "class": "HasSegments",
                    "optional": true,
                    "label": "_segments"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingNetworkV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "computedAdminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAdminStateUp",
                    "optional": true,
                    "label": "_computedAdminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"availability_zone_hints\" <$> TF.attribute",
                    "name": "availability_zone_hints",
                    "method": "computedAvailabilityZoneHints",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedAvailabilityZoneHints",
                    "optional": true,
                    "label": "_computedAvailabilityZoneHints"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external\" <$> TF.attribute",
                    "name": "external",
                    "method": "computedExternal",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedExternal",
                    "optional": true,
                    "label": "_computedExternal"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"shared\" <$> TF.attribute",
                    "name": "shared",
                    "method": "computedShared",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedShared",
                    "optional": true,
                    "label": "_computedShared"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [],
            "type": "NetworkingNetworkV2Resource s",
            "original": "openstack_networking_network_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allowed_address_pairs\" <$> TF.attribute",
                    "name": "allowed_address_pairs",
                    "method": "allowedAddressPairs",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (AllowedAddressPairs s)]",
                    "class": "HasAllowedAddressPairs",
                    "optional": true,
                    "label": "_allowedAddressPairs"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"fixed_ip\" <$> TF.attribute",
                    "name": "fixed_ip",
                    "method": "fixedIp",
                    "conflicts": [],
                    "type": "TF.Attr s [FixedIp s]",
                    "class": "HasFixedIp",
                    "optional": true,
                    "label": "_fixedIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_networkId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_id\" <$> TF.attribute",
                    "name": "network_id",
                    "method": "networkId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetworkId",
                    "optional": false,
                    "label": "_networkId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"no_security_groups\" <$> TF.attribute",
                    "name": "no_security_groups",
                    "method": "noSecurityGroups",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasNoSecurityGroups",
                    "optional": true,
                    "label": "_noSecurityGroups"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"security_group_ids\" <$> TF.attribute",
                    "name": "security_group_ids",
                    "method": "securityGroupIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasSecurityGroupIds",
                    "optional": true,
                    "label": "_securityGroupIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingPortV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "computedAdminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAdminStateUp",
                    "optional": true,
                    "label": "_computedAdminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"all_fixed_ips\" <$> TF.attribute",
                    "name": "all_fixed_ips",
                    "method": "computedAllFixedIps",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedAllFixedIps",
                    "optional": false,
                    "label": "_computedAllFixedIps"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"all_security_group_ids\" <$> TF.attribute",
                    "name": "all_security_group_ids",
                    "method": "computedAllSecurityGroupIds",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (TF.Attr s P.Text)]",
                    "class": "HasComputedAllSecurityGroupIds",
                    "optional": false,
                    "label": "_computedAllSecurityGroupIds"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"device_id\" <$> TF.attribute",
                    "name": "device_id",
                    "method": "computedDeviceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDeviceId",
                    "optional": true,
                    "label": "_computedDeviceId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"device_owner\" <$> TF.attribute",
                    "name": "device_owner",
                    "method": "computedDeviceOwner",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDeviceOwner",
                    "optional": true,
                    "label": "_computedDeviceOwner"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"mac_address\" <$> TF.attribute",
                    "name": "mac_address",
                    "method": "computedMacAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedMacAddress",
                    "optional": true,
                    "label": "_computedMacAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_networkId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_id\" <$> TF.attribute",
                    "name": "network_id",
                    "method": "networkId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetworkId",
                    "optional": false,
                    "label": "_networkId"
                }
            ],
            "type": "NetworkingPortV2Resource s",
            "original": "openstack_networking_port_v2"
        },
        {
            "arguments": [
                {
                    "default": "_routerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router_id\" <$> TF.attribute",
                    "name": "router_id",
                    "method": "routerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouterId",
                    "optional": false,
                    "label": "_routerId"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingRouterInterfaceV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port_id\" <$> TF.attribute",
                    "name": "port_id",
                    "method": "computedPortId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPortId",
                    "optional": true,
                    "label": "_computedPortId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "computedSubnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedSubnetId",
                    "optional": true,
                    "label": "_computedSubnetId"
                }
            ],
            "parameters": [
                {
                    "default": "_routerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router_id\" <$> TF.attribute",
                    "name": "router_id",
                    "method": "routerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouterId",
                    "optional": false,
                    "label": "_routerId"
                }
            ],
            "type": "NetworkingRouterInterfaceV2Resource s",
            "original": "openstack_networking_router_interface_v2"
        },
        {
            "arguments": [
                {
                    "default": "_destinationCidr",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"destination_cidr\" <$> TF.attribute",
                    "name": "destination_cidr",
                    "method": "destinationCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationCidr",
                    "optional": false,
                    "label": "_destinationCidr"
                },
                {
                    "default": "_nextHop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop\" <$> TF.attribute",
                    "name": "next_hop",
                    "method": "nextHop",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHop",
                    "optional": false,
                    "label": "_nextHop"
                },
                {
                    "default": "_routerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router_id\" <$> TF.attribute",
                    "name": "router_id",
                    "method": "routerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouterId",
                    "optional": false,
                    "label": "_routerId"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingRouterRouteV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_destinationCidr",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"destination_cidr\" <$> TF.attribute",
                    "name": "destination_cidr",
                    "method": "destinationCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationCidr",
                    "optional": false,
                    "label": "_destinationCidr"
                },
                {
                    "default": "_nextHop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop\" <$> TF.attribute",
                    "name": "next_hop",
                    "method": "nextHop",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHop",
                    "optional": false,
                    "label": "_nextHop"
                },
                {
                    "default": "_routerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router_id\" <$> TF.attribute",
                    "name": "router_id",
                    "method": "routerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouterId",
                    "optional": false,
                    "label": "_routerId"
                }
            ],
            "type": "NetworkingRouterRouteV2Resource s",
            "original": "openstack_networking_router_route_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"vendor_options\" <$> TF.attribute",
                    "name": "vendor_options",
                    "method": "vendorOptions",
                    "conflicts": [],
                    "type": "TF.Attr s (TF.Attr s (VendorOptions s))",
                    "class": "HasVendorOptions",
                    "optional": true,
                    "label": "_vendorOptions"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingRouterV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "computedAdminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedAdminStateUp",
                    "optional": true,
                    "label": "_computedAdminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"availability_zone_hints\" <$> TF.attribute",
                    "name": "availability_zone_hints",
                    "method": "computedAvailabilityZoneHints",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasComputedAvailabilityZoneHints",
                    "optional": true,
                    "label": "_computedAvailabilityZoneHints"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"distributed\" <$> TF.attribute",
                    "name": "distributed",
                    "method": "computedDistributed",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedDistributed",
                    "optional": true,
                    "label": "_computedDistributed"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_snat\" <$> TF.attribute",
                    "name": "enable_snat",
                    "method": "computedEnableSnat",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasComputedEnableSnat",
                    "optional": true,
                    "label": "_computedEnableSnat"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external_fixed_ip\" <$> TF.attribute",
                    "name": "external_fixed_ip",
                    "method": "computedExternalFixedIp",
                    "conflicts": [],
                    "type": "TF.Attr s [ExternalFixedIp s]",
                    "class": "HasComputedExternalFixedIp",
                    "optional": true,
                    "label": "_computedExternalFixedIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external_gateway\" <$> TF.attribute",
                    "name": "external_gateway",
                    "method": "computedExternalGateway",
                    "conflicts": [
                        "_externalNetworkId"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedExternalGateway",
                    "optional": true,
                    "label": "_computedExternalGateway"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external_network_id\" <$> TF.attribute",
                    "name": "external_network_id",
                    "method": "computedExternalNetworkId",
                    "conflicts": [
                        "_externalGateway"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedExternalNetworkId",
                    "optional": true,
                    "label": "_computedExternalNetworkId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [],
            "type": "NetworkingRouterV2Resource s",
            "original": "openstack_networking_router_v2"
        },
        {
            "arguments": [
                {
                    "default": "_direction",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"direction\" <$> TF.attribute",
                    "name": "direction",
                    "method": "direction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDirection",
                    "optional": false,
                    "label": "_direction"
                },
                {
                    "default": "_ethertype",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ethertype\" <$> TF.attribute",
                    "name": "ethertype",
                    "method": "ethertype",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEthertype",
                    "optional": false,
                    "label": "_ethertype"
                },
                {
                    "default": "_securityGroupId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"security_group_id\" <$> TF.attribute",
                    "name": "security_group_id",
                    "method": "securityGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecurityGroupId",
                    "optional": false,
                    "label": "_securityGroupId"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingSecgroupRuleV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port_range_max\" <$> TF.attribute",
                    "name": "port_range_max",
                    "method": "computedPortRangeMax",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPortRangeMax",
                    "optional": true,
                    "label": "_computedPortRangeMax"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"port_range_min\" <$> TF.attribute",
                    "name": "port_range_min",
                    "method": "computedPortRangeMin",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedPortRangeMin",
                    "optional": true,
                    "label": "_computedPortRangeMin"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"protocol\" <$> TF.attribute",
                    "name": "protocol",
                    "method": "computedProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProtocol",
                    "optional": true,
                    "label": "_computedProtocol"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"remote_group_id\" <$> TF.attribute",
                    "name": "remote_group_id",
                    "method": "computedRemoteGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRemoteGroupId",
                    "optional": true,
                    "label": "_computedRemoteGroupId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"remote_ip_prefix\" <$> TF.attribute",
                    "name": "remote_ip_prefix",
                    "method": "computedRemoteIpPrefix",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRemoteIpPrefix",
                    "optional": true,
                    "label": "_computedRemoteIpPrefix"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_direction",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"direction\" <$> TF.attribute",
                    "name": "direction",
                    "method": "direction",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDirection",
                    "optional": false,
                    "label": "_direction"
                },
                {
                    "default": "_ethertype",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ethertype\" <$> TF.attribute",
                    "name": "ethertype",
                    "method": "ethertype",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEthertype",
                    "optional": false,
                    "label": "_ethertype"
                },
                {
                    "default": "_securityGroupId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"security_group_id\" <$> TF.attribute",
                    "name": "security_group_id",
                    "method": "securityGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSecurityGroupId",
                    "optional": false,
                    "label": "_securityGroupId"
                }
            ],
            "type": "NetworkingSecgroupRuleV2Resource s",
            "original": "openstack_networking_secgroup_rule_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"delete_default_rules\" <$> TF.attribute",
                    "name": "delete_default_rules",
                    "method": "deleteDefaultRules",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDeleteDefaultRules",
                    "optional": true,
                    "label": "_deleteDefaultRules"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingSecgroupV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "computedDescription",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDescription",
                    "optional": true,
                    "label": "_computedDescription"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "NetworkingSecgroupV2Resource s",
            "original": "openstack_networking_secgroup_v2"
        },
        {
            "arguments": [
                {
                    "default": "_destinationCidr",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"destination_cidr\" <$> TF.attribute",
                    "name": "destination_cidr",
                    "method": "destinationCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationCidr",
                    "optional": false,
                    "label": "_destinationCidr"
                },
                {
                    "default": "_nextHop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop\" <$> TF.attribute",
                    "name": "next_hop",
                    "method": "nextHop",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHop",
                    "optional": false,
                    "label": "_nextHop"
                },
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingSubnetRouteV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_destinationCidr",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"destination_cidr\" <$> TF.attribute",
                    "name": "destination_cidr",
                    "method": "destinationCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDestinationCidr",
                    "optional": false,
                    "label": "_destinationCidr"
                },
                {
                    "default": "_nextHop",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"next_hop\" <$> TF.attribute",
                    "name": "next_hop",
                    "method": "nextHop",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNextHop",
                    "optional": false,
                    "label": "_nextHop"
                },
                {
                    "default": "_subnetId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": false,
                    "label": "_subnetId"
                }
            ],
            "type": "NetworkingSubnetRouteV2Resource s",
            "original": "openstack_networking_subnet_route_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dns_nameservers\" <$> TF.attribute",
                    "name": "dns_nameservers",
                    "method": "dnsNameservers",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasDnsNameservers",
                    "optional": true,
                    "label": "_dnsNameservers"
                },
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"enable_dhcp\" <$> TF.attribute",
                    "name": "enable_dhcp",
                    "method": "enableDhcp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasEnableDhcp",
                    "optional": true,
                    "label": "_enableDhcp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"host_routes\" <$> TF.attribute",
                    "name": "host_routes",
                    "method": "hostRoutes",
                    "conflicts": [],
                    "type": "TF.Attr s [HostRoutes s]",
                    "class": "HasHostRoutes",
                    "optional": true,
                    "label": "_hostRoutes"
                },
                {
                    "default": "TF.value 4",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "ip_version",
                    "method": "ipVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasIpVersion",
                    "optional": true,
                    "label": "_ipVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_networkId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_id\" <$> TF.attribute",
                    "name": "network_id",
                    "method": "networkId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetworkId",
                    "optional": false,
                    "label": "_networkId"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"no_gateway\" <$> TF.attribute",
                    "name": "no_gateway",
                    "method": "noGateway",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasNoGateway",
                    "optional": true,
                    "label": "_noGateway"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnetpool_id\" <$> TF.attribute",
                    "name": "subnetpool_id",
                    "method": "subnetpoolId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetpoolId",
                    "optional": true,
                    "label": "_subnetpoolId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingSubnetV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"allocation_pools\" <$> TF.attribute",
                    "name": "allocation_pools",
                    "method": "computedAllocationPools",
                    "conflicts": [],
                    "type": "TF.Attr s [AllocationPools s]",
                    "class": "HasComputedAllocationPools",
                    "optional": true,
                    "label": "_computedAllocationPools"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"cidr\" <$> TF.attribute",
                    "name": "cidr",
                    "method": "computedCidr",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCidr",
                    "optional": true,
                    "label": "_computedCidr"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"gateway_ip\" <$> TF.attribute",
                    "name": "gateway_ip",
                    "method": "computedGatewayIp",
                    "conflicts": [
                        "_noGateway"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedGatewayIp",
                    "optional": true,
                    "label": "_computedGatewayIp"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ipv6_address_mode\" <$> TF.attribute",
                    "name": "ipv6_address_mode",
                    "method": "computedIpv6AddressMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6AddressMode",
                    "optional": true,
                    "label": "_computedIpv6AddressMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ipv6_ra_mode\" <$> TF.attribute",
                    "name": "ipv6_ra_mode",
                    "method": "computedIpv6RaMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedIpv6RaMode",
                    "optional": true,
                    "label": "_computedIpv6RaMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_networkId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"network_id\" <$> TF.attribute",
                    "name": "network_id",
                    "method": "networkId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasNetworkId",
                    "optional": false,
                    "label": "_networkId"
                }
            ],
            "type": "NetworkingSubnetV2Resource s",
            "original": "openstack_networking_subnet_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"address_scope_id\" <$> TF.attribute",
                    "name": "address_scope_id",
                    "method": "addressScopeId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAddressScopeId",
                    "optional": true,
                    "label": "_addressScopeId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_quota\" <$> TF.attribute",
                    "name": "default_quota",
                    "method": "defaultQuota",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDefaultQuota",
                    "optional": true,
                    "label": "_defaultQuota"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"is_default\" <$> TF.attribute",
                    "name": "is_default",
                    "method": "isDefault",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasIsDefault",
                    "optional": true,
                    "label": "_isDefault"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_prefixes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"prefixes\" <$> TF.attribute",
                    "name": "prefixes",
                    "method": "prefixes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPrefixes",
                    "optional": false,
                    "label": "_prefixes"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"shared\" <$> TF.attribute",
                    "name": "shared",
                    "method": "shared",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasShared",
                    "optional": true,
                    "label": "_shared"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "NetworkingSubnetpoolV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"created_at\" <$> TF.attribute",
                    "name": "created_at",
                    "method": "computedCreatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedCreatedAt",
                    "optional": false,
                    "label": "_computedCreatedAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"default_prefixlen\" <$> TF.attribute",
                    "name": "default_prefixlen",
                    "method": "computedDefaultPrefixlen",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedDefaultPrefixlen",
                    "optional": true,
                    "label": "_computedDefaultPrefixlen"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ip_version\" <$> TF.attribute",
                    "name": "ip_version",
                    "method": "computedIpVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedIpVersion",
                    "optional": true,
                    "label": "_computedIpVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"max_prefixlen\" <$> TF.attribute",
                    "name": "max_prefixlen",
                    "method": "computedMaxPrefixlen",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMaxPrefixlen",
                    "optional": true,
                    "label": "_computedMaxPrefixlen"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"min_prefixlen\" <$> TF.attribute",
                    "name": "min_prefixlen",
                    "method": "computedMinPrefixlen",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMinPrefixlen",
                    "optional": true,
                    "label": "_computedMinPrefixlen"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"project_id\" <$> TF.attribute",
                    "name": "project_id",
                    "method": "computedProjectId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedProjectId",
                    "optional": true,
                    "label": "_computedProjectId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"revision_number\" <$> TF.attribute",
                    "name": "revision_number",
                    "method": "computedRevisionNumber",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedRevisionNumber",
                    "optional": false,
                    "label": "_computedRevisionNumber"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"updated_at\" <$> TF.attribute",
                    "name": "updated_at",
                    "method": "computedUpdatedAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedUpdatedAt",
                    "optional": false,
                    "label": "_computedUpdatedAt"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "_prefixes",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"prefixes\" <$> TF.attribute",
                    "name": "prefixes",
                    "method": "prefixes",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPrefixes",
                    "optional": false,
                    "label": "_prefixes"
                }
            ],
            "type": "NetworkingSubnetpoolV2Resource s",
            "original": "openstack_networking_subnetpool_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"container_read\" <$> TF.attribute",
                    "name": "container_read",
                    "method": "containerRead",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerRead",
                    "optional": true,
                    "label": "_containerRead"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"container_sync_key\" <$> TF.attribute",
                    "name": "container_sync_key",
                    "method": "containerSyncKey",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerSyncKey",
                    "optional": true,
                    "label": "_containerSyncKey"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"container_sync_to\" <$> TF.attribute",
                    "name": "container_sync_to",
                    "method": "containerSyncTo",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerSyncTo",
                    "optional": true,
                    "label": "_containerSyncTo"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"container_write\" <$> TF.attribute",
                    "name": "container_write",
                    "method": "containerWrite",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerWrite",
                    "optional": true,
                    "label": "_containerWrite"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "content_type",
                    "method": "contentType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContentType",
                    "optional": true,
                    "label": "_contentType"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"force_destroy\" <$> TF.attribute",
                    "name": "force_destroy",
                    "method": "forceDestroy",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasForceDestroy",
                    "optional": true,
                    "label": "_forceDestroy"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "optional": true,
                    "label": "_metadata"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "schema": "Resource",
            "name": "ObjectstorageContainerV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                }
            ],
            "parameters": [
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ObjectstorageContainerV1Resource s",
            "original": "openstack_objectstorage_container_v1"
        },
        {
            "arguments": [
                {
                    "default": "_containerName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"container_name\" <$> TF.attribute",
                    "name": "container_name",
                    "method": "containerName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerName",
                    "optional": false,
                    "label": "_containerName"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content\" <$> TF.attribute",
                    "name": "content",
                    "method": "content",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "source",
                            "label": "_source"
                        },
                        {
                            "default": "TF.Nil",
                            "method": "copyFrom",
                            "label": "_copyFrom"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContent",
                    "optional": true,
                    "label": "_content"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"copy_from\" <$> TF.attribute",
                    "name": "copy_from",
                    "method": "copyFrom",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "source",
                            "label": "_source"
                        },
                        {
                            "default": "TF.Nil",
                            "method": "content",
                            "label": "_content"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasCopyFrom",
                    "optional": true,
                    "label": "_copyFrom"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delete_after\" <$> TF.attribute",
                    "name": "delete_after",
                    "method": "deleteAfter",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasDeleteAfter",
                    "optional": true,
                    "label": "_deleteAfter"
                },
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"detect_content_type\" <$> TF.attribute",
                    "name": "detect_content_type",
                    "method": "detectContentType",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasDetectContentType",
                    "optional": true,
                    "label": "_detectContentType"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"metadata\" <$> TF.attribute",
                    "name": "metadata",
                    "method": "metadata",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasMetadata",
                    "optional": true,
                    "label": "_metadata"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"source\" <$> TF.attribute",
                    "name": "source",
                    "method": "source",
                    "conflicts": [
                        {
                            "default": "TF.Nil",
                            "method": "copyFrom",
                            "label": "_copyFrom"
                        },
                        {
                            "default": "TF.Nil",
                            "method": "content",
                            "label": "_content"
                        }
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSource",
                    "optional": true,
                    "label": "_source"
                }
            ],
            "schema": "Resource",
            "name": "ObjectstorageObjectV1Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_disposition\" <$> TF.attribute",
                    "name": "content_disposition",
                    "method": "computedContentDisposition",
                    "conflicts": [
                        "_copyFrom"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedContentDisposition",
                    "optional": true,
                    "label": "_computedContentDisposition"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_encoding\" <$> TF.attribute",
                    "name": "content_encoding",
                    "method": "computedContentEncoding",
                    "conflicts": [
                        "_copyFrom"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedContentEncoding",
                    "optional": true,
                    "label": "_computedContentEncoding"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_length\" <$> TF.attribute",
                    "name": "content_length",
                    "method": "computedContentLength",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedContentLength",
                    "optional": false,
                    "label": "_computedContentLength"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"content_type\" <$> TF.attribute",
                    "name": "content_type",
                    "method": "computedContentType",
                    "conflicts": [
                        "_copyFrom"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedContentType",
                    "optional": true,
                    "label": "_computedContentType"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"date\" <$> TF.attribute",
                    "name": "date",
                    "method": "computedDate",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDate",
                    "optional": false,
                    "label": "_computedDate"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"delete_at\" <$> TF.attribute",
                    "name": "delete_at",
                    "method": "computedDeleteAt",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedDeleteAt",
                    "optional": true,
                    "label": "_computedDeleteAt"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"etag\" <$> TF.attribute",
                    "name": "etag",
                    "method": "computedEtag",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEtag",
                    "optional": true,
                    "label": "_computedEtag"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"last_modified\" <$> TF.attribute",
                    "name": "last_modified",
                    "method": "computedLastModified",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedLastModified",
                    "optional": false,
                    "label": "_computedLastModified"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"object_manifest\" <$> TF.attribute",
                    "name": "object_manifest",
                    "method": "computedObjectManifest",
                    "conflicts": [
                        "_copyFrom",
                        "_source",
                        "_content"
                    ],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedObjectManifest",
                    "optional": true,
                    "label": "_computedObjectManifest"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"trans_id\" <$> TF.attribute",
                    "name": "trans_id",
                    "method": "computedTransId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTransId",
                    "optional": false,
                    "label": "_computedTransId"
                }
            ],
            "parameters": [
                {
                    "default": "_containerName",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"container_name\" <$> TF.attribute",
                    "name": "container_name",
                    "method": "containerName",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasContainerName",
                    "optional": false,
                    "label": "_containerName"
                },
                {
                    "default": "_name",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": false,
                    "label": "_name"
                }
            ],
            "type": "ObjectstorageObjectV1Resource s",
            "original": "openstack_objectstorage_object_v1"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"endpoints\" <$> TF.attribute",
                    "name": "endpoints",
                    "method": "endpoints",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasEndpoints",
                    "optional": true,
                    "label": "_endpoints"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "VpnaasEndpointGroupV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"type\" <$> TF.attribute",
                    "name": "type",
                    "method": "computedType'",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedType'",
                    "optional": true,
                    "label": "_computedType'"
                }
            ],
            "parameters": [],
            "type": "VpnaasEndpointGroupV2Resource s",
            "original": "openstack_vpnaas_endpoint_group_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.value \"sha1\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auth_algorithm\" <$> TF.attribute",
                    "name": "auth_algorithm",
                    "method": "authAlgorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasAuthAlgorithm",
                    "optional": true,
                    "label": "_authAlgorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.value \"aes-128\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"encryption_algorithm\" <$> TF.attribute",
                    "name": "encryption_algorithm",
                    "method": "encryptionAlgorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasEncryptionAlgorithm",
                    "optional": true,
                    "label": "_encryptionAlgorithm"
                },
                {
                    "default": "TF.value \"v1\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"ike_version\" <$> TF.attribute",
                    "name": "ike_version",
                    "method": "ikeVersion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIkeVersion",
                    "optional": true,
                    "label": "_ikeVersion"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.value \"group5\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pfs\" <$> TF.attribute",
                    "name": "pfs",
                    "method": "pfs",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPfs",
                    "optional": true,
                    "label": "_pfs"
                },
                {
                    "default": "TF.value \"main\"",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"phase1_negotiation_mode\" <$> TF.attribute",
                    "name": "phase1_negotiation_mode",
                    "method": "phase1NegotiationMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPhase1NegotiationMode",
                    "optional": true,
                    "label": "_phase1NegotiationMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "VpnaasIkePolicyV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lifetime\" <$> TF.attribute",
                    "name": "lifetime",
                    "method": "computedLifetime",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Lifetime s)]",
                    "class": "HasComputedLifetime",
                    "optional": true,
                    "label": "_computedLifetime"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [],
            "type": "VpnaasIkePolicyV2Resource s",
            "original": "openstack_vpnaas_ike_policy_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "VpnaasIpsecPolicyV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"auth_algorithm\" <$> TF.attribute",
                    "name": "auth_algorithm",
                    "method": "computedAuthAlgorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedAuthAlgorithm",
                    "optional": true,
                    "label": "_computedAuthAlgorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"encapsulation_mode\" <$> TF.attribute",
                    "name": "encapsulation_mode",
                    "method": "computedEncapsulationMode",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEncapsulationMode",
                    "optional": true,
                    "label": "_computedEncapsulationMode"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"encryption_algorithm\" <$> TF.attribute",
                    "name": "encryption_algorithm",
                    "method": "computedEncryptionAlgorithm",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedEncryptionAlgorithm",
                    "optional": true,
                    "label": "_computedEncryptionAlgorithm"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"lifetime\" <$> TF.attribute",
                    "name": "lifetime",
                    "method": "computedLifetime",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Lifetime s)]",
                    "class": "HasComputedLifetime",
                    "optional": true,
                    "label": "_computedLifetime"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"pfs\" <$> TF.attribute",
                    "name": "pfs",
                    "method": "computedPfs",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedPfs",
                    "optional": true,
                    "label": "_computedPfs"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"transform_protocol\" <$> TF.attribute",
                    "name": "transform_protocol",
                    "method": "computedTransformProtocol",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTransformProtocol",
                    "optional": true,
                    "label": "_computedTransformProtocol"
                }
            ],
            "parameters": [],
            "type": "VpnaasIpsecPolicyV2Resource s",
            "original": "openstack_vpnaas_ipsec_policy_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.True",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_routerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router_id\" <$> TF.attribute",
                    "name": "router_id",
                    "method": "routerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouterId",
                    "optional": false,
                    "label": "_routerId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"subnet_id\" <$> TF.attribute",
                    "name": "subnet_id",
                    "method": "subnetId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasSubnetId",
                    "optional": true,
                    "label": "_subnetId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                }
            ],
            "schema": "Resource",
            "name": "VpnaasServiceV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external_v4_ip\" <$> TF.attribute",
                    "name": "external_v4_ip",
                    "method": "computedExternalV4Ip",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedExternalV4Ip",
                    "optional": false,
                    "label": "_computedExternalV4Ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"external_v6_ip\" <$> TF.attribute",
                    "name": "external_v6_ip",
                    "method": "computedExternalV6Ip",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedExternalV6Ip",
                    "optional": false,
                    "label": "_computedExternalV6Ip"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"status\" <$> TF.attribute",
                    "name": "status",
                    "method": "computedStatus",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedStatus",
                    "optional": false,
                    "label": "_computedStatus"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_routerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"router_id\" <$> TF.attribute",
                    "name": "router_id",
                    "method": "routerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasRouterId",
                    "optional": false,
                    "label": "_routerId"
                }
            ],
            "type": "VpnaasServiceV2Resource s",
            "original": "openstack_vpnaas_service_v2"
        },
        {
            "arguments": [
                {
                    "default": "TF.value P.False",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"admin_state_up\" <$> TF.attribute",
                    "name": "admin_state_up",
                    "method": "adminStateUp",
                    "conflicts": [],
                    "type": "TF.Attr s P.Bool",
                    "class": "HasAdminStateUp",
                    "optional": true,
                    "label": "_adminStateUp"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"description\" <$> TF.attribute",
                    "name": "description",
                    "method": "description",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasDescription",
                    "optional": true,
                    "label": "_description"
                },
                {
                    "default": "_ikepolicyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ikepolicy_id\" <$> TF.attribute",
                    "name": "ikepolicy_id",
                    "method": "ikepolicyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIkepolicyId",
                    "optional": false,
                    "label": "_ikepolicyId"
                },
                {
                    "default": "_ipsecpolicyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ipsecpolicy_id\" <$> TF.attribute",
                    "name": "ipsecpolicy_id",
                    "method": "ipsecpolicyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpsecpolicyId",
                    "optional": false,
                    "label": "_ipsecpolicyId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"local_ep_group_id\" <$> TF.attribute",
                    "name": "local_ep_group_id",
                    "method": "localEpGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLocalEpGroupId",
                    "optional": true,
                    "label": "_localEpGroupId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"local_id\" <$> TF.attribute",
                    "name": "local_id",
                    "method": "localId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasLocalId",
                    "optional": true,
                    "label": "_localId"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"name\" <$> TF.attribute",
                    "name": "name",
                    "method": "name",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasName",
                    "optional": true,
                    "label": "_name"
                },
                {
                    "default": "_peerAddress",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"peer_address\" <$> TF.attribute",
                    "name": "peer_address",
                    "method": "peerAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerAddress",
                    "optional": false,
                    "label": "_peerAddress"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"peer_cidrs\" <$> TF.attribute",
                    "name": "peer_cidrs",
                    "method": "peerCidrs",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s P.Text]",
                    "class": "HasPeerCidrs",
                    "optional": true,
                    "label": "_peerCidrs"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"peer_ep_group_id\" <$> TF.attribute",
                    "name": "peer_ep_group_id",
                    "method": "peerEpGroupId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerEpGroupId",
                    "optional": true,
                    "label": "_peerEpGroupId"
                },
                {
                    "default": "_peerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"peer_id\" <$> TF.attribute",
                    "name": "peer_id",
                    "method": "peerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerId",
                    "optional": false,
                    "label": "_peerId"
                },
                {
                    "default": "_psk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"psk\" <$> TF.attribute",
                    "name": "psk",
                    "method": "psk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPsk",
                    "optional": false,
                    "label": "_psk"
                },
                {
                    "default": "TF.Nil",
                    "computed": false,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"value_specs\" <$> TF.attribute",
                    "name": "value_specs",
                    "method": "valueSpecs",
                    "conflicts": [],
                    "type": "TF.Attr s (P.HashMap P.Text (TF.Attr s P.Text))",
                    "class": "HasValueSpecs",
                    "optional": true,
                    "label": "_valueSpecs"
                },
                {
                    "default": "_vpnserviceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vpnservice_id\" <$> TF.attribute",
                    "name": "vpnservice_id",
                    "method": "vpnserviceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVpnserviceId",
                    "optional": false,
                    "label": "_vpnserviceId"
                }
            ],
            "schema": "Resource",
            "name": "VpnaasSiteConnectionV2Resource",
            "attributes": [
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"dpd\" <$> TF.attribute",
                    "name": "dpd",
                    "method": "computedDpd",
                    "conflicts": [],
                    "type": "TF.Attr s [TF.Attr s (Dpd s)]",
                    "class": "HasComputedDpd",
                    "optional": true,
                    "label": "_computedDpd"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"initiator\" <$> TF.attribute",
                    "name": "initiator",
                    "method": "computedInitiator",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedInitiator",
                    "optional": true,
                    "label": "_computedInitiator"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"mtu\" <$> TF.attribute",
                    "name": "mtu",
                    "method": "computedMtu",
                    "conflicts": [],
                    "type": "TF.Attr s P.Integer",
                    "class": "HasComputedMtu",
                    "optional": true,
                    "label": "_computedMtu"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"region\" <$> TF.attribute",
                    "name": "region",
                    "method": "computedRegion",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedRegion",
                    "optional": true,
                    "label": "_computedRegion"
                },
                {
                    "default": "TF.Nil",
                    "computed": true,
                    "required": false,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"tenant_id\" <$> TF.attribute",
                    "name": "tenant_id",
                    "method": "computedTenantId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasComputedTenantId",
                    "optional": true,
                    "label": "_computedTenantId"
                }
            ],
            "parameters": [
                {
                    "default": "_ikepolicyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ikepolicy_id\" <$> TF.attribute",
                    "name": "ikepolicy_id",
                    "method": "ikepolicyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIkepolicyId",
                    "optional": false,
                    "label": "_ikepolicyId"
                },
                {
                    "default": "_ipsecpolicyId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"ipsecpolicy_id\" <$> TF.attribute",
                    "name": "ipsecpolicy_id",
                    "method": "ipsecpolicyId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasIpsecpolicyId",
                    "optional": false,
                    "label": "_ipsecpolicyId"
                },
                {
                    "default": "_peerAddress",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"peer_address\" <$> TF.attribute",
                    "name": "peer_address",
                    "method": "peerAddress",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerAddress",
                    "optional": false,
                    "label": "_peerAddress"
                },
                {
                    "default": "_peerId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"peer_id\" <$> TF.attribute",
                    "name": "peer_id",
                    "method": "peerId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPeerId",
                    "optional": false,
                    "label": "_peerId"
                },
                {
                    "default": "_psk",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": false,
                    "encoder": "TF.assign \"psk\" <$> TF.attribute",
                    "name": "psk",
                    "method": "psk",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasPsk",
                    "optional": false,
                    "label": "_psk"
                },
                {
                    "default": "_vpnserviceId",
                    "computed": false,
                    "required": true,
                    "help": [],
                    "forceNew": true,
                    "encoder": "TF.assign \"vpnservice_id\" <$> TF.attribute",
                    "name": "vpnservice_id",
                    "method": "vpnserviceId",
                    "conflicts": [],
                    "type": "TF.Attr s P.Text",
                    "class": "HasVpnserviceId",
                    "optional": false,
                    "label": "_vpnserviceId"
                }
            ],
            "type": "VpnaasSiteConnectionV2Resource s",
            "original": "openstack_vpnaas_site_connection_v2"
        }
    ],
    "dependencies": [
        "base",
        "unordered-containers",
        "text",
        "terrafomo",
        "hashable",
        "microlens"
    ],
    "name": "OpenStack",
    "parameters": [],
    "package": "terrafomo-openstack",
    "type": "Provider",
    "original": "openstack"
}