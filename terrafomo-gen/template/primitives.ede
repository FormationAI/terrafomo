-- This module is auto-generated.

{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE StrictData        #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

{% include "_include/license.ede" %}
--
module {{ namespace }}
    (
    {% for primitive in primitives %}
    -- ** {{ primitive.value.original }}
    {% if primitive.first %} {% else %},{% endif %} {{ primitive.value.name }} (..)

  {% endfor %}
    ) where

import Data.Functor ((<$>))

import GHC.Base (($))

{% for import in qualified %}
import qualified {{ import.value }} as P
{% endfor %}
import qualified Data.Aeson as P
import qualified Data.String as P
import qualified Terrafomo.Encode as TF
import qualified Terrafomo.Core as TF

{% for primitive in primitives %}

-- | @{{ primitive.value.original }}@ newtype.
newtype {{ primitive.value.type }} = {{ primitive.value.con.name }}
    { {% for field in primitive.value.arguments %}{{ primitive.value.con.smart }} :: {{ field.value.type }}{% endfor %}
    } deriving
       {% for derive in primitive.value.derive %}
         {% if derive.first %}( {% else %}, {% endif %}{{ derive.value }}
       {% endfor %}
         )

instance TF.IsValid {{ primitive.value.type }}
{% endfor %}
