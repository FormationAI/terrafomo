-- This module is auto-generated.

{-# LANGUAGE NoImplicitPrelude    #-}
{-# LANGUAGE UndecidableInstances #-}

{% include "_include/license.ede" %}
module {{ namespace }}
    (
{% if !(arguments | empty) %}
    -- ** Arguments
  {% for class in arguments %}
    {% if class.first %}  {% else %}, {% endif %}{{ class.value.name }} (..)
  {% endfor %}
{% elif !(attributes | empty) %}
    -- ** Attributes
  {% for class in attributes %}
    {% if class.first %}  {% else %}, {% endif %}{{ class.value.name }} (..)
  {% endfor %}
{% endif %}
    ) where
{% for class in arguments %}
  {% if class.first %}
import GHC.Base ((.))

import qualified Lens.Micro as P
import qualified Terrafomo.Lens as TF
import qualified Terrafomo.Schema as TF
  {% endif %}

class {{ class.value.name }} a b | a -> b where
    {{ class.value.method }} :: P.Lens' a b

instance {{ class.value.name }} a b => {{ class.value.name }} (TF.Resource l p a) b where
    {{ class.value.method }} = TF.configuration . {{ class.value.method }}
{% endfor %}
{% for class in attributes %}

class {{ class.value.name }} a b | a -> b where
    {{ class.value.method }} :: a -> b
{% endfor %}
