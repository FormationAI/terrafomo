{
  "name": "postgresql",
  "schemas": [
    {
      "name": "connect_timeout",
      "type": "TypeInt",
      "description": "Maximum wait for connection, in seconds. Zero or not specified means wait indefinitely.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "database",
      "type": "TypeString",
      "description": "The name of the database to connect to in order to conenct to (defaults to `postgres`).",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "expected_version",
      "type": "TypeString",
      "description": "Specify the expected version of PostgreSQL.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0,
      "default": "9.0.0"
    },
    {
      "name": "host",
      "type": "TypeString",
      "description": "Name of PostgreSQL server address to connect to",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "max_connections",
      "type": "TypeInt",
      "description": "Maximum number of connections to establish to the database. Zero means unlimited.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "password",
      "type": "TypeString",
      "description": "Password to be used if the PostgreSQL server demands password authentication",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": true,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "port",
      "type": "TypeInt",
      "description": "The PostgreSQL port number to connect to at the server host, or socket file name extension for Unix-domain connections",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "ssl_mode",
      "type": "TypeString",
      "deprecated": "Rename PostgreSQL provider `ssl_mode` attribute to `sslmode`",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "sslmode",
      "type": "TypeString",
      "description": "This option determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the PostgreSQL server",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "username",
      "type": "TypeString",
      "description": "PostgreSQL user name to connect as",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    }
  ],
  "resources": [
    {
      "name": "postgresql_database",
      "schemas": [
        {
          "name": "allow_connections",
          "type": "TypeBool",
          "description": "If false then no one can connect to this database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "connection_limit",
          "type": "TypeInt",
          "description": "How many concurrent connections can be made to this database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "-1"
        },
        {
          "name": "encoding",
          "type": "TypeString",
          "description": "Character set encoding to use in the new database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "is_template",
          "type": "TypeBool",
          "description": "If true, then this database can be cloned by any user with CREATEDB privileges",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "lc_collate",
          "type": "TypeString",
          "description": "Collation order (LC_COLLATE) to use in the new database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "lc_ctype",
          "type": "TypeString",
          "description": "Character classification (LC_CTYPE) to use in the new database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "The PostgreSQL database name to connect to",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "owner",
          "type": "TypeString",
          "description": "The ROLE which owns the database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "tablespace_name",
          "type": "TypeString",
          "description": "The name of the tablespace that will be associated with the new database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "template",
          "type": "TypeString",
          "description": "The name of the template from which to create the new database",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "postgresql_extension",
      "schemas": [
        {
          "name": "name",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "schema",
          "type": "TypeString",
          "description": "Sets the schema of an extension",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "version",
          "type": "TypeString",
          "description": "Sets the version number of the extension",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "postgresql_role",
      "schemas": [
        {
          "name": "bypass_row_level_security",
          "type": "TypeBool",
          "description": "Determine whether a role bypasses every row-level security (RLS) policy",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "connection_limit",
          "type": "TypeInt",
          "description": "How many concurrent connections can be made with this role",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "-1"
        },
        {
          "name": "create_database",
          "type": "TypeBool",
          "description": "Define a role's ability to create databases",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "create_role",
          "type": "TypeBool",
          "description": "Determine whether this role will be permitted to create new roles",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "encrypted",
          "type": "TypeString",
          "deprecated": "Rename PostgreSQL role resource attribute \"encrypted\" to \"encrypted_password\"",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "encrypted_password",
          "type": "TypeBool",
          "description": "Control whether the password is stored encrypted in the system catalogs",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "inherit",
          "type": "TypeBool",
          "description": "Determine whether a role \"inherits\" the privileges of roles it is a member of",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "login",
          "type": "TypeBool",
          "description": "Determine whether a role is allowed to log in",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "The name of the role",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "password",
          "type": "TypeString",
          "description": "Sets the role's password",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": true,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "replication",
          "type": "TypeBool",
          "description": "Determine whether a role is allowed to initiate streaming replication or put the system in and out of backup mode",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "skip_drop_role",
          "type": "TypeBool",
          "description": "Skip actually running the DROP ROLE command when removing a ROLE from PostgreSQL",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "skip_reassign_owned",
          "type": "TypeBool",
          "description": "Skip actually running the REASSIGN OWNED command when removing a role from PostgreSQL",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "superuser",
          "type": "TypeBool",
          "description": "Determine whether the new role is a \"superuser\"",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "valid_until",
          "type": "TypeString",
          "description": "Sets a date and time after which the role's password is no longer valid",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "infinity"
        }
      ]
    },
    {
      "name": "postgresql_schema",
      "schemas": [
        {
          "name": "if_not_exists",
          "type": "TypeBool",
          "description": "When true, use the existing schema if it exists",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "The name of the schema",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "owner",
          "type": "TypeString",
          "description": "The ROLE name who owns the schema",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "policy",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "policy",
            "schemas": [
              {
                "name": "create",
                "type": "TypeBool",
                "description": "If true, allow the specified ROLEs to CREATE new objects within the schema(s)",
                "conflictsWith": [
                  "policy.create_with_grant"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "false"
              },
              {
                "name": "create_with_grant",
                "type": "TypeBool",
                "description": "If true, allow the specified ROLEs to CREATE new objects within the schema(s) and GRANT the same CREATE privilege to different ROLEs",
                "conflictsWith": [
                  "policy.create"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "false"
              },
              {
                "name": "role",
                "type": "TypeString",
                "description": "ROLE who will receive this policy (default: PUBLIC)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "schema": {
                  "name": "role",
                  "type": "TypeString",
                  "conflictsWith": [],
                  "optional": false,
                  "required": false,
                  "computed": false,
                  "forceNew": false,
                  "sensitive": false,
                  "minItems": 0,
                  "maxItems": 0
                }
              },
              {
                "name": "usage",
                "type": "TypeBool",
                "description": "If true, allow the specified ROLEs to use objects within the schema(s)",
                "conflictsWith": [
                  "policy.usage_with_grant"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "false"
              },
              {
                "name": "usage_with_grant",
                "type": "TypeBool",
                "description": "If true, allow the specified ROLEs to use objects within the schema(s) and GRANT the same USAGE privilege to different ROLEs",
                "conflictsWith": [
                  "policy.usage"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "false"
              }
            ]
          }
        }
      ]
    }
  ],
  "dataSources": []
}
