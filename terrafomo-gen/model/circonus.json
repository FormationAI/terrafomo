{
  "name": "circonus",
  "version": "0.1.0-24-g3054a7a",
  "schemas": [
    {
      "name": "api_url",
      "type": "TypeString",
      "description": "URL of the Circonus API",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0,
      "default": "https://api.circonus.com/v2"
    },
    {
      "name": "auto_tag",
      "type": "TypeBool",
      "description": "Signals that the provider should automatically add a tag to all API calls denoting that the resource was created by Terraform",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0,
      "default": "false"
    },
    {
      "name": "key",
      "type": "TypeString",
      "description": "API token used to authenticate with the Circonus API",
      "conflictsWith": [],
      "optional": false,
      "required": true,
      "computed": false,
      "forceNew": false,
      "sensitive": true,
      "minItems": 0,
      "maxItems": 0
    }
  ],
  "resources": [
    {
      "name": "circonus_check",
      "schemas": [
        {
          "name": "active",
          "type": "TypeBool",
          "description": "If the check is activate or disabled",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "caql",
          "type": "TypeSet",
          "description": "CAQL check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "caql",
            "schemas": [
              {
                "name": "query",
                "type": "TypeString",
                "description": "The query definition",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "check_by_collector",
          "type": "TypeMap",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "check_by_collector",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "check_id",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "checks",
          "type": "TypeList",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "checks",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "cloudwatch",
          "type": "TypeSet",
          "description": "CloudWatch check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "cloudwatch",
            "schemas": [
              {
                "name": "api_key",
                "type": "TypeString",
                "description": "The AWS API Key",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": true,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "api_secret",
                "type": "TypeString",
                "description": "The AWS API Secret",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": true,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "dimmensions",
                "type": "TypeMap",
                "description": "The dimensions to query for the metric",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "metric",
                "type": "TypeSet",
                "description": "One or more CloudWatch Metric attributes",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 1,
                "maxItems": 0,
                "schema": {
                  "name": "metric",
                  "type": "TypeString",
                  "conflictsWith": [],
                  "optional": false,
                  "required": false,
                  "computed": false,
                  "forceNew": false,
                  "sensitive": false,
                  "minItems": 0,
                  "maxItems": 0
                }
              },
              {
                "name": "namespace",
                "type": "TypeString",
                "description": "The namespace to pull telemetry from",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "url",
                "type": "TypeString",
                "description": "The URL including schema and hostname for the Cloudwatch monitoring server. This value will be used to specify the region - for example, to pull from us-east-1, the URL would be https://monitoring.us-east-1.amazonaws.com.",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "version",
                "type": "TypeString",
                "description": "The version of the Cloudwatch API to use.",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "2010-08-01"
              }
            ]
          }
        },
        {
          "name": "collector",
          "type": "TypeSet",
          "description": "The collector(s) that are responsible for gathering the metrics",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 0,
          "resource": {
            "name": "collector",
            "schemas": [
              {
                "name": "id",
                "type": "TypeString",
                "description": "The ID of the collector",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "consul",
          "type": "TypeList",
          "description": "Consul check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 1,
          "resource": {
            "name": "consul",
            "schemas": [
              {
                "name": "acl_token",
                "type": "TypeString",
                "description": "A Consul ACL token",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "allow_stale",
                "type": "TypeBool",
                "description": "Allow Consul to read from a non-leader system",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "true"
              },
              {
                "name": "ca_chain",
                "type": "TypeString",
                "description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "certificate_file",
                "type": "TypeString",
                "description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "check_blacklist",
                "type": "TypeList",
                "description": "A blacklist of check names to exclude from metric results",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "schema": {
                  "name": "check_blacklist",
                  "type": "TypeString",
                  "conflictsWith": [],
                  "optional": false,
                  "required": false,
                  "computed": false,
                  "forceNew": false,
                  "sensitive": false,
                  "minItems": 0,
                  "maxItems": 0
                }
              },
              {
                "name": "ciphers",
                "type": "TypeString",
                "description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "dc",
                "type": "TypeString",
                "description": "The Consul datacenter to extract health information from",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "headers",
                "type": "TypeMap",
                "description": "Map of HTTP Headers to send along with HTTP Requests",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "http_addr",
                "type": "TypeString",
                "description": "The HTTP Address of a Consul agent to query",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "http://consul.service.consul"
              },
              {
                "name": "key_file",
                "type": "TypeString",
                "description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "node",
                "type": "TypeString",
                "description": "Node Name or NodeID of a Consul agent",
                "conflictsWith": [
                  "consul.service",
                  "consul.state"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "node_blacklist",
                "type": "TypeList",
                "description": "A blacklist of node names or IDs to exclude from metric results",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "schema": {
                  "name": "node_blacklist",
                  "type": "TypeString",
                  "conflictsWith": [],
                  "optional": false,
                  "required": false,
                  "computed": false,
                  "forceNew": false,
                  "sensitive": false,
                  "minItems": 0,
                  "maxItems": 0
                }
              },
              {
                "name": "service",
                "type": "TypeString",
                "description": "Name of the Consul service to check",
                "conflictsWith": [
                  "consul.node",
                  "consul.state"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "service_blacklist",
                "type": "TypeList",
                "description": "A blacklist of service names to exclude from metric results",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "schema": {
                  "name": "service_blacklist",
                  "type": "TypeString",
                  "conflictsWith": [],
                  "optional": false,
                  "required": false,
                  "computed": false,
                  "forceNew": false,
                  "sensitive": false,
                  "minItems": 0,
                  "maxItems": 0
                }
              },
              {
                "name": "state",
                "type": "TypeString",
                "description": "Check for Consul services in this particular state",
                "conflictsWith": [
                  "consul.node",
                  "consul.service"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "created",
          "type": "TypeInt",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "http",
          "type": "TypeSet",
          "description": "HTTP check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "http",
            "schemas": [
              {
                "name": "auth_method",
                "type": "TypeString",
                "description": "The HTTP Authentication method",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "auth_password",
                "type": "TypeString",
                "description": "The HTTP Authentication user password",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": true,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "auth_user",
                "type": "TypeString",
                "description": "The HTTP Authentication user name",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "body_regexp",
                "type": "TypeString",
                "description": "This regular expression is matched against the body of the response. If a match is not found, the check will be marked as \"bad.",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "ca_chain",
                "type": "TypeString",
                "description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "certificate_file",
                "type": "TypeString",
                "description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "ciphers",
                "type": "TypeString",
                "description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "code",
                "type": "TypeString",
                "description": "The HTTP code that is expected. If the code received does not match this regular expression, the check is marked as \"bad.\"",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "^200$"
              },
              {
                "name": "extract",
                "type": "TypeString",
                "description": "This regular expression is matched against the body of the response globally. The first capturing match is the key and the second capturing match is the value. Each key/value extracted is registered as a metric for the check.",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "headers",
                "type": "TypeMap",
                "description": "Map of HTTP Headers to send along with HTTP Requests",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "key_file",
                "type": "TypeString",
                "description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "method",
                "type": "TypeString",
                "description": "The HTTP method to use",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "GET"
              },
              {
                "name": "payload",
                "type": "TypeString",
                "description": "The information transferred as the payload of an HTTP request",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "read_limit",
                "type": "TypeInt",
                "description": "Sets an approximate limit on the data read (0 means no limit)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "url",
                "type": "TypeString",
                "description": "The URL to use as the target of the check",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "version",
                "type": "TypeString",
                "description": "Sets the HTTP version for the check to use",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "1.1"
              }
            ]
          }
        },
        {
          "name": "httptrap",
          "type": "TypeSet",
          "description": "HTTP Trap check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "httptrap",
            "schemas": [
              {
                "name": "async_metrics",
                "type": "TypeBool",
                "description": "Specify whether httptrap metrics are logged immediately or held until the status message is emitted",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "false"
              },
              {
                "name": "secret",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": true,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "icmp_ping",
          "type": "TypeSet",
          "description": "ICMP ping check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "icmp_ping",
            "schemas": [
              {
                "name": "availability",
                "type": "TypeFloat",
                "description": "The percentage of ICMP available required for the check to be considered \"good.\"",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "1E+02"
              },
              {
                "name": "count",
                "type": "TypeInt",
                "description": "The number of ICMP requests to send during a single check.",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "5"
              },
              {
                "name": "interval",
                "type": "TypeString",
                "description": "The number of milliseconds between ICMP requests.",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "2s"
              }
            ]
          }
        },
        {
          "name": "json",
          "type": "TypeSet",
          "description": "JSON check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "json",
            "schemas": [
              {
                "name": "auth_method",
                "type": "TypeString",
                "description": "The HTTP Authentication method",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "auth_password",
                "type": "TypeString",
                "description": "The HTTP Authentication user password",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": true,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "auth_user",
                "type": "TypeString",
                "description": "The HTTP Authentication user name",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "ca_chain",
                "type": "TypeString",
                "description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "certificate_file",
                "type": "TypeString",
                "description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "ciphers",
                "type": "TypeString",
                "description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "headers",
                "type": "TypeMap",
                "description": "Map of HTTP Headers to send along with HTTP Requests",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "key_file",
                "type": "TypeString",
                "description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "method",
                "type": "TypeString",
                "description": "The HTTP method to use",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "GET"
              },
              {
                "name": "payload",
                "type": "TypeString",
                "description": "The information transferred as the payload of an HTTP request",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "port",
                "type": "TypeInt",
                "description": "Specifies the port on which the management interface can be reached",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "443"
              },
              {
                "name": "read_limit",
                "type": "TypeInt",
                "description": "Sets an approximate limit on the data read (0 means no limit)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "url",
                "type": "TypeString",
                "description": "The URL to use as the target of the check",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "version",
                "type": "TypeString",
                "description": "Sets the HTTP version for the check to use",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "1.1"
              }
            ]
          }
        },
        {
          "name": "last_modified",
          "type": "TypeInt",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "last_modified_by",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "metric",
          "type": "TypeSet",
          "description": "Configuration for a stream of metrics",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 0,
          "resource": {
            "name": "metric",
            "schemas": [
              {
                "name": "active",
                "type": "TypeBool",
                "description": "Enables or disables the metric",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "true"
              },
              {
                "name": "name",
                "type": "TypeString",
                "description": "Name of the metric",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "tags",
                "type": "TypeSet",
                "description": "Tags assigned to the metric",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "schema": {
                  "name": "tags",
                  "type": "TypeString",
                  "conflictsWith": [],
                  "optional": false,
                  "required": false,
                  "computed": false,
                  "forceNew": false,
                  "sensitive": false,
                  "minItems": 0,
                  "maxItems": 0
                }
              },
              {
                "name": "type",
                "type": "TypeString",
                "description": "Type of metric (e.g. numeric, histogram, text)",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "unit",
                "type": "TypeString",
                "description": "The unit of measurement for a metric",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "metric_limit",
          "type": "TypeInt",
          "description": "Setting a metric_limit will enable all (-1), disable (0), or allow up to the specified limit of metrics for this check (\"N+\", where N is a positive integer)",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "mysql",
          "type": "TypeSet",
          "description": "MySQL check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "mysql",
            "schemas": [
              {
                "name": "dsn",
                "type": "TypeString",
                "description": "The connect DSN for the MySQL instance",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "query",
                "type": "TypeString",
                "description": "The SQL to use as the query",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "The name of the check bundle that will be displayed in the web interface",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "notes",
          "type": "TypeString",
          "description": "Notes about this check bundle",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "period",
          "type": "TypeString",
          "description": "The period between each time the check is made",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "postgresql",
          "type": "TypeSet",
          "description": "PostgreSQL check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "postgresql",
            "schemas": [
              {
                "name": "dsn",
                "type": "TypeString",
                "description": "The connect DSN for the PostgreSQL instance",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "query",
                "type": "TypeString",
                "description": "The SQL to use as the query",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "reverse_connect_urls",
          "type": "TypeList",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "reverse_connect_urls",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "statsd",
          "type": "TypeSet",
          "description": "statsd check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "statsd",
            "schemas": [
              {
                "name": "source_ip",
                "type": "TypeString",
                "description": "The source IP of the statsd metrics stream",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "tags",
          "type": "TypeSet",
          "description": "A list of tags assigned to the check",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "tags",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "target",
          "type": "TypeString",
          "description": "The target of the check (e.g. hostname, URL, IP, etc)",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "tcp",
          "type": "TypeSet",
          "description": "TCP check configuration",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 1,
          "resource": {
            "name": "tcp",
            "schemas": [
              {
                "name": "banner_regexp",
                "type": "TypeString",
                "description": "This regular expression is matched against the response banner. If a match is not found, the check will be marked as bad.",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "ca_chain",
                "type": "TypeString",
                "description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks).",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "certificate_file",
                "type": "TypeString",
                "description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS checks).",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "ciphers",
                "type": "TypeString",
                "description": "A list of ciphers to be used when establishing a TLS connection",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "host",
                "type": "TypeString",
                "description": "Specifies the host name or IP address to connect to for this TCP check",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "key_file",
                "type": "TypeString",
                "description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "port",
                "type": "TypeInt",
                "description": "Specifies the port on which the management interface can be reached.",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "tls",
                "type": "TypeBool",
                "description": "Upgrade TCP connection to use TLS.",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "false"
              }
            ]
          }
        },
        {
          "name": "timeout",
          "type": "TypeString",
          "description": "The length of time in seconds (and fractions of a second) before the check will timeout if no response is returned to the collector",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "type",
          "type": "TypeString",
          "description": "The check type",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "uuids",
          "type": "TypeList",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "uuids",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        }
      ]
    },
    {
      "name": "circonus_contact_group",
      "schemas": [
        {
          "name": "aggregation_window",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "300s"
        },
        {
          "name": "alert_option",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "alert_option",
            "schemas": [
              {
                "name": "escalate_after",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "escalate_to",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "reminder",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "severity",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "email",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "email",
            "schemas": [
              {
                "name": "address",
                "type": "TypeString",
                "conflictsWith": [
                  "email.user"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "user",
                "type": "TypeString",
                "conflictsWith": [
                  "email.address"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "http",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "http",
            "schemas": [
              {
                "name": "address",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "format",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "json"
              },
              {
                "name": "method",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "POST"
              }
            ]
          }
        },
        {
          "name": "irc",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "irc",
            "schemas": [
              {
                "name": "user",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "last_modified",
          "type": "TypeInt",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "last_modified_by",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "long_message",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "long_subject",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "long_summary",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "name",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "pager_duty",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "pager_duty",
            "schemas": [
              {
                "name": "contact_group_fallback",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "service_key",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": true,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "webhook_url",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "short_message",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "short_summary",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "slack",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "slack",
            "schemas": [
              {
                "name": "buttons",
                "type": "TypeBool",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "true"
              },
              {
                "name": "channel",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "contact_group_fallback",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "team",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "username",
                "type": "TypeString",
                "description": "Username Slackbot uses in Slack to deliver a notification",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "Circonus"
              }
            ]
          }
        },
        {
          "name": "sms",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "sms",
            "schemas": [
              {
                "name": "address",
                "type": "TypeString",
                "conflictsWith": [
                  "sms.user"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "user",
                "type": "TypeString",
                "conflictsWith": [
                  "sms.address"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "tags",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "tags",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "victorops",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "victorops",
            "schemas": [
              {
                "name": "api_key",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": true,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "contact_group_fallback",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "critical",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "info",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "team",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "warning",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "xmpp",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "xmpp",
            "schemas": [
              {
                "name": "address",
                "type": "TypeString",
                "conflictsWith": [
                  "xmpp.user"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "user",
                "type": "TypeString",
                "conflictsWith": [
                  "xmpp.address"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        }
      ]
    },
    {
      "name": "circonus_graph",
      "schemas": [
        {
          "name": "description",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "graph_style",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "line"
        },
        {
          "name": "left",
          "type": "TypeMap",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "line_style",
          "type": "TypeString",
          "description": "How the line should change between point. A string containing either 'stepped', 'interpolated' or null.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "stepped"
        },
        {
          "name": "metric",
          "type": "TypeList",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 0,
          "resource": {
            "name": "metric",
            "schemas": [
              {
                "name": "active",
                "type": "TypeBool",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "true"
              },
              {
                "name": "alpha",
                "type": "TypeFloat",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "axis",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "left"
              },
              {
                "name": "caql",
                "type": "TypeString",
                "conflictsWith": [
                  "metric.check",
                  "metric.metric_name"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "check",
                "type": "TypeString",
                "conflictsWith": [
                  "metric.caql"
                ],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "color",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "formula",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "function",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "legend_formula",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "metric_name",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "metric_type",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "name",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "stack",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "metric_cluster",
          "type": "TypeList",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 0,
          "resource": {
            "name": "metric_cluster",
            "schemas": [
              {
                "name": "active",
                "type": "TypeBool",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "true"
              },
              {
                "name": "aggregate",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "none"
              },
              {
                "name": "axis",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "default": "left"
              },
              {
                "name": "color",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "name",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "query",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "name",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "notes",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "right",
          "type": "TypeMap",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "tags",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "tags",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        }
      ]
    },
    {
      "name": "circonus_metric",
      "schemas": [
        {
          "name": "active",
          "type": "TypeBool",
          "description": "Enables or disables the metric",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "Name of the metric",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "tags",
          "type": "TypeSet",
          "description": "Tags assigned to the metric",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "tags",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "type",
          "type": "TypeString",
          "description": "Type of metric (e.g. numeric, histogram, text)",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "unit",
          "type": "TypeString",
          "description": "The unit of measurement for a metric",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "circonus_metric_cluster",
      "schemas": [
        {
          "name": "description",
          "type": "TypeString",
          "description": "A description of the metric cluster",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "id",
          "type": "TypeString",
          "description": "The ID of this metric cluster",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "The name of the metric cluster",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "query",
          "type": "TypeSet",
          "description": "A metric cluster query definition",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 0,
          "resource": {
            "name": "query",
            "schemas": [
              {
                "name": "definition",
                "type": "TypeString",
                "description": "A query to select a collection of metric streams",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "type",
                "type": "TypeString",
                "description": "The operation to perform on the matching metric streams",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "tags",
          "type": "TypeSet",
          "description": "A list of tags assigned to the metric cluster",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "tags",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        }
      ]
    },
    {
      "name": "circonus_rule_set",
      "schemas": [
        {
          "name": "check",
          "type": "TypeString",
          "description": "The CID of the check that contains the metric for this rule set",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "if",
          "type": "TypeList",
          "description": "A rule to execute for this rule set",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 1,
          "maxItems": 0,
          "resource": {
            "name": "if",
            "schemas": [
              {
                "name": "then",
                "type": "TypeSet",
                "description": "Description of the action(s) to take when this rule set is active",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 1,
                "resource": {
                  "name": "then",
                  "schemas": [
                    {
                      "name": "after",
                      "type": "TypeString",
                      "description": "The length of time we should wait before contacting the contact groups after this ruleset has faulted.",
                      "conflictsWith": [],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "notify",
                      "type": "TypeList",
                      "description": "List of contact groups to notify at the following appropriate severity if this rule set is active.",
                      "conflictsWith": [],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 1,
                      "maxItems": 0,
                      "schema": {
                        "name": "notify",
                        "type": "TypeString",
                        "conflictsWith": [],
                        "optional": false,
                        "required": false,
                        "computed": false,
                        "forceNew": false,
                        "sensitive": false,
                        "minItems": 0,
                        "maxItems": 0
                      }
                    },
                    {
                      "name": "severity",
                      "type": "TypeInt",
                      "description": "Send a notification at this severity level.",
                      "conflictsWith": [],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0,
                      "default": "1"
                    }
                  ]
                }
              },
              {
                "name": "value",
                "type": "TypeSet",
                "description": "Predicate that the rule set uses to evaluate a stream of metrics",
                "conflictsWith": [],
                "optional": true,
                "required": false,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 1,
                "resource": {
                  "name": "value",
                  "schemas": [
                    {
                      "name": "absent",
                      "type": "TypeString",
                      "description": "Fire the rule set if there has been no data for the given metric stream over the last duration",
                      "conflictsWith": [
                        "if.value.changed",
                        "if.value.contains",
                        "if.value.match",
                        "if.value.not_match",
                        "if.value.min_value",
                        "if.value.not_contain",
                        "if.value.max_value",
                        "if.value.over"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "changed",
                      "type": "TypeBool",
                      "description": "Boolean indicating the value has changed",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.contains",
                        "if.value.match",
                        "if.value.not_match",
                        "if.value.min_value",
                        "if.value.not_contain",
                        "if.value.max_value",
                        "if.value.over"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "contains",
                      "type": "TypeString",
                      "description": "Fire the rule set if the text metric contain the following string",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.changed",
                        "if.value.match",
                        "if.value.not_match",
                        "if.value.min_value",
                        "if.value.not_contain",
                        "if.value.max_value",
                        "if.value.over"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "match",
                      "type": "TypeString",
                      "description": "Fire the rule set if the text metric exactly match the following string",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.changed",
                        "if.value.contains",
                        "if.value.not_match",
                        "if.value.min_value",
                        "if.value.not_contain",
                        "if.value.max_value",
                        "if.value.over"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "max_value",
                      "type": "TypeString",
                      "description": "Fire the rule set if the numeric value is more than the specified value",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.changed",
                        "if.value.contains",
                        "if.value.match",
                        "if.value.not_match",
                        "if.value.min_value",
                        "if.value.not_contain"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "min_value",
                      "type": "TypeString",
                      "description": "Fire the rule set if the numeric value less than the specified value",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.changed",
                        "if.value.contains",
                        "if.value.match",
                        "if.value.not_match",
                        "if.value.not_contain",
                        "if.value.max_value"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "not_contain",
                      "type": "TypeString",
                      "description": "Fire the rule set if the text metric does not contain the following string",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.changed",
                        "if.value.contains",
                        "if.value.match",
                        "if.value.not_match",
                        "if.value.min_value",
                        "if.value.max_value",
                        "if.value.over"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "not_match",
                      "type": "TypeString",
                      "description": "Fire the rule set if the text metric not match the following string",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.changed",
                        "if.value.contains",
                        "if.value.match",
                        "if.value.min_value",
                        "if.value.not_contain",
                        "if.value.max_value",
                        "if.value.over"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "over",
                      "type": "TypeSet",
                      "description": "Use a derived value using a window",
                      "conflictsWith": [
                        "if.value.absent",
                        "if.value.changed",
                        "if.value.contains",
                        "if.value.match",
                        "if.value.not_match",
                        "if.value.not_contain"
                      ],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 1,
                      "resource": {
                        "name": "over",
                        "schemas": [
                          {
                            "name": "last",
                            "type": "TypeString",
                            "description": "Duration over which data from the last interval is examined",
                            "conflictsWith": [],
                            "optional": true,
                            "required": false,
                            "computed": false,
                            "forceNew": false,
                            "sensitive": false,
                            "minItems": 0,
                            "maxItems": 0,
                            "default": "300s"
                          },
                          {
                            "name": "using",
                            "type": "TypeString",
                            "description": "Define the window funciton to use over the last duration",
                            "conflictsWith": [],
                            "optional": true,
                            "required": false,
                            "computed": false,
                            "forceNew": false,
                            "sensitive": false,
                            "minItems": 0,
                            "maxItems": 0,
                            "default": "average"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "link",
          "type": "TypeString",
          "description": "URL to show users when this rule set is active (e.g. wiki)",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "metric_name",
          "type": "TypeString",
          "description": "The name of the metric stream within a check to register the rule set with",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "metric_type",
          "type": "TypeString",
          "description": "The type of data flowing through the specified metric stream",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "numeric"
        },
        {
          "name": "notes",
          "type": "TypeString",
          "description": "Notes describing this rule set",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "parent",
          "type": "TypeString",
          "description": "Parent CID that must be healthy for this rule set to be active",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "tags",
          "type": "TypeSet",
          "description": "Tags associated with this rule set",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "tags",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        }
      ]
    }
  ],
  "dataSources": [
    {
      "name": "circonus_account",
      "schemas": [
        {
          "name": "address1",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "address2",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "cc_email",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "city",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "contact_groups",
          "type": "TypeList",
          "description": "Contact Groups in this account",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "contact_groups",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "country",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "current",
          "type": "TypeBool",
          "conflictsWith": [
            "id"
          ],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "description",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "id",
          "type": "TypeString",
          "conflictsWith": [
            "current"
          ],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "invites",
          "type": "TypeList",
          "description": "Outstanding invites attached to the account",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "invites",
            "schemas": [
              {
                "name": "email",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "role",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "name",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "owner",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "state",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "timezone",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "ui_base_url",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "usage",
          "type": "TypeList",
          "description": "Account's usage limits",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "usage",
            "schemas": [
              {
                "name": "limit",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "type",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "used",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "users",
          "type": "TypeList",
          "description": "Users attached to this account",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "users",
            "schemas": [
              {
                "name": "id",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "role",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        }
      ]
    },
    {
      "name": "circonus_collector",
      "schemas": [
        {
          "name": "details",
          "type": "TypeList",
          "description": "Details associated with individual collectors (a.k.a. broker)",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "details",
            "schemas": [
              {
                "name": "cn",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "external_host",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "external_port",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "ip",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "min_version",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "modules",
                "type": "TypeList",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0,
                "schema": {
                  "name": "modules",
                  "type": "TypeString",
                  "conflictsWith": [],
                  "optional": false,
                  "required": false,
                  "computed": false,
                  "forceNew": false,
                  "sensitive": false,
                  "minItems": 0,
                  "maxItems": 0
                }
              },
              {
                "name": "port",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "skew",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "status",
                "type": "TypeString",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "version",
                "type": "TypeInt",
                "conflictsWith": [],
                "optional": false,
                "required": false,
                "computed": true,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              }
            ]
          }
        },
        {
          "name": "id",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "latitude",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "longitude",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "name",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "tags",
          "type": "TypeSet",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "tags",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "type",
          "type": "TypeString",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    }
  ]
}
