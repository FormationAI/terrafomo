{
  "name": "nomad",
  "schemas": [
    {
      "name": "address",
      "type": "TypeString",
      "description": "URL of the root of the target Nomad agent.",
      "conflictsWith": [],
      "optional": false,
      "required": true,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "ca_file",
      "type": "TypeString",
      "description": "A path to a PEM-encoded certificate authority used to verify the remote agent's certificate.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "cert_file",
      "type": "TypeString",
      "description": "A path to a PEM-encoded certificate provided to the remote agent; requires use of key_file.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "key_file",
      "type": "TypeString",
      "description": "A path to a PEM-encoded private key, required if cert_file is specified.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "region",
      "type": "TypeString",
      "description": "Region of the target Nomad agent.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "secret_id",
      "type": "TypeString",
      "description": "ACL token secret for API requests.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    },
    {
      "name": "vault_token",
      "type": "TypeString",
      "description": "Vault token if policies are specified in the job file.",
      "conflictsWith": [],
      "optional": true,
      "required": false,
      "computed": false,
      "forceNew": false,
      "sensitive": false,
      "minItems": 0,
      "maxItems": 0
    }
  ],
  "resources": [
    {
      "name": "nomad_acl_policy",
      "schemas": [
        {
          "name": "description",
          "type": "TypeString",
          "description": "Description for this policy.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "Unique name for this policy.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "rules_hcl",
          "type": "TypeString",
          "description": "HCL or JSON representation of the rules to enforce on this policy. Use file() to specify a file as input.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "nomad_acl_token",
      "schemas": [
        {
          "name": "accessor_id",
          "type": "TypeString",
          "description": "Nomad-generated ID for this token.",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "global",
          "type": "TypeBool",
          "description": "Whether the token should be replicated to all regions or not.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "false"
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "Human-readable name for this token.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "policies",
          "type": "TypeSet",
          "description": "The ACL policies to associate with the token, if it's a 'client' type.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "acl_token_policies",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        },
        {
          "name": "secret_id",
          "type": "TypeString",
          "description": "The value that grants access to Nomad.",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": true,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "type",
          "type": "TypeString",
          "description": "The type of token to create, 'client' or 'management'.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "nomad_job",
      "schemas": [
        {
          "name": "deregister_on_destroy",
          "type": "TypeBool",
          "description": "If true, the job will be deregistered on destroy.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "deregister_on_id_change",
          "type": "TypeBool",
          "description": "If true, the job will be deregistered when the job ID changes.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "default": "true"
        },
        {
          "name": "jobspec",
          "type": "TypeString",
          "description": "Job specification. If you want to point to a file use the file() function.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "policy_override",
          "type": "TypeBool",
          "description": "Override any soft-mandatory Sentinel policies that fail.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "nomad_namespace",
      "schemas": [
        {
          "name": "description",
          "type": "TypeString",
          "description": "Description for this namespace.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "Unique name for this namespace.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "quota",
          "type": "TypeString",
          "description": "Quota to set for this namespace.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "nomad_quota_specification",
      "schemas": [
        {
          "name": "description",
          "type": "TypeString",
          "description": "Description for this quota specification.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "limits",
          "type": "TypeSet",
          "description": "Limits encapsulated by this quota specification.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "resource": {
            "name": "quota_specification_limits",
            "schemas": [
              {
                "name": "region",
                "type": "TypeString",
                "description": "Region in which this limit has affect.",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 0
              },
              {
                "name": "region_limit",
                "type": "TypeSet",
                "description": "The limit applied to this region.",
                "conflictsWith": [],
                "optional": false,
                "required": true,
                "computed": false,
                "forceNew": false,
                "sensitive": false,
                "minItems": 0,
                "maxItems": 1,
                "resource": {
                  "name": "limits_region_limit",
                  "schemas": [
                    {
                      "name": "cpu",
                      "type": "TypeInt",
                      "conflictsWith": [],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    },
                    {
                      "name": "memory_mb",
                      "type": "TypeInt",
                      "conflictsWith": [],
                      "optional": true,
                      "required": false,
                      "computed": false,
                      "forceNew": false,
                      "sensitive": false,
                      "minItems": 0,
                      "maxItems": 0
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "Unique name for this quota specification.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    },
    {
      "name": "nomad_sentinel_policy",
      "schemas": [
        {
          "name": "description",
          "type": "TypeString",
          "description": "Description for this policy.",
          "conflictsWith": [],
          "optional": true,
          "required": false,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "enforcement_level",
          "type": "TypeString",
          "description": "Specifies the enforcement level of the policy.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "name",
          "type": "TypeString",
          "description": "Unique name for this policy.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": true,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "policy",
          "type": "TypeString",
          "description": "The Sentinel policy.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        },
        {
          "name": "scope",
          "type": "TypeString",
          "description": "Specifies the scope for this policy. Only 'submit-job' is currently supported.",
          "conflictsWith": [],
          "optional": false,
          "required": true,
          "computed": false,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0
        }
      ]
    }
  ],
  "dataSources": [
    {
      "name": "nomad_regions",
      "schemas": [
        {
          "name": "regions",
          "type": "TypeList",
          "conflictsWith": [],
          "optional": false,
          "required": false,
          "computed": true,
          "forceNew": false,
          "sensitive": false,
          "minItems": 0,
          "maxItems": 0,
          "schema": {
            "name": "regions_regions",
            "type": "TypeString",
            "conflictsWith": [],
            "optional": false,
            "required": false,
            "computed": false,
            "forceNew": false,
            "sensitive": false,
            "minItems": 0,
            "maxItems": 0
          }
        }
      ]
    }
  ]
}
