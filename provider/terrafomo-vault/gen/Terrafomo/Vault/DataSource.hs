-- This module is auto-generated.

{-# LANGUAGE DataKinds              #-}
{-# LANGUAGE DeriveGeneric          #-}
{-# LANGUAGE DuplicateRecordFields  #-}
{-# LANGUAGE FlexibleContexts       #-}
{-# LANGUAGE FlexibleInstances      #-}
{-# LANGUAGE FunctionalDependencies #-}
{-# LANGUAGE MultiParamTypeClasses  #-}
{-# LANGUAGE NoImplicitPrelude      #-}
{-# LANGUAGE OverloadedStrings      #-}
{-# LANGUAGE TemplateHaskell        #-}
{-# LANGUAGE TypeFamilies           #-}
{-# LANGUAGE UndecidableInstances   #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

-- |
-- Module      : Terrafomo.Vault.DataSource
-- Copyright   : (c) 2017 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+terrafomo@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
module Terrafomo.Vault.DataSource where

import Data.Text (Text)

import GHC.Base     (Eq)
import GHC.Generics (Generic)
import GHC.Show     (Show)

import Terrafomo.Syntax.Attribute (Attr, Computed)

import qualified Terrafomo.Syntax.Provider as Qual
import qualified Terrafomo.Vault as Qual
import qualified Terrafomo.Syntax.TH as TH

{- | The @vault_aws_access_credentials@ Vault datasource.

Reads AWS credentials from an AWS secret backend in Vault. ~> Important All
data retrieved from Vault will be written in cleartext to state file
generated by Terraform, will appear in the console output when Terraform
runs, and may be included in plan files if secrets are interpolated into any
resource attributes. Protect these artifacts accordingly. See
<../index.html> for more details.
-}
data AwsAccessCredentialsDataSource = AwsAccessCredentialsDataSource
    { _backend :: !(Attr Text)
      {- ^ (Required) The path to the AWS secret backend to read credentials from, with no leading or trailing @/@ s. -}
    , _role :: !(Attr Text)
      {- ^ (Required) The name of the AWS secret backend role to read credentials from, with no leading or trailing @/@ s. -}
    , _type' :: !(Attr Text)
      {- ^ (Optional) The type of credentials to read. Defaults to @"creds"@ , which just returns an AWS Access Key ID and Secret Key. Can also be set to @"sts"@ , which will return a security token in addition to the keys. -}
    } deriving (Show, Eq, Generic)

type instance Computed AwsAccessCredentialsDataSource
    = '[ '("access_key", Text)
         {- - The AWS Access Key ID returned by Vault. -}
      , '("lease_duration", Text)
         {- - The duration of the secret lease, in seconds relative to the time the data was requested. Once this time has passed any plan generated with this data may fail to apply. -}
      , '("lease_id", Text)
         {- - The lease identifier assigned by Vault. -}
      , '("lease_renewable", Text)
         {- - @true@ if the lease can be renewed using Vault's @sys/renew/{lease-id}@ endpoint. Terraform does not currently support lease renewal, and so it will request a new lease each time this data source is refreshed. -}
      , '("lease_start_time", Text)
         {- - As a convenience, this records the current time on the computer where Terraform is running when the data is requested. This can be used to approximate the absolute time represented by @lease_duration@ , though users must allow for any clock drift and response latency relative to the Vault server. -}
      , '("secret_key", Text)
         {- - The AWS Secret Key returned by Vault. -}
      , '("security_token", Text)
         {- - The STS token returned by Vault, if any. -}
       ]

$(TH.makeDataSource
    "vault_aws_access_credentials"
    ''Qual.Vault
    ''AwsAccessCredentialsDataSource)

{- | The @vault_generic_secret@ Vault datasource.

Reads arbitrary data from a given path in Vault. This resource is primarily
intended to be used with
<https://www.vaultproject.io/docs/secrets/generic/index.html> , but it is
also compatible with any other Vault endpoint that supports the @vault read@
command. ~> Important All data retrieved from Vault will be written in
cleartext to state file generated by Terraform, will appear in the console
output when Terraform runs, and may be included in plan files if secrets are
interpolated into any resource attributes. Protect these artifacts
accordingly. See <../index.html> for more details.
-}
data GenericSecretDataSource = GenericSecretDataSource
    { _allow_read :: !(Attr Text)
      {- ^ (Optional) True/false. Set this to true if your vault authentication is able to read the data, this allows the resource to be compared and updated. Defaults to false. -}
    , _data_json :: !(Attr Text)
      {- ^ (Required) String containing a JSON-encoded object that will be written as the secret data at the given path. -}
    , _path :: !(Attr Text)
      {- ^ (Required) The full logical path from which to request data. To read data from the "generic" secret backend mounted in Vault by default, this should be prefixed with @secret/@ . Reading from other backends with this data source is possible; consult each backend's documentation to see which endpoints support the @GET@ method. -}
    } deriving (Show, Eq, Generic)

$(TH.makeDataSource
    "vault_generic_secret"
    ''Qual.Vault
    ''GenericSecretDataSource)
