_name: aws_api_gateway_integration
arguments:
  request_parameters:
    required: false
    help: ! '(Optional) A map of request query string parameters and headers that
      should be passed to the backend responder. For example: @request_parameters
      = { "integration.request.header.X-Some-Other-Header" = "method.request.header.X-Some-Header"
      }@'
    type: Text
  credentials:
    required: false
    help: (Optional) The credentials required for the integration. For @AWS@ integrations,
      2 options are available. To specify an IAM Role for Amazon API Gateway to assume,
      use the role's ARN. To require that the caller's identity be passed through
      from the request, specify the string @arn:aws:iam::\*:user/\*@ .
    type: Text
  cache_key_namespace:
    required: false
    help: (Optional) The integration's cache namespace.
    type: Text
  uri:
    required: false
    help: (Optional) The input's URI (HTTP, AWS). Required if @type@ is @HTTP@ or
      @AWS@ . For HTTP integrations, the URI must be a fully formed, encoded HTTP(S)
      URL according to the RFC-3986 specification . For AWS integrations, the URI
      should be of the form @arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}@
      . @region@ , @subdomain@ and @service@ are used to determine the right endpoint.
      e.g. @arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:012345678901:function:my-func/invocations@
    type: Text
  passthrough_behavior:
    required: false
    help: (Optional) The integration passthrough behavior ( @WHEN_NO_MATCH@ , @WHEN_NO_TEMPLATES@
      , @NEVER@ ). Required if @request_templates@ is used.
    type: Text
  cache_key_parameters:
    required: false
    help: (Optional) A list of cache key parameters for the integration.
    type: Text
  integration_http_method:
    required: false
    help: (Optional) The integration HTTP method ( @GET@ , @POST@ , @PUT@ , @DELETE@
      , @HEAD@ , @OPTION@ ) specifying how API Gateway will interact with the back
      end. Required if @type@ is @AWS@ , @AWS_PROXY@ , @HTTP@ or @HTTP_PROXY@ . Not
      all methods are compatible with all @AWS@ integrations. e.g. Lambda function
      <https://github.com/awslabs/aws-apigateway-importer/issues/9#issuecomment-129651005>
      via @POST@ .
    type: Text
  type':
    required: true
    help: (Required) The integration input's type (HTTP, MOCK, AWS, AWS_PROXY, HTTP_PROXY)
    type: Text
  rest_api_id:
    required: true
    help: (Required) The ID of the associated REST API.
    type: Text
  request_templates:
    required: false
    help: (Optional) A map of the integration's request templates.
    type: Text
  http_method:
    required: true
    help: (Required) The HTTP method ( @GET@ , @POST@ , @PUT@ , @DELETE@ , @HEAD@
      , @OPTION@ , @ANY@ ) when calling the associated resource.
    type: Text
  resource_id:
    required: true
    help: (Required) The API resource ID.
    type: Text
  request_parameters_in_json:
    required: true
    help: ! '- Deprecated , use @request_parameters@ instead.'
    type: Text
  content_handling:
    required: false
    help: (Optional) Specifies how to handle request payload content type conversions.
      Supported values are @CONVERT_TO_BINARY@ and @CONVERT_TO_TEXT@ . If this property
      is not defined, the request payload will be passed through from the method request
      to integration request without modification, provided that the passthroughBehaviors
      is configured to support payload pass-through.
    type: Text
attributes: {}
about: Provides an HTTP Method Integration for an API Gateway Integration.
examples: []
