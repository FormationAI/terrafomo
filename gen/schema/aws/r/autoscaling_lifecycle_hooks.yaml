_name: aws_autoscaling_lifecycle_hook
arguments:
  heartbeat_timeout:
    required: false
    help: (Optional) Defines the amount of time, in seconds, that can elapse before
      the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling
      performs the action defined in the DefaultResult parameter
    type: Text
  autoscaling_group_name:
    required: true
    help: (Required) The name of the Auto Scaling group to which you want to assign
      the lifecycle hook
    type: Text
  default_result:
    required: false
    help: (Optional) Defines the action the Auto Scaling group should take when the
      lifecycle hook timeout elapses or if an unexpected failure occurs. The value
      for this parameter can be either CONTINUE or ABANDON. The default value for
      this parameter is ABANDON.
    type: Text
  role_arn:
    required: false
    help: (Optional) The ARN of the IAM role that allows the Auto Scaling group to
      publish to the specified notification target.
    type: Text
  name:
    required: true
    help: (Required) The name of the lifecycle hook.
    type: Text
  notification_metadata:
    required: false
    help: (Optional) Contains additional information that you want to include any
      time Auto Scaling sends a message to the notification target.
    type: Text
  lifecycle_transition:
    required: true
    help: (Required) The instance state to which you want to attach the lifecycle
      hook. For a list of lifecycle hook types, see <https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-lifecycle-hook-types.html#examples>
    type: Text
  notification_target_arn:
    required: false
    help: (Optional) The ARN of the notification target that Auto Scaling will use
      to notify you when an instance is in the transition state for the lifecycle
      hook. This ARN target can be either an SQS queue or an SNS topic.
    type: Text
attributes: {}
about: Provides an AutoScaling Lifecycle Hook resource. ~> Terraform has two types
  of ways you can add lifecycle hooks - via the @initial_lifecycle_hook@ attribute
  from the </docs/providers/aws/r/autoscaling_group.html> resource, or via this one.
  Hooks added via this resource will not be added until the autoscaling group has
  been created, and depending on your </docs/providers/aws/r/autoscaling_group.html#waiting-for-capacity>
  settings, after the initial instances have been launched, creating unintended behavior.
  If you need hooks to run on all instances, add them with @initial_lifecycle_hook@
  in </docs/providers/aws/r/autoscaling_group.html> , but take care to not duplicate
  those hooks with this resource.
examples: []
