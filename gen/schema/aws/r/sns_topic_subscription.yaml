_name: aws_sns_topic_subscription
arguments:
  endpoint_auto_confirms:
    required: false
    help: (Optional) Boolean indicating whether the end point is capable of <http://docs.aws.amazon.com/sns/latest/dg/SendMessageToHttp.html#SendMessageToHttp.prepare>
      e.g., PagerDuty (default is false)
    type: Text
  topic_arn:
    required: true
    help: (Required) The ARN of the SNS topic to subscribe to
    type: Text
  raw_message_delivery:
    required: false
    help: (Optional) Boolean indicating whether or not to enable raw message delivery
      (the original message is directly passed, not wrapped in JSON with the original
      message in the message property) (default is false).
    type: Text
  protocol:
    required: true
    help: ! '(Required) The protocol to use. The possible values for this are: @sqs@
      , @sms@ , @lambda@ , @application@ . ( @http@ or @https@ are partially supported,
      see below) ( @email@ is option but unsupported, see below).'
    type: Text
  confirmation_timeout_in_minutes:
    required: false
    help: (Optional) Integer indicating number of minutes to wait in retying mode
      for fetching subscription arn before marking it as failure. Only applicable
      for http and https protocols (default is 1 minute).
    type: Text
  endpoint:
    required: true
    help: (Required) The endpoint to send data to, the contents will vary with the
      protocol. (see below for more information)
    type: Text
attributes: {}
about: Provides a resource for subscribing to SNS topics. Requires that an SNS topic
  exist for the subscription to attach to. This resource allows you to automatically
  place messages sent to SNS topics in SQS queues, send them as HTTP(S) POST requests
  to a given endpoint, send SMS messages, or notify devices / applications. The most
  likely use case for Terraform users will probably be SQS queues. ~> If SNS topic
  and SQS queue are in different AWS regions it is important to place the "aws_sns_topic_subscription"
  into the terraform configuration of the region with the SQS queue. If "aws_sns_topic_subscription"
  is placed in the terraform configuration of the region with the SNS topic terraform
  will fail to create the subscription. ~> Setup of cross-account subscriptions from
  SNS topics to SQS queues requires Terraform to have access to BOTH accounts. ~>
  If SNS topic and SQS queue are in different AWS accounts but the same region it
  is important to place the "aws_sns_topic_subscription" into the terraform configuration
  of the account with the SQS queue. If "aws_sns_topic_subscription" is placed in
  the terraform configuration of the account with the SNS topic terraform creates
  the subscriptions but does not keep state and tries to re-create the subscription
  at every apply. ~> If SNS topic and SQS queue are in different AWS accounts and
  different AWS regions it is important to recognize that the subscription needs to
  be initiated from the account with the SQS queue but in the region of the SNS topic.
examples: []
